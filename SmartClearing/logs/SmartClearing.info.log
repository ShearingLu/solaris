11-03 00:55:18.993[I][      main][AnnotationConfigApplicationContext      ][ 583] →→→ Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2e8e8225: startup date [Sat Nov 03 00:55:18 CST 2018]; root of context hierarchy
11-03 00:55:19.527[I][nd-preinit][Version                                 ][  30] →→→ HV000001: Hibernate Validator 5.3.5.Final
11-03 00:55:19.564[I][      main][AutowiredAnnotationBeanPostProcessor    ][ 155] →→→ JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11-03 00:55:19.665[I][      main][PostProcessorRegistrationDelegate$BeanPostProcessorChecker][ 325] →→→ Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3b104e01] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11-03 00:55:20.751[I][      main][SmartClearingStartup                    ][ 597] →→→ The following profiles are active: prod
11-03 00:55:20.784[I][      main][AnnotationConfigEmbeddedWebApplicationContext][ 583] →→→ Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@63e5e5b4: startup date [Sat Nov 03 00:55:20 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2e8e8225
11-03 00:55:23.131[I][      main][RepositoryConfigurationDelegate         ][ 165] →→→ Multiple Spring Data modules found, entering strict repository configuration mode!
11-03 00:55:23.329[I][      main][RepositoryConfigurationDelegate         ][ 165] →→→ Multiple Spring Data modules found, entering strict repository configuration mode!
11-03 00:55:23.417[I][      main][RepositoryConfigurationExtensionSupport ][ 270] →→→ Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.smart.pay.clearing.repository.PlatformProfitRecordRepository.
11-03 00:55:23.419[I][      main][RepositoryConfigurationExtensionSupport ][ 270] →→→ Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.smart.pay.clearing.repository.OrderMarkupLogRepository.
11-03 00:55:23.421[I][      main][RepositoryConfigurationExtensionSupport ][ 270] →→→ Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.smart.pay.clearing.repository.EquipmentTrxStatisticsRepository.
11-03 00:55:23.422[I][      main][RepositoryConfigurationExtensionSupport ][ 270] →→→ Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.smart.pay.clearing.repository.PaymentOrderRepository.
11-03 00:55:23.424[I][      main][RepositoryConfigurationExtensionSupport ][ 270] →→→ Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.smart.pay.clearing.repository.MerchantMonthStatisticsRepository.
11-03 00:55:23.425[I][      main][RepositoryConfigurationExtensionSupport ][ 270] →→→ Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.smart.pay.clearing.repository.MerchantDayStatisticsRepository.
11-03 00:55:24.053[I][      main][GenericScope                            ][ 263] →→→ BeanFactory id=d0993ae0-dc12-395d-a662-c4de8b94064b
11-03 00:55:24.099[I][      main][AutowiredAnnotationBeanPostProcessor    ][ 155] →→→ JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11-03 00:55:24.520[I][      main][PostProcessorRegistrationDelegate$BeanPostProcessorChecker][ 325] →→→ Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1ef64b04] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11-03 00:55:24.795[I][      main][PostProcessorRegistrationDelegate$BeanPostProcessorChecker][ 325] →→→ Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$5122f145] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11-03 00:55:24.816[I][      main][PostProcessorRegistrationDelegate$BeanPostProcessorChecker][ 325] →→→ Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3b104e01] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11-03 00:55:25.757[I][      main][TomcatEmbeddedServletContainer          ][  89] →→→ Tomcat initialized with port(s): 0 (http)
11-03 00:55:25.775[I][      main][StandardService                         ][ 179] →→→ Starting service [Tomcat]
11-03 00:55:25.777[I][      main][StandardEngine                          ][ 179] →→→ Starting Servlet Engine: Apache Tomcat/8.5.20
11-03 00:55:26.347[I][tartStop-1][[/]                                     ][ 179] →→→ Initializing Spring embedded WebApplicationContext
11-03 00:55:26.348[I][tartStop-1][ContextLoader                           ][ 276] →→→ Root WebApplicationContext: initialization completed in 5564 ms
11-03 00:55:26.971[I][tartStop-1][ServletRegistrationBean                 ][ 190] →→→ Mapping servlet: 'dispatcherServlet' to [/]
11-03 00:55:26.982[I][tartStop-1][FilterRegistrationBean                  ][ 258] →→→ Mapping filter: 'metricsFilter' to: [/*]
11-03 00:55:26.983[I][tartStop-1][FilterRegistrationBean                  ][ 258] →→→ Mapping filter: 'characterEncodingFilter' to: [/*]
11-03 00:55:26.983[I][tartStop-1][FilterRegistrationBean                  ][ 258] →→→ Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
11-03 00:55:26.984[I][tartStop-1][FilterRegistrationBean                  ][ 258] →→→ Mapping filter: 'httpPutFormContentFilter' to: [/*]
11-03 00:55:26.984[I][tartStop-1][FilterRegistrationBean                  ][ 258] →→→ Mapping filter: 'requestContextFilter' to: [/*]
11-03 00:55:26.984[I][tartStop-1][FilterRegistrationBean                  ][ 258] →→→ Mapping filter: 'webRequestLoggingFilter' to: [/*]
11-03 00:55:26.984[I][tartStop-1][FilterRegistrationBean                  ][ 258] →→→ Mapping filter: 'applicationContextIdFilter' to: [/*]
11-03 00:55:27.521[I][      main][DruidDataSource                         ][ 922] →→→ {dataSource-1} inited
11-03 00:55:28.303[I][      main][LocalContainerEntityManagerFactoryBean  ][ 349] →→→ Building JPA container EntityManagerFactory for persistence unit 'default'
11-03 00:55:28.330[I][      main][LogHelper                               ][  31] →→→ HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
11-03 00:55:28.455[I][      main][Version                                 ][  37] →→→ HHH000412: Hibernate Core {5.0.12.Final}
11-03 00:55:28.457[I][      main][Environment                             ][ 213] →→→ HHH000206: hibernate.properties not found
11-03 00:55:28.460[I][      main][Environment                             ][ 317] →→→ HHH000021: Bytecode provider name : javassist
11-03 00:55:28.555[I][      main][Version                                 ][  66] →→→ HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
11-03 00:55:28.914[I][      main][Dialect                                 ][ 156] →→→ HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
11-03 00:55:30.173[I][      main][LocalContainerEntityManagerFactoryBean  ][ 379] →→→ Initialized JPA EntityManagerFactory for persistence unit 'default'
11-03 00:55:30.838[I][      main][QueryTranslatorFactoryInitiator         ][  47] →→→ HHH000397: Using ASTQueryTranslatorFactory
11-03 00:55:32.015[I][      main][ThreadPoolTaskExecutor                  ][ 165] →→→ Initializing ExecutorService 
11-03 00:55:32.035[I][      main][ThreadPoolTaskExecutor                  ][ 165] →→→ Initializing ExecutorService  'myAsync'
11-03 00:55:33.476[W][      main][URLConfigurationSource                  ][ 121] →→→ No URLs will be polled as dynamic configuration sources.
11-03 00:55:33.484[I][      main][URLConfigurationSource                  ][ 122] →→→ To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
11-03 00:55:33.503[W][      main][URLConfigurationSource                  ][ 121] →→→ No URLs will be polled as dynamic configuration sources.
11-03 00:55:33.504[I][      main][URLConfigurationSource                  ][ 122] →→→ To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
11-03 00:55:34.340[I][      main][RequestMappingHandlerAdapter            ][ 534] →→→ Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@63e5e5b4: startup date [Sat Nov 03 00:55:20 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2e8e8225
11-03 00:55:34.633[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartclearing/merchant/withdraworder/history],methods=[POST]}" onto public java.lang.Object com.smart.pay.clearing.controller.OrderController.queryMerchantWithdrawOrderHistory(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,org.springframework.data.domain.Sort$Direction,java.lang.String) throws java.lang.Exception
11-03 00:55:34.636[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartclearing/platform/withdraworder/history],methods=[POST]}" onto public java.lang.Object com.smart.pay.clearing.controller.OrderController.queryPlatformWithdrawOrderHistory(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,org.springframework.data.domain.Sort$Direction,java.lang.String) throws java.lang.Exception
11-03 00:55:34.637[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartclearing/order/update/equipmenttag],methods=[POST]}" onto public java.lang.Object com.smart.pay.clearing.controller.OrderController.updateEquipmentTag(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
11-03 00:55:34.638[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartclearing/platform/totalamount/query],methods=[POST]}" onto public java.lang.Object com.smart.pay.clearing.controller.OrderController.queryPlatformTotalAmount(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception
11-03 00:55:34.639[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartclearing/transaction/merorder/query],methods=[POST]}" onto public java.lang.Object com.smart.pay.clearing.controller.OrderController.queryTransactionMerchantOrder(javax.servlet.http.HttpServletRequest,java.lang.String) throws java.lang.Exception
11-03 00:55:34.640[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartclearing/order/withdraw/new],methods=[POST]}" onto public java.lang.Object com.smart.pay.clearing.controller.OrderController.createNewWithdrawOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
11-03 00:55:34.641[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartclearing/merchant/paymentorder/history],methods=[POST]}" onto public java.lang.Object com.smart.pay.clearing.controller.OrderController.queryMerchantPaymentOrderHistory(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,org.springframework.data.domain.Sort$Direction,java.lang.String) throws java.lang.Exception
11-03 00:55:34.641[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartclearing/platform/paymentorder/history],methods=[POST]}" onto public java.lang.Object com.smart.pay.clearing.controller.OrderController.queryPlatformPaymentOrderHistory(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,org.springframework.data.domain.Sort$Direction,java.lang.String) throws java.lang.Exception
11-03 00:55:34.642[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartclearing/agent/paymentorder/history],methods=[POST]}" onto public java.lang.Object com.smart.pay.clearing.controller.OrderController.queryPlatformPaymentOrderHistory(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,org.springframework.data.domain.Sort$Direction,java.lang.String) throws java.lang.Exception
11-03 00:55:34.643[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartclearing/merchant/sumamount/query],methods=[POST]}" onto public java.lang.Object com.smart.pay.clearing.controller.OrderController.queryMerchantSumAmount(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception
11-03 00:55:34.643[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartclearing/agent/sumamount/query],methods=[POST]}" onto public java.lang.Object com.smart.pay.clearing.controller.OrderController.queryAgentSumAmount(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception
11-03 00:55:34.644[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartclearing/merchant/totalcnts/query],methods=[POST]}" onto public java.lang.Object com.smart.pay.clearing.controller.OrderController.queryMerchantTotalCnts(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception
11-03 00:55:34.645[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartclearing/transaction/order/query],methods=[POST]}" onto public java.lang.Object com.smart.pay.clearing.controller.OrderController.queryTransactionOrder(javax.servlet.http.HttpServletRequest,java.lang.String) throws java.lang.Exception
11-03 00:55:34.646[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartclearing/transaction/outorder/query],methods=[POST]}" onto public java.lang.Object com.smart.pay.clearing.controller.OrderController.queryTransactionOutOrder(javax.servlet.http.HttpServletRequest,java.lang.String) throws java.lang.Exception
11-03 00:55:34.647[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartclearing/platform/totalcnts/query],methods=[POST]}" onto public java.lang.Object com.smart.pay.clearing.controller.OrderController.queryPlatformTotalCnts(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception
11-03 00:55:34.649[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartclearing/order/markup/online],methods=[POST]}" onto public java.lang.Object com.smart.pay.clearing.controller.OrderController.onlineMarkup(javax.servlet.http.HttpServletRequest)
11-03 00:55:34.650[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartclearing/order/markup/auto],methods=[POST]}" onto public java.lang.Object com.smart.pay.clearing.controller.OrderController.markupAuto(javax.servlet.http.HttpServletRequest)
11-03 00:55:34.650[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartclearing/order/notify/test],methods=[POST]}" onto public java.lang.Object com.smart.pay.clearing.controller.OrderController.testnotify(javax.servlet.http.HttpServletRequest)
11-03 00:55:34.651[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartclearing/order/new],methods=[POST]}" onto public java.lang.Object com.smart.pay.clearing.controller.OrderController.createNewOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal,java.math.BigDecimal,java.lang.String,java.lang.String,java.math.BigDecimal,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal,java.lang.String,java.lang.String,java.math.BigDecimal)
11-03 00:55:34.651[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartclearing/order/update],methods=[POST]}" onto public java.lang.Object com.smart.pay.clearing.controller.OrderController.updateOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
11-03 00:55:34.652[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartclearing/hand/callback],methods=[POST]}" onto public java.lang.Object com.smart.pay.clearing.controller.OrderController.handCallback(javax.servlet.http.HttpServletRequest,java.lang.String)
11-03 00:55:34.653[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartclearing/order/excel/download],methods=[GET]}" onto public java.lang.String com.smart.pay.clearing.controller.OrderController.downloadExcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.io.IOException,java.text.ParseException
11-03 00:55:34.654[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartclearing/profit/history],methods=[POST]}" onto public java.lang.Object com.smart.pay.clearing.controller.ProfitController.queryProfitHistory(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,org.springframework.data.domain.Sort$Direction,java.lang.String) throws java.lang.Exception
11-03 00:55:34.655[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartclearing/profit/sumamount],methods=[POST]}" onto public java.lang.Object com.smart.pay.clearing.controller.ProfitController.queryMerchantSumAmount(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception
11-03 00:55:34.656[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartclearing/agent/profit/history],methods=[POST]}" onto public java.lang.Object com.smart.pay.clearing.controller.ProfitController.queryAgentProfitHistory(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,org.springframework.data.domain.Sort$Direction,java.lang.String) throws java.lang.Exception
11-03 00:55:34.657[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartclearing/merchant/statis/month/update],methods=[POST]}" onto public java.lang.Object com.smart.pay.clearing.controller.TradeStatisticsController.updateMerchantMonthTradeStatistics(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
11-03 00:55:34.658[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartclearing/equipment/statis/day/update],methods=[POST]}" onto public java.lang.Object com.smart.pay.clearing.controller.TradeStatisticsController.updateEquipmentDayTradeStatistics(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
11-03 00:55:34.658[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartclearing/merchant/statis/day/update],methods=[POST]}" onto public java.lang.Object com.smart.pay.clearing.controller.TradeStatisticsController.updateMerchantDayTradeStatistics(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
11-03 00:55:34.659[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartclearing/merchant/statis/lastest],methods=[POST]}" onto public java.lang.Object com.smart.pay.clearing.controller.TradeStatisticsController.queryMerchantTradeStatistics(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String) throws java.lang.Exception
11-03 00:55:34.659[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartclearing/equipment/trxamount],methods=[POST]}" onto public java.lang.Object com.smart.pay.clearing.controller.TradeStatisticsController.findEquipmentAmountByTagAndDate(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String) throws java.lang.Exception
11-03 00:55:34.663[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
11-03 00:55:34.664[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
11-03 00:55:34.756[I][      main][SimpleUrlHandlerMapping                 ][ 362] →→→ Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11-03 00:55:34.756[I][      main][SimpleUrlHandlerMapping                 ][ 362] →→→ Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11-03 00:55:34.811[I][      main][ExceptionHandlerExceptionResolver       ][ 273] →→→ Detected @ExceptionHandler methods in getApiExceptionHander
11-03 00:55:34.897[I][      main][SimpleUrlHandlerMapping                 ][ 362] →→→ Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11-03 00:55:37.292[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
11-03 00:55:37.295[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
11-03 00:55:37.296[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11-03 00:55:37.297[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11-03 00:55:37.298[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11-03 00:55:37.299[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
11-03 00:55:37.300[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
11-03 00:55:37.302[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
11-03 00:55:37.304[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
11-03 00:55:37.305[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11-03 00:55:37.311[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
11-03 00:55:37.313[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
11-03 00:55:37.314[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11-03 00:55:37.317[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11-03 00:55:37.317[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
11-03 00:55:37.318[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
11-03 00:55:37.321[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
11-03 00:55:37.322[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
11-03 00:55:37.323[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11-03 00:55:37.324[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11-03 00:55:37.325[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11-03 00:55:37.326[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
11-03 00:55:37.327[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
11-03 00:55:37.328[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11-03 00:55:37.329[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11-03 00:55:37.332[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
11-03 00:55:37.333[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11-03 00:55:38.680[I][      main][AnnotationMBeanExporter                 ][ 431] →→→ Registering beans for JMX exposure on startup
11-03 00:55:38.682[I][      main][AnnotationMBeanExporter                 ][ 916] →→→ Bean with name 'getDataSource' has been autodetected for JMX exposure
11-03 00:55:38.701[I][      main][AnnotationMBeanExporter                 ][ 916] →→→ Bean with name 'environmentManager' has been autodetected for JMX exposure
11-03 00:55:38.704[I][      main][AnnotationMBeanExporter                 ][ 916] →→→ Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
11-03 00:55:38.706[I][      main][AnnotationMBeanExporter                 ][ 916] →→→ Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
11-03 00:55:38.707[I][      main][AnnotationMBeanExporter                 ][ 916] →→→ Bean with name 'restartEndpoint' has been autodetected for JMX exposure
11-03 00:55:38.709[I][      main][AnnotationMBeanExporter                 ][ 916] →→→ Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
11-03 00:55:38.710[I][      main][AnnotationMBeanExporter                 ][ 916] →→→ Bean with name 'refreshScope' has been autodetected for JMX exposure
11-03 00:55:38.716[I][      main][AnnotationMBeanExporter                 ][ 678] →→→ Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
11-03 00:55:38.738[I][      main][AnnotationMBeanExporter                 ][ 671] →→→ Located MBean 'getDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=getDataSource,type=DruidDataSource]
11-03 00:55:38.741[I][      main][AnnotationMBeanExporter                 ][ 678] →→→ Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
11-03 00:55:38.764[I][      main][AnnotationMBeanExporter                 ][ 678] →→→ Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
11-03 00:55:38.779[I][      main][AnnotationMBeanExporter                 ][ 678] →→→ Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
11-03 00:55:38.817[I][      main][AnnotationMBeanExporter                 ][ 678] →→→ Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=63e5e5b4,type=ConfigurationPropertiesRebinder]
11-03 00:55:38.828[I][      main][AnnotationMBeanExporter                 ][ 678] →→→ Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
11-03 00:55:38.831[I][      main][EndpointMBeanExporter                   ][ 431] →→→ Registering beans for JMX exposure on startup
11-03 00:55:39.987[I][      main][DefaultLifecycleProcessor               ][ 343] →→→ Starting beans in phase 0
11-03 00:55:39.991[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
11-03 00:55:40.001[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
11-03 00:55:40.015[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
11-03 00:55:40.019[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
11-03 00:55:40.022[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
11-03 00:55:40.028[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
11-03 00:55:40.032[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
11-03 00:55:40.035[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
11-03 00:55:40.039[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
11-03 00:55:40.052[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
11-03 00:55:40.056[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
11-03 00:55:40.061[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
11-03 00:55:40.065[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
11-03 00:55:40.070[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
11-03 00:55:40.116[I][      main][Http11NioProtocol                       ][ 179] →→→ Initializing ProtocolHandler ["http-nio-auto-1"]
11-03 00:55:40.148[I][      main][Http11NioProtocol                       ][ 179] →→→ Starting ProtocolHandler ["http-nio-auto-1"]
11-03 00:55:40.171[I][      main][NioSelectorPool                         ][ 179] →→→ Using a shared selector for servlet write/read
11-03 00:55:40.248[I][      main][TomcatEmbeddedServletContainer          ][ 201] →→→ Tomcat started on port(s): 49990 (http)
11-03 00:55:40.250[I][      main][EurekaAutoServiceRegistration           ][ 117] →→→ Updating port to 49990
11-03 00:55:40.271[I][      main][InstanceInfoFactory                     ][  70] →→→ Setting initial instance status as: STARTING
11-03 00:55:40.370[I][      main][DiscoveryClient                         ][ 344] →→→ Initializing Eureka in region us-east-1
11-03 00:55:40.969[I][      main][DiscoveryJerseyProvider                 ][  70] →→→ Using JSON encoding codec LegacyJacksonJson
11-03 00:55:40.970[I][      main][DiscoveryJerseyProvider                 ][  71] →→→ Using JSON decoding codec LegacyJacksonJson
11-03 00:55:41.205[I][      main][DiscoveryJerseyProvider                 ][  80] →→→ Using XML encoding codec XStreamXml
11-03 00:55:41.206[I][      main][DiscoveryJerseyProvider                 ][  81] →→→ Using XML decoding codec XStreamXml
11-03 00:55:41.941[I][      main][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
11-03 00:55:42.377[I][      main][DiscoveryClient                         ][ 920] →→→ Disable delta property : false
11-03 00:55:42.377[I][      main][DiscoveryClient                         ][ 921] →→→ Single vip registry refresh property : null
11-03 00:55:42.377[I][      main][DiscoveryClient                         ][ 922] →→→ Force full registry fetch : false
11-03 00:55:42.378[I][      main][DiscoveryClient                         ][ 923] →→→ Application is null : false
11-03 00:55:42.378[I][      main][DiscoveryClient                         ][ 924] →→→ Registered Applications size is zero : true
11-03 00:55:42.378[I][      main][DiscoveryClient                         ][ 926] →→→ Application version is -1: true
11-03 00:55:42.378[I][      main][DiscoveryClient                         ][1009] →→→ Getting all instance registry info from the eureka server
11-03 00:55:42.732[I][      main][DiscoveryClient                         ][1018] →→→ The response status is 200
11-03 00:55:42.734[I][      main][DiscoveryClient                         ][1244] →→→ Starting heartbeat executor: renew interval is: 10
11-03 00:55:42.739[I][      main][InstanceInfoReplicator                  ][  59] →→→ InstanceInfoReplicator onDemand update allowed rate per min is 4
11-03 00:55:42.744[I][      main][DiscoveryClient                         ][ 425] →→→ Discovery Client initialized at timestamp 1541177742743 with initial instances count: 4
11-03 00:55:42.794[I][      main][EurekaServiceRegistry                   ][  40] →→→ Registering application smartclearing with eureka with status UP
11-03 00:55:42.796[I][      main][DiscoveryClient                         ][1279] →→→ Saw local status change event StatusChangeEvent [timestamp=1541177742796, current=UP, previous=STARTING]
11-03 00:55:42.799[I][plicator-0][DiscoveryClient                         ][ 795] →→→ DiscoveryClient_SMARTCLEARING/DESKTOP-T8UUSPI:smartclearing:0: registering service...
11-03 00:55:42.809[I][      main][SmartClearingStartup                    ][  57] →→→ Started SmartClearingStartup in 25.16 seconds (JVM running for 26.455)
11-03 00:55:42.809[I][      main][SmartClearingStartup                    ][  42] →→→ 服务启动完毕，请检查是否有异常...
11-03 00:55:42.853[I][plicator-0][DiscoveryClient                         ][ 804] →→→ DiscoveryClient_SMARTCLEARING/DESKTOP-T8UUSPI:smartclearing:0 - registration status: 204
11-03 00:57:15.367[I][o-1-exec-1][[/]                                     ][ 179] →→→ Initializing Spring FrameworkServlet 'dispatcherServlet'
11-03 00:57:15.368[I][o-1-exec-1][DispatcherServlet                       ][ 489] →→→ FrameworkServlet 'dispatcherServlet': initialization started
11-03 00:57:15.436[I][o-1-exec-1][DispatcherServlet                       ][ 508] →→→ FrameworkServlet 'dispatcherServlet': initialization completed in 67 ms
11-03 00:57:15.550[I][o-1-exec-1][OrderController                         ][  78] →→→ 在线账单补单开始。。。。。。。。。。。。。
11-03 00:57:39.622[I][o-1-exec-1][OrderController                         ][  84] →→→ 在线账单补单结束。。。。。。。。。。。。。
11-03 00:58:22.373[I][Executor-1][PaymentOrderDealBusinessImpl            ][  55] →→→ 进入回调处理了cztbu3w8mob0zqwqu57y
11-03 00:58:23.019[I][Executor-1][AnnotationConfigApplicationContext      ][ 583] →→→ Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2bf7cdd1: startup date [Sat Nov 03 00:58:23 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@63e5e5b4
11-03 00:58:28.224[I][Executor-1][AutowiredAnnotationBeanPostProcessor    ][ 155] →→→ JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11-03 00:58:41.467[I][Executor-1][ChainedDynamicProperty                  ][ 115] →→→ Flipping property: smartmerchant.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11-03 00:58:43.080[I][Executor-1][ShutdownEnabledTimer                    ][  58] →→→ Shutdown hook installed for: NFLoadBalancer-PingTimer-smartmerchant
11-03 00:58:44.094[I][Executor-1][BaseLoadBalancer                        ][ 192] →→→ Client: smartmerchant instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=smartmerchant,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
11-03 00:58:44.417[I][Executor-1][DynamicServerListLoadBalancer           ][ 214] →→→ Using serverListUpdater PollingServerListUpdater
11-03 00:58:45.524[I][tUpdater-0][ChainedDynamicProperty                  ][ 115] →→→ Flipping property: smartmerchant.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11-03 00:58:46.053[I][Executor-1][DynamicServerListLoadBalancer           ][ 150] →→→ DynamicServerListLoadBalancer for client smartmerchant initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=smartmerchant,current list of Servers=[DESKTOP-T8UUSPI:smartmerchant:d1ee8f4a38c4f9d94f3ce5b230d39981],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:DESKTOP-T8UUSPI:smartmerchant:d1ee8f4a38c4f9d94f3ce5b230d39981;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@5e0b4a4d
11-03 00:58:56.181[I][Executor-1][PaymentOrderDealBusinessImpl            ][  89] →→→ RESULT================{"result":{"id":1,"merchantId":"999999","merchantName":"总平台","contactEmail":"2228923782@qq.com","contactPhone":"13812345678","loginId":"13812345678","loginPass":"59bb09988f15a480adaf33ff85e231da","payPass":"e10adc3949ba59abbe56e057f20f883e","merAuthStatus":"1","merBusinessLicense":"","identity":"0","parent":"0","settlePeroid":0,"createTime":"2018-06-11 00:00:00","updateTime":"2018-06-11 00:00:00"},"resp_message":"成功","resp_code":"000000"}
11-03 00:58:58.164[I][Executor-1][PaymentOrderDealBusinessImpl            ][ 165] →→→ 进入超级用户处理
11-03 00:58:58.860[I][Executor-1][PaymentOrderDealBusinessImpl            ][ 237] →→→ 回调订单处理完成
11-03 00:59:15.530[I][tUpdater-0][ChainedDynamicProperty                  ][ 115] →→→ Flipping property: smartmerchant.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11-03 01:00:42.381[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
11-03 01:00:44.116[I][Executor-1][PaymentOrderDealBusinessImpl            ][ 330] →→→ callback exception===========502 Bad Gateway
11-03 01:00:48.448[I][o-1-exec-3][OrderController                         ][  78] →→→ 在线账单补单开始。。。。。。。。。。。。。
11-03 01:01:15.537[I][o-1-exec-3][OrderController                         ][  84] →→→ 在线账单补单结束。。。。。。。。。。。。。
