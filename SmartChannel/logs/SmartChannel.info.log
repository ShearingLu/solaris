10-12 16:40:14.957[I][      main][AnnotationConfigApplicationContext      ][ 583] →→→ Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@10163d6: startup date [Fri Oct 12 16:40:14 CST 2018]; root of context hierarchy
10-12 16:40:15.002[I][nd-preinit][Version                                 ][  30] →→→ HV000001: Hibernate Validator 5.3.5.Final
10-12 16:40:15.281[I][      main][AutowiredAnnotationBeanPostProcessor    ][ 155] →→→ JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
10-12 16:40:15.320[I][      main][PostProcessorRegistrationDelegate$BeanPostProcessorChecker][ 325] →→→ Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$97b8c605] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10-12 16:40:15.894[I][      main][SmartChannelStartup                     ][ 597] →→→ The following profiles are active: prod
10-12 16:40:15.911[I][      main][AnnotationConfigEmbeddedWebApplicationContext][ 583] →→→ Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@21d5c1a0: startup date [Fri Oct 12 16:40:15 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@10163d6
10-12 16:40:17.048[I][      main][RepositoryConfigurationDelegate         ][ 165] →→→ Multiple Spring Data modules found, entering strict repository configuration mode!
10-12 16:40:17.163[I][      main][RepositoryConfigurationDelegate         ][ 165] →→→ Multiple Spring Data modules found, entering strict repository configuration mode!
10-12 16:40:17.216[I][      main][RepositoryConfigurationExtensionSupport ][ 270] →→→ Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.smart.pay.channel.repository.MobileEquipmentRepository.
10-12 16:40:17.217[I][      main][RepositoryConfigurationExtensionSupport ][ 270] →→→ Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.smart.pay.channel.repository.ChannelPaymentCallbackRepository.
10-12 16:40:17.217[I][      main][RepositoryConfigurationExtensionSupport ][ 270] →→→ Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.smart.pay.channel.repository.WXMerchantRepository.
10-12 16:40:17.218[I][      main][RepositoryConfigurationExtensionSupport ][ 270] →→→ Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.smart.pay.channel.repository.ALiMerchantRepository.
10-12 16:40:17.218[I][      main][RepositoryConfigurationExtensionSupport ][ 270] →→→ Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.smart.pay.channel.repository.PersonalURLRepository.
10-12 16:40:17.506[I][      main][GenericScope                            ][ 263] →→→ BeanFactory id=b09797b2-b5c6-3602-8728-f19b0d15fa8b
10-12 16:40:17.529[I][      main][AutowiredAnnotationBeanPostProcessor    ][ 155] →→→ JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
10-12 16:40:17.710[I][      main][PostProcessorRegistrationDelegate$BeanPostProcessorChecker][ 325] →→→ Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7b9ec308] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10-12 16:40:17.847[I][      main][PostProcessorRegistrationDelegate$BeanPostProcessorChecker][ 325] →→→ Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$adcb6949] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10-12 16:40:17.858[I][      main][PostProcessorRegistrationDelegate$BeanPostProcessorChecker][ 325] →→→ Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$97b8c605] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10-12 16:40:18.604[I][      main][TomcatEmbeddedServletContainer          ][  89] →→→ Tomcat initialized with port(s): 0 (http)
10-12 16:40:18.621[I][      main][StandardService                         ][ 179] →→→ Starting service [Tomcat]
10-12 16:40:18.623[I][      main][StandardEngine                          ][ 179] →→→ Starting Servlet Engine: Apache Tomcat/8.5.20
10-12 16:40:18.960[I][tartStop-1][[/]                                     ][ 179] →→→ Initializing Spring embedded WebApplicationContext
10-12 16:40:18.960[I][tartStop-1][ContextLoader                           ][ 276] →→→ Root WebApplicationContext: initialization completed in 3049 ms
10-12 16:40:19.336[I][tartStop-1][ServletRegistrationBean                 ][ 190] →→→ Mapping servlet: 'dispatcherServlet' to [/]
10-12 16:40:19.342[I][tartStop-1][FilterRegistrationBean                  ][ 258] →→→ Mapping filter: 'metricsFilter' to: [/*]
10-12 16:40:19.343[I][tartStop-1][FilterRegistrationBean                  ][ 258] →→→ Mapping filter: 'characterEncodingFilter' to: [/*]
10-12 16:40:19.343[I][tartStop-1][FilterRegistrationBean                  ][ 258] →→→ Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
10-12 16:40:19.343[I][tartStop-1][FilterRegistrationBean                  ][ 258] →→→ Mapping filter: 'httpPutFormContentFilter' to: [/*]
10-12 16:40:19.343[I][tartStop-1][FilterRegistrationBean                  ][ 258] →→→ Mapping filter: 'requestContextFilter' to: [/*]
10-12 16:40:19.343[I][tartStop-1][FilterRegistrationBean                  ][ 258] →→→ Mapping filter: 'webRequestLoggingFilter' to: [/*]
10-12 16:40:19.344[I][tartStop-1][FilterRegistrationBean                  ][ 258] →→→ Mapping filter: 'applicationContextIdFilter' to: [/*]
10-12 16:40:19.674[I][      main][DruidDataSource                         ][ 922] →→→ {dataSource-1} inited
10-12 16:40:20.197[I][      main][LocalContainerEntityManagerFactoryBean  ][ 349] →→→ Building JPA container EntityManagerFactory for persistence unit 'default'
10-12 16:40:20.214[I][      main][LogHelper                               ][  31] →→→ HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
10-12 16:40:20.287[I][      main][Version                                 ][  37] →→→ HHH000412: Hibernate Core {5.0.12.Final}
10-12 16:40:20.289[I][      main][Environment                             ][ 213] →→→ HHH000206: hibernate.properties not found
10-12 16:40:20.290[I][      main][Environment                             ][ 317] →→→ HHH000021: Bytecode provider name : javassist
10-12 16:40:20.344[I][      main][Version                                 ][  66] →→→ HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
10-12 16:40:20.536[I][      main][Dialect                                 ][ 156] →→→ HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
10-12 16:40:21.034[I][      main][LocalContainerEntityManagerFactoryBean  ][ 379] →→→ Initialized JPA EntityManagerFactory for persistence unit 'default'
10-12 16:40:21.292[I][      main][QueryTranslatorFactoryInitiator         ][  47] →→→ HHH000397: Using ASTQueryTranslatorFactory
10-12 16:40:21.624[I][      main][ThreadPoolTaskExecutor                  ][ 165] →→→ Initializing ExecutorService 
10-12 16:40:21.632[I][      main][ThreadPoolTaskExecutor                  ][ 165] →→→ Initializing ExecutorService  'myAsync'
10-12 16:40:22.823[W][      main][URLConfigurationSource                  ][ 121] →→→ No URLs will be polled as dynamic configuration sources.
10-12 16:40:22.829[I][      main][URLConfigurationSource                  ][ 122] →→→ To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
10-12 16:40:22.838[W][      main][URLConfigurationSource                  ][ 121] →→→ No URLs will be polled as dynamic configuration sources.
10-12 16:40:22.839[I][      main][URLConfigurationSource                  ][ 122] →→→ To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
10-12 16:40:23.155[I][      main][RequestMappingHandlerAdapter            ][ 534] →→→ Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@21d5c1a0: startup date [Fri Oct 12 16:40:15 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@10163d6
10-12 16:40:23.551[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/mobile/create],methods=[POST]}" onto public java.lang.Object com.smart.pay.channel.controller.MobileEquipmentManageController.createOrUpdateMobileEquipment(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
10-12 16:40:23.553[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/mobile/equipment/all],methods=[POST]}" onto public java.lang.Object com.smart.pay.channel.controller.MobileEquipmentManageController.allMobileEquipment(javax.servlet.http.HttpServletRequest)
10-12 16:40:23.553[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/mobile/status/update],methods=[POST]}" onto public java.lang.Object com.smart.pay.channel.controller.MobileEquipmentManageController.paymentMobileEquipment(javax.servlet.http.HttpServletRequest)
10-12 16:40:23.553[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/mobile/payment/release],methods=[POST]}" onto public java.lang.Object com.smart.pay.channel.controller.MobileEquipmentManageController.releaseMobileEquipment(javax.servlet.http.HttpServletRequest,java.lang.String)
10-12 16:40:23.554[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/mobile/equipment/error],methods=[POST]}" onto public java.lang.Object com.smart.pay.channel.controller.MobileEquipmentManageController.notifyMobileEquipmentError(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
10-12 16:40:23.554[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/mobile/payment/del],methods=[POST]}" onto public java.lang.Object com.smart.pay.channel.controller.MobileEquipmentManageController.delMobileEquipment(javax.servlet.http.HttpServletRequest,java.lang.String)
10-12 16:40:23.554[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/mobile/query/no],methods=[POST]}" onto public java.lang.Object com.smart.pay.channel.controller.MobileEquipmentManageController.queryMobileEquipmentByNo(javax.servlet.http.HttpServletRequest,java.lang.String)
10-12 16:40:23.555[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/mobile/page/query],methods=[POST]}" onto public java.lang.Object com.smart.pay.channel.controller.MobileEquipmentManageController.pageMobileEquipment(javax.servlet.http.HttpServletRequest,int,int,org.springframework.data.domain.Sort$Direction,java.lang.String)
10-12 16:40:23.555[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/wxpaywap/callback],methods=[POST]}" onto public java.lang.Object com.smart.pay.channel.controller.PaymentCallBackController.wexinPayWapNotify(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
10-12 16:40:23.556[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/alipaywap/personal/callback],methods=[POST]}" onto public java.lang.Object com.smart.pay.channel.controller.PaymentCallBackController.aliPayPersonalWapNotify(javax.servlet.http.HttpServletRequest)
10-12 16:40:23.556[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/pay/success],methods=[GET]}" onto public java.lang.String com.smart.pay.channel.controller.PaymentCallBackController.toPaySuccessHtml(javax.servlet.http.HttpServletRequest)
10-12 16:40:23.557[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/alipaywap/callback],methods=[POST]}" onto public java.lang.Object com.smart.pay.channel.controller.PaymentCallBackController.aliPayWapNotify(javax.servlet.http.HttpServletRequest)
10-12 16:40:23.557[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/channel/test1/callback],methods=[POST]}" onto public java.lang.Object com.smart.pay.channel.controller.PaymentCallBackController.registerUser(javax.servlet.http.HttpServletRequest)
10-12 16:40:23.560[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/topup/request],methods=[POST]}" onto public java.lang.Object com.smart.pay.channel.controller.PaymentRequestController.topupRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
10-12 16:40:23.561[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/alipay/topup],methods=[GET]}" onto public java.lang.Object com.smart.pay.channel.controller.PaymentRequestController.aLiPayTopUp(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
10-12 16:40:23.562[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/wexinpay/topup],methods=[GET]}" onto public java.lang.Object com.smart.pay.channel.controller.PaymentRequestController.wexinPayTopUp(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
10-12 16:40:23.562[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/personal/request],methods=[GET || POST]}" onto public java.lang.String com.smart.pay.channel.controller.PaymentRequestController.personalRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)
10-12 16:40:23.565[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
10-12 16:40:23.566[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
10-12 16:40:23.619[I][      main][SimpleUrlHandlerMapping                 ][ 362] →→→ Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
10-12 16:40:23.619[I][      main][SimpleUrlHandlerMapping                 ][ 362] →→→ Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
10-12 16:40:23.648[I][      main][ExceptionHandlerExceptionResolver       ][ 273] →→→ Detected @ExceptionHandler methods in getApiExceptionHander
10-12 16:40:23.683[I][      main][SimpleUrlHandlerMapping                 ][ 362] →→→ Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
10-12 16:40:24.927[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
10-12 16:40:24.928[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10-12 16:40:24.929[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10-12 16:40:24.930[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10-12 16:40:24.930[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
10-12 16:40:24.931[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
10-12 16:40:24.933[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
10-12 16:40:24.933[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
10-12 16:40:24.934[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10-12 16:40:24.934[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
10-12 16:40:24.934[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
10-12 16:40:24.935[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10-12 16:40:24.936[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
10-12 16:40:24.938[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
10-12 16:40:24.939[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10-12 16:40:24.940[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10-12 16:40:24.940[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10-12 16:40:24.941[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
10-12 16:40:24.942[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
10-12 16:40:24.943[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10-12 16:40:24.944[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10-12 16:40:24.944[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
10-12 16:40:24.945[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
10-12 16:40:24.945[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10-12 16:40:24.946[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
10-12 16:40:24.946[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10-12 16:40:24.947[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
10-12 16:40:25.345[I][      main][AnnotationMBeanExporter                 ][ 431] →→→ Registering beans for JMX exposure on startup
10-12 16:40:25.346[I][      main][AnnotationMBeanExporter                 ][ 916] →→→ Bean with name 'getDataSource' has been autodetected for JMX exposure
10-12 16:40:25.355[I][      main][AnnotationMBeanExporter                 ][ 916] →→→ Bean with name 'environmentManager' has been autodetected for JMX exposure
10-12 16:40:25.356[I][      main][AnnotationMBeanExporter                 ][ 916] →→→ Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
10-12 16:40:25.357[I][      main][AnnotationMBeanExporter                 ][ 916] →→→ Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
10-12 16:40:25.357[I][      main][AnnotationMBeanExporter                 ][ 916] →→→ Bean with name 'restartEndpoint' has been autodetected for JMX exposure
10-12 16:40:25.358[I][      main][AnnotationMBeanExporter                 ][ 916] →→→ Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
10-12 16:40:25.358[I][      main][AnnotationMBeanExporter                 ][ 916] →→→ Bean with name 'refreshScope' has been autodetected for JMX exposure
10-12 16:40:25.361[I][      main][AnnotationMBeanExporter                 ][ 678] →→→ Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
10-12 16:40:25.377[I][      main][AnnotationMBeanExporter                 ][ 671] →→→ Located MBean 'getDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=getDataSource,type=DruidDataSource]
10-12 16:40:25.379[I][      main][AnnotationMBeanExporter                 ][ 678] →→→ Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
10-12 16:40:25.389[I][      main][AnnotationMBeanExporter                 ][ 678] →→→ Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
10-12 16:40:25.395[I][      main][AnnotationMBeanExporter                 ][ 678] →→→ Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
10-12 16:40:25.405[I][      main][AnnotationMBeanExporter                 ][ 678] →→→ Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=21d5c1a0,type=ConfigurationPropertiesRebinder]
10-12 16:40:25.409[I][      main][AnnotationMBeanExporter                 ][ 678] →→→ Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
10-12 16:40:25.410[I][      main][EndpointMBeanExporter                   ][ 431] →→→ Registering beans for JMX exposure on startup
10-12 16:40:25.585[I][      main][DefaultLifecycleProcessor               ][ 343] →→→ Starting beans in phase 0
10-12 16:40:25.587[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
10-12 16:40:25.592[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
10-12 16:40:25.597[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
10-12 16:40:25.599[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
10-12 16:40:25.602[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
10-12 16:40:25.604[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
10-12 16:40:25.606[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
10-12 16:40:25.608[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
10-12 16:40:25.611[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
10-12 16:40:25.616[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
10-12 16:40:25.619[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
10-12 16:40:25.621[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
10-12 16:40:25.623[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
10-12 16:40:25.624[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
10-12 16:40:25.649[I][      main][Http11NioProtocol                       ][ 179] →→→ Initializing ProtocolHandler ["http-nio-auto-1"]
10-12 16:40:25.664[I][      main][Http11NioProtocol                       ][ 179] →→→ Starting ProtocolHandler ["http-nio-auto-1"]
10-12 16:40:25.679[I][      main][NioSelectorPool                         ][ 179] →→→ Using a shared selector for servlet write/read
10-12 16:40:25.704[I][      main][TomcatEmbeddedServletContainer          ][ 201] →→→ Tomcat started on port(s): 51586 (http)
10-12 16:40:25.705[I][      main][EurekaAutoServiceRegistration           ][ 117] →→→ Updating port to 51586
10-12 16:40:25.717[I][      main][InstanceInfoFactory                     ][  70] →→→ Setting initial instance status as: STARTING
10-12 16:40:25.777[I][      main][DiscoveryClient                         ][ 344] →→→ Initializing Eureka in region us-east-1
10-12 16:40:25.848[I][      main][DiscoveryJerseyProvider                 ][  70] →→→ Using JSON encoding codec LegacyJacksonJson
10-12 16:40:25.848[I][      main][DiscoveryJerseyProvider                 ][  71] →→→ Using JSON decoding codec LegacyJacksonJson
10-12 16:40:25.988[I][      main][DiscoveryJerseyProvider                 ][  80] →→→ Using XML encoding codec XStreamXml
10-12 16:40:25.988[I][      main][DiscoveryJerseyProvider                 ][  81] →→→ Using XML decoding codec XStreamXml
10-12 16:40:26.276[I][      main][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
10-12 16:40:26.450[I][      main][DiscoveryClient                         ][ 920] →→→ Disable delta property : false
10-12 16:40:26.451[I][      main][DiscoveryClient                         ][ 921] →→→ Single vip registry refresh property : null
10-12 16:40:26.451[I][      main][DiscoveryClient                         ][ 922] →→→ Force full registry fetch : false
10-12 16:40:26.451[I][      main][DiscoveryClient                         ][ 923] →→→ Application is null : false
10-12 16:40:26.451[I][      main][DiscoveryClient                         ][ 924] →→→ Registered Applications size is zero : true
10-12 16:40:26.451[I][      main][DiscoveryClient                         ][ 926] →→→ Application version is -1: true
10-12 16:40:26.451[I][      main][DiscoveryClient                         ][1009] →→→ Getting all instance registry info from the eureka server
10-12 16:40:26.629[I][      main][DiscoveryClient                         ][1018] →→→ The response status is 200
10-12 16:40:26.631[I][      main][DiscoveryClient                         ][1244] →→→ Starting heartbeat executor: renew interval is: 10
10-12 16:40:26.633[I][      main][InstanceInfoReplicator                  ][  59] →→→ InstanceInfoReplicator onDemand update allowed rate per min is 4
10-12 16:40:26.635[I][      main][DiscoveryClient                         ][ 425] →→→ Discovery Client initialized at timestamp 1539333626635 with initial instances count: 4
10-12 16:40:26.675[I][      main][EurekaServiceRegistry                   ][  40] →→→ Registering application smartchannel with eureka with status UP
10-12 16:40:26.676[I][      main][DiscoveryClient                         ][1279] →→→ Saw local status change event StatusChangeEvent [timestamp=1539333626676, current=UP, previous=STARTING]
10-12 16:40:26.678[I][plicator-0][DiscoveryClient                         ][ 795] →→→ DiscoveryClient_SMARTCHANNEL/DESKTOP-T8UUSPI:smartchannel:0: registering service...
10-12 16:40:26.688[I][      main][SmartChannelStartup                     ][  57] →→→ Started SmartChannelStartup in 12.758 seconds (JVM running for 13.602)
10-12 16:40:26.689[I][      main][SmartChannelStartup                     ][  57] →→→ 服务启动完毕，请检查是否有异常...
10-12 16:40:26.715[I][plicator-0][DiscoveryClient                         ][ 804] →→→ DiscoveryClient_SMARTCHANNEL/DESKTOP-T8UUSPI:smartchannel:0 - registration status: 204
10-12 16:42:43.459[I][o-1-exec-1][[/]                                     ][ 179] →→→ Initializing Spring FrameworkServlet 'dispatcherServlet'
10-12 16:42:43.460[I][o-1-exec-1][DispatcherServlet                       ][ 489] →→→ FrameworkServlet 'dispatcherServlet': initialization started
10-12 16:42:43.506[I][o-1-exec-1][DispatcherServlet                       ][ 508] →→→ FrameworkServlet 'dispatcherServlet': initialization completed in 46 ms
10-12 16:45:26.455[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
10-12 16:49:28.384[I][      main][AnnotationConfigApplicationContext      ][ 583] →→→ Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@10163d6: startup date [Fri Oct 12 16:49:28 CST 2018]; root of context hierarchy
10-12 16:49:28.427[I][nd-preinit][Version                                 ][  30] →→→ HV000001: Hibernate Validator 5.3.5.Final
10-12 16:49:28.609[I][      main][AutowiredAnnotationBeanPostProcessor    ][ 155] →→→ JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
10-12 16:49:28.639[I][      main][PostProcessorRegistrationDelegate$BeanPostProcessorChecker][ 325] →→→ Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$51a6ef79] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10-12 16:49:29.092[I][      main][SmartChannelStartup                     ][ 597] →→→ The following profiles are active: prod
10-12 16:49:29.105[I][      main][AnnotationConfigEmbeddedWebApplicationContext][ 583] →→→ Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7e70bd39: startup date [Fri Oct 12 16:49:29 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@10163d6
10-12 16:49:30.112[I][      main][RepositoryConfigurationDelegate         ][ 165] →→→ Multiple Spring Data modules found, entering strict repository configuration mode!
10-12 16:49:30.227[I][      main][RepositoryConfigurationDelegate         ][ 165] →→→ Multiple Spring Data modules found, entering strict repository configuration mode!
10-12 16:49:30.266[I][      main][RepositoryConfigurationExtensionSupport ][ 270] →→→ Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.smart.pay.channel.repository.MobileEquipmentRepository.
10-12 16:49:30.266[I][      main][RepositoryConfigurationExtensionSupport ][ 270] →→→ Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.smart.pay.channel.repository.ChannelPaymentCallbackRepository.
10-12 16:49:30.266[I][      main][RepositoryConfigurationExtensionSupport ][ 270] →→→ Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.smart.pay.channel.repository.WXMerchantRepository.
10-12 16:49:30.267[I][      main][RepositoryConfigurationExtensionSupport ][ 270] →→→ Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.smart.pay.channel.repository.ALiMerchantRepository.
10-12 16:49:30.267[I][      main][RepositoryConfigurationExtensionSupport ][ 270] →→→ Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.smart.pay.channel.repository.PersonalURLRepository.
10-12 16:49:30.544[I][      main][GenericScope                            ][ 263] →→→ BeanFactory id=b09797b2-b5c6-3602-8728-f19b0d15fa8b
10-12 16:49:30.571[I][      main][AutowiredAnnotationBeanPostProcessor    ][ 155] →→→ JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
10-12 16:49:30.747[I][      main][PostProcessorRegistrationDelegate$BeanPostProcessorChecker][ 325] →→→ Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$358cec7c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10-12 16:49:30.884[I][      main][PostProcessorRegistrationDelegate$BeanPostProcessorChecker][ 325] →→→ Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$67b992bd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10-12 16:49:30.901[I][      main][PostProcessorRegistrationDelegate$BeanPostProcessorChecker][ 325] →→→ Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$51a6ef79] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10-12 16:49:31.411[I][      main][TomcatEmbeddedServletContainer          ][  89] →→→ Tomcat initialized with port(s): 0 (http)
10-12 16:49:31.420[I][      main][StandardService                         ][ 179] →→→ Starting service [Tomcat]
10-12 16:49:31.421[I][      main][StandardEngine                          ][ 179] →→→ Starting Servlet Engine: Apache Tomcat/8.5.20
10-12 16:49:31.684[I][tartStop-1][[/]                                     ][ 179] →→→ Initializing Spring embedded WebApplicationContext
10-12 16:49:31.685[I][tartStop-1][ContextLoader                           ][ 276] →→→ Root WebApplicationContext: initialization completed in 2580 ms
10-12 16:49:32.001[I][tartStop-1][ServletRegistrationBean                 ][ 190] →→→ Mapping servlet: 'dispatcherServlet' to [/]
10-12 16:49:32.005[I][tartStop-1][FilterRegistrationBean                  ][ 258] →→→ Mapping filter: 'metricsFilter' to: [/*]
10-12 16:49:32.005[I][tartStop-1][FilterRegistrationBean                  ][ 258] →→→ Mapping filter: 'characterEncodingFilter' to: [/*]
10-12 16:49:32.006[I][tartStop-1][FilterRegistrationBean                  ][ 258] →→→ Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
10-12 16:49:32.006[I][tartStop-1][FilterRegistrationBean                  ][ 258] →→→ Mapping filter: 'httpPutFormContentFilter' to: [/*]
10-12 16:49:32.006[I][tartStop-1][FilterRegistrationBean                  ][ 258] →→→ Mapping filter: 'requestContextFilter' to: [/*]
10-12 16:49:32.006[I][tartStop-1][FilterRegistrationBean                  ][ 258] →→→ Mapping filter: 'webRequestLoggingFilter' to: [/*]
10-12 16:49:32.007[I][tartStop-1][FilterRegistrationBean                  ][ 258] →→→ Mapping filter: 'applicationContextIdFilter' to: [/*]
10-12 16:49:32.262[I][      main][DruidDataSource                         ][ 922] →→→ {dataSource-1} inited
10-12 16:49:32.643[I][      main][LocalContainerEntityManagerFactoryBean  ][ 349] →→→ Building JPA container EntityManagerFactory for persistence unit 'default'
10-12 16:49:32.664[I][      main][LogHelper                               ][  31] →→→ HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
10-12 16:49:32.735[I][      main][Version                                 ][  37] →→→ HHH000412: Hibernate Core {5.0.12.Final}
10-12 16:49:32.737[I][      main][Environment                             ][ 213] →→→ HHH000206: hibernate.properties not found
10-12 16:49:32.738[I][      main][Environment                             ][ 317] →→→ HHH000021: Bytecode provider name : javassist
10-12 16:49:32.782[I][      main][Version                                 ][  66] →→→ HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
10-12 16:49:32.930[I][      main][Dialect                                 ][ 156] →→→ HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
10-12 16:49:33.395[I][      main][LocalContainerEntityManagerFactoryBean  ][ 379] →→→ Initialized JPA EntityManagerFactory for persistence unit 'default'
10-12 16:49:33.644[I][      main][QueryTranslatorFactoryInitiator         ][  47] →→→ HHH000397: Using ASTQueryTranslatorFactory
10-12 16:49:33.949[I][      main][ThreadPoolTaskExecutor                  ][ 165] →→→ Initializing ExecutorService 
10-12 16:49:33.958[I][      main][ThreadPoolTaskExecutor                  ][ 165] →→→ Initializing ExecutorService  'myAsync'
10-12 16:49:34.889[W][      main][URLConfigurationSource                  ][ 121] →→→ No URLs will be polled as dynamic configuration sources.
10-12 16:49:34.890[I][      main][URLConfigurationSource                  ][ 122] →→→ To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
10-12 16:49:34.896[W][      main][URLConfigurationSource                  ][ 121] →→→ No URLs will be polled as dynamic configuration sources.
10-12 16:49:34.897[I][      main][URLConfigurationSource                  ][ 122] →→→ To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
10-12 16:49:35.196[I][      main][RequestMappingHandlerAdapter            ][ 534] →→→ Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7e70bd39: startup date [Fri Oct 12 16:49:29 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@10163d6
10-12 16:49:35.307[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/mobile/query/no],methods=[POST]}" onto public java.lang.Object com.smart.pay.channel.controller.MobileEquipmentManageController.queryMobileEquipmentByNo(javax.servlet.http.HttpServletRequest,java.lang.String)
10-12 16:49:35.309[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/mobile/equipment/error],methods=[POST]}" onto public java.lang.Object com.smart.pay.channel.controller.MobileEquipmentManageController.notifyMobileEquipmentError(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
10-12 16:49:35.309[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/mobile/create],methods=[POST]}" onto public java.lang.Object com.smart.pay.channel.controller.MobileEquipmentManageController.createOrUpdateMobileEquipment(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
10-12 16:49:35.309[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/mobile/payment/del],methods=[POST]}" onto public java.lang.Object com.smart.pay.channel.controller.MobileEquipmentManageController.delMobileEquipment(javax.servlet.http.HttpServletRequest,java.lang.String)
10-12 16:49:35.310[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/mobile/payment/release],methods=[POST]}" onto public java.lang.Object com.smart.pay.channel.controller.MobileEquipmentManageController.releaseMobileEquipment(javax.servlet.http.HttpServletRequest,java.lang.String)
10-12 16:49:35.310[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/mobile/equipment/all],methods=[POST]}" onto public java.lang.Object com.smart.pay.channel.controller.MobileEquipmentManageController.allMobileEquipment(javax.servlet.http.HttpServletRequest)
10-12 16:49:35.310[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/mobile/page/query],methods=[POST]}" onto public java.lang.Object com.smart.pay.channel.controller.MobileEquipmentManageController.pageMobileEquipment(javax.servlet.http.HttpServletRequest,int,int,org.springframework.data.domain.Sort$Direction,java.lang.String)
10-12 16:49:35.311[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/mobile/status/update],methods=[POST]}" onto public java.lang.Object com.smart.pay.channel.controller.MobileEquipmentManageController.paymentMobileEquipment(javax.servlet.http.HttpServletRequest)
10-12 16:49:35.312[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/wxpaywap/callback],methods=[POST]}" onto public java.lang.Object com.smart.pay.channel.controller.PaymentCallBackController.wexinPayWapNotify(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
10-12 16:49:35.312[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/alipaywap/personal/callback],methods=[POST]}" onto public java.lang.Object com.smart.pay.channel.controller.PaymentCallBackController.aliPayPersonalWapNotify(javax.servlet.http.HttpServletRequest)
10-12 16:49:35.312[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/channel/test1/callback],methods=[POST]}" onto public java.lang.Object com.smart.pay.channel.controller.PaymentCallBackController.registerUser(javax.servlet.http.HttpServletRequest)
10-12 16:49:35.313[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/alipaywap/callback],methods=[POST]}" onto public java.lang.Object com.smart.pay.channel.controller.PaymentCallBackController.aliPayWapNotify(javax.servlet.http.HttpServletRequest)
10-12 16:49:35.313[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/pay/success],methods=[GET]}" onto public java.lang.String com.smart.pay.channel.controller.PaymentCallBackController.toPaySuccessHtml(javax.servlet.http.HttpServletRequest)
10-12 16:49:35.536[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/personal/request],methods=[GET || POST]}" onto public java.lang.String com.smart.pay.channel.controller.PaymentRequestController.personalRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)
10-12 16:49:35.537[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/wexinpay/topup],methods=[GET]}" onto public java.lang.Object com.smart.pay.channel.controller.PaymentRequestController.wexinPayTopUp(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
10-12 16:49:35.537[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/alipay/topup],methods=[GET]}" onto public java.lang.Object com.smart.pay.channel.controller.PaymentRequestController.aLiPayTopUp(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
10-12 16:49:35.537[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/topup/request],methods=[POST]}" onto public java.lang.Object com.smart.pay.channel.controller.PaymentRequestController.topupRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
10-12 16:49:35.540[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
10-12 16:49:35.542[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
10-12 16:49:35.580[I][      main][SimpleUrlHandlerMapping                 ][ 362] →→→ Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
10-12 16:49:35.580[I][      main][SimpleUrlHandlerMapping                 ][ 362] →→→ Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
10-12 16:49:35.603[I][      main][ExceptionHandlerExceptionResolver       ][ 273] →→→ Detected @ExceptionHandler methods in getApiExceptionHander
10-12 16:49:35.632[I][      main][SimpleUrlHandlerMapping                 ][ 362] →→→ Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
10-12 16:49:36.666[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10-12 16:49:36.666[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
10-12 16:49:36.667[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10-12 16:49:36.667[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10-12 16:49:36.668[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10-12 16:49:36.668[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
10-12 16:49:36.669[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10-12 16:49:36.669[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
10-12 16:49:36.670[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10-12 16:49:36.671[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10-12 16:49:36.672[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
10-12 16:49:36.673[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10-12 16:49:36.673[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
10-12 16:49:36.674[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
10-12 16:49:36.674[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
10-12 16:49:36.675[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
10-12 16:49:36.676[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
10-12 16:49:36.677[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
10-12 16:49:36.678[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
10-12 16:49:36.678[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10-12 16:49:36.678[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
10-12 16:49:36.679[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
10-12 16:49:36.680[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
10-12 16:49:36.680[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10-12 16:49:36.680[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
10-12 16:49:36.681[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10-12 16:49:36.681[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10-12 16:49:37.072[I][      main][AnnotationMBeanExporter                 ][ 431] →→→ Registering beans for JMX exposure on startup
10-12 16:49:37.074[I][      main][AnnotationMBeanExporter                 ][ 916] →→→ Bean with name 'getDataSource' has been autodetected for JMX exposure
10-12 16:49:37.081[I][      main][AnnotationMBeanExporter                 ][ 916] →→→ Bean with name 'environmentManager' has been autodetected for JMX exposure
10-12 16:49:37.083[I][      main][AnnotationMBeanExporter                 ][ 916] →→→ Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
10-12 16:49:37.083[I][      main][AnnotationMBeanExporter                 ][ 916] →→→ Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
10-12 16:49:37.084[I][      main][AnnotationMBeanExporter                 ][ 916] →→→ Bean with name 'restartEndpoint' has been autodetected for JMX exposure
10-12 16:49:37.084[I][      main][AnnotationMBeanExporter                 ][ 916] →→→ Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
10-12 16:49:37.085[I][      main][AnnotationMBeanExporter                 ][ 916] →→→ Bean with name 'refreshScope' has been autodetected for JMX exposure
10-12 16:49:37.087[I][      main][AnnotationMBeanExporter                 ][ 678] →→→ Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
10-12 16:49:37.098[I][      main][AnnotationMBeanExporter                 ][ 671] →→→ Located MBean 'getDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=getDataSource,type=DruidDataSource]
10-12 16:49:37.100[I][      main][AnnotationMBeanExporter                 ][ 678] →→→ Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
10-12 16:49:37.108[I][      main][AnnotationMBeanExporter                 ][ 678] →→→ Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
10-12 16:49:37.113[I][      main][AnnotationMBeanExporter                 ][ 678] →→→ Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
10-12 16:49:37.121[I][      main][AnnotationMBeanExporter                 ][ 678] →→→ Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=7e70bd39,type=ConfigurationPropertiesRebinder]
10-12 16:49:37.126[I][      main][AnnotationMBeanExporter                 ][ 678] →→→ Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
10-12 16:49:37.127[I][      main][EndpointMBeanExporter                   ][ 431] →→→ Registering beans for JMX exposure on startup
10-12 16:49:37.281[I][      main][DefaultLifecycleProcessor               ][ 343] →→→ Starting beans in phase 0
10-12 16:49:37.284[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
10-12 16:49:37.288[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
10-12 16:49:37.295[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
10-12 16:49:37.298[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
10-12 16:49:37.300[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
10-12 16:49:37.302[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
10-12 16:49:37.304[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
10-12 16:49:37.309[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
10-12 16:49:37.311[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
10-12 16:49:37.315[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
10-12 16:49:37.317[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
10-12 16:49:37.319[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
10-12 16:49:37.321[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
10-12 16:49:37.323[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
10-12 16:49:37.350[I][      main][Http11NioProtocol                       ][ 179] →→→ Initializing ProtocolHandler ["http-nio-auto-1"]
10-12 16:49:37.364[I][      main][Http11NioProtocol                       ][ 179] →→→ Starting ProtocolHandler ["http-nio-auto-1"]
10-12 16:49:37.378[I][      main][NioSelectorPool                         ][ 179] →→→ Using a shared selector for servlet write/read
10-12 16:49:37.401[I][      main][TomcatEmbeddedServletContainer          ][ 201] →→→ Tomcat started on port(s): 51975 (http)
10-12 16:49:37.401[I][      main][EurekaAutoServiceRegistration           ][ 117] →→→ Updating port to 51975
10-12 16:49:37.411[I][      main][InstanceInfoFactory                     ][  70] →→→ Setting initial instance status as: STARTING
10-12 16:49:37.461[I][      main][DiscoveryClient                         ][ 344] →→→ Initializing Eureka in region us-east-1
10-12 16:49:37.536[I][      main][DiscoveryJerseyProvider                 ][  70] →→→ Using JSON encoding codec LegacyJacksonJson
10-12 16:49:37.536[I][      main][DiscoveryJerseyProvider                 ][  71] →→→ Using JSON decoding codec LegacyJacksonJson
10-12 16:49:37.672[I][      main][DiscoveryJerseyProvider                 ][  80] →→→ Using XML encoding codec XStreamXml
10-12 16:49:37.673[I][      main][DiscoveryJerseyProvider                 ][  81] →→→ Using XML decoding codec XStreamXml
10-12 16:49:37.864[I][      main][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
10-12 16:49:37.988[I][      main][DiscoveryClient                         ][ 920] →→→ Disable delta property : false
10-12 16:49:37.988[I][      main][DiscoveryClient                         ][ 921] →→→ Single vip registry refresh property : null
10-12 16:49:37.989[I][      main][DiscoveryClient                         ][ 922] →→→ Force full registry fetch : false
10-12 16:49:37.989[I][      main][DiscoveryClient                         ][ 923] →→→ Application is null : false
10-12 16:49:37.989[I][      main][DiscoveryClient                         ][ 924] →→→ Registered Applications size is zero : true
10-12 16:49:37.989[I][      main][DiscoveryClient                         ][ 926] →→→ Application version is -1: true
10-12 16:49:37.989[I][      main][DiscoveryClient                         ][1009] →→→ Getting all instance registry info from the eureka server
10-12 16:49:38.148[I][      main][DiscoveryClient                         ][1018] →→→ The response status is 200
10-12 16:49:38.150[I][      main][DiscoveryClient                         ][1244] →→→ Starting heartbeat executor: renew interval is: 10
10-12 16:49:38.152[I][      main][InstanceInfoReplicator                  ][  59] →→→ InstanceInfoReplicator onDemand update allowed rate per min is 4
10-12 16:49:38.155[I][      main][DiscoveryClient                         ][ 425] →→→ Discovery Client initialized at timestamp 1539334178155 with initial instances count: 6
10-12 16:49:38.186[I][      main][EurekaServiceRegistry                   ][  40] →→→ Registering application smartchannel with eureka with status UP
10-12 16:49:38.186[I][      main][DiscoveryClient                         ][1279] →→→ Saw local status change event StatusChangeEvent [timestamp=1539334178186, current=UP, previous=STARTING]
10-12 16:49:38.188[I][plicator-0][DiscoveryClient                         ][ 795] →→→ DiscoveryClient_SMARTCHANNEL/DESKTOP-T8UUSPI:smartchannel:0: registering service...
10-12 16:49:38.196[I][      main][SmartChannelStartup                     ][  57] →→→ Started SmartChannelStartup in 10.686 seconds (JVM running for 11.315)
10-12 16:49:38.197[I][      main][SmartChannelStartup                     ][  57] →→→ 服务启动完毕，请检查是否有异常...
10-12 16:49:38.224[I][plicator-0][DiscoveryClient                         ][ 804] →→→ DiscoveryClient_SMARTCHANNEL/DESKTOP-T8UUSPI:smartchannel:0 - registration status: 204
10-12 16:50:30.482[I][o-1-exec-1][[/]                                     ][ 179] →→→ Initializing Spring FrameworkServlet 'dispatcherServlet'
10-12 16:50:30.482[I][o-1-exec-1][DispatcherServlet                       ][ 489] →→→ FrameworkServlet 'dispatcherServlet': initialization started
10-12 16:50:30.517[I][o-1-exec-1][DispatcherServlet                       ][ 508] →→→ FrameworkServlet 'dispatcherServlet': initialization completed in 35 ms
10-12 16:54:37.992[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
10-12 16:59:37.993[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
10-12 17:04:37.994[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
10-12 17:09:37.997[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
10-12 17:14:37.998[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
10-12 17:19:37.999[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
10-12 17:24:38.000[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
10-12 17:29:38.002[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
10-12 17:34:38.003[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
10-12 17:39:38.005[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
10-12 17:44:38.007[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
10-12 17:49:38.008[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
10-12 17:54:38.010[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
10-12 17:59:38.012[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
10-12 18:04:38.014[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
10-12 18:09:38.016[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
10-12 18:14:38.017[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
10-12 18:19:38.020[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
10-12 18:24:38.021[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
10-12 18:29:38.021[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
10-12 18:34:38.023[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
10-12 18:39:38.025[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
10-12 18:44:38.028[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
10-12 18:49:38.030[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
10-12 18:54:38.031[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
10-12 18:59:38.033[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
10-12 19:04:38.034[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
10-12 19:09:38.034[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
10-12 19:14:38.036[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
10-12 19:19:38.039[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
10-12 19:24:38.041[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
10-12 19:29:38.042[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
10-12 19:34:38.044[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
10-12 19:39:38.046[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
10-12 19:44:38.048[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
10-12 19:49:38.049[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
10-12 19:54:38.052[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
10-12 19:59:38.054[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
10-12 20:04:38.056[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
10-12 20:09:38.058[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
10-12 20:14:38.059[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
10-12 20:19:38.060[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
10-12 20:24:38.062[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
10-12 20:29:38.065[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
10-12 20:32:35.828[E][Executor-0][RedirectingEurekaHttpClient             ][  91] →→→ Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getDelta(AbstractJerseyEurekaHttpClient.java:170)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1047)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:929)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1451)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1418)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(Unknown Source)
	at java.net.AbstractPlainSocketImpl.doConnect(Unknown Source)
	at java.net.AbstractPlainSocketImpl.connectToAddress(Unknown Source)
	at java.net.AbstractPlainSocketImpl.connect(Unknown Source)
	at java.net.PlainSocketImpl.connect(Unknown Source)
	at java.net.SocksSocketImpl.connect(Unknown Source)
	at java.net.Socket.connect(Unknown Source)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 29 common frames omitted
10-12 20:32:35.834[W][Executor-0][RetryableEurekaHttpClient               ][ 129] →→→ Request execution failed with message: java.net.ConnectException: Connection refused: connect
10-12 20:32:37.793[E][Executor-0][RedirectingEurekaHttpClient             ][  91] →→→ Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:102)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:815)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1379)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(Unknown Source)
	at java.net.AbstractPlainSocketImpl.doConnect(Unknown Source)
	at java.net.AbstractPlainSocketImpl.connectToAddress(Unknown Source)
	at java.net.AbstractPlainSocketImpl.connect(Unknown Source)
	at java.net.PlainSocketImpl.connect(Unknown Source)
	at java.net.SocksSocketImpl.connect(Unknown Source)
	at java.net.Socket.connect(Unknown Source)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 26 common frames omitted
10-12 20:32:37.794[W][Executor-0][RetryableEurekaHttpClient               ][ 129] →→→ Request execution failed with message: java.net.ConnectException: Connection refused: connect
10-12 20:32:37.838[E][Executor-0][RedirectingEurekaHttpClient             ][  83] →→→ Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getDelta(AbstractJerseyEurekaHttpClient.java:170)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1047)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:929)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1451)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1418)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(Unknown Source)
	at java.net.AbstractPlainSocketImpl.doConnect(Unknown Source)
	at java.net.AbstractPlainSocketImpl.connectToAddress(Unknown Source)
	at java.net.AbstractPlainSocketImpl.connect(Unknown Source)
	at java.net.PlainSocketImpl.connect(Unknown Source)
	at java.net.SocksSocketImpl.connect(Unknown Source)
	at java.net.Socket.connect(Unknown Source)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 common frames omitted
10-12 20:32:37.839[W][Executor-0][RetryableEurekaHttpClient               ][ 129] →→→ Request execution failed with message: java.net.ConnectException: Connection refused: connect
10-12 20:32:37.841[E][Executor-0][DiscoveryClient                         ][ 934] →→→ DiscoveryClient_SMARTCHANNEL/DESKTOP-T8UUSPI:smartchannel:0 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1047)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:929)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1451)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1418)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
10-12 20:32:39.799[E][Executor-0][RedirectingEurekaHttpClient             ][  83] →→→ Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:102)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:815)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1379)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(Unknown Source)
	at java.net.AbstractPlainSocketImpl.doConnect(Unknown Source)
	at java.net.AbstractPlainSocketImpl.connectToAddress(Unknown Source)
	at java.net.AbstractPlainSocketImpl.connect(Unknown Source)
	at java.net.PlainSocketImpl.connect(Unknown Source)
	at java.net.SocksSocketImpl.connect(Unknown Source)
	at java.net.Socket.connect(Unknown Source)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 27 common frames omitted
10-12 20:32:39.800[W][Executor-0][RetryableEurekaHttpClient               ][ 129] →→→ Request execution failed with message: java.net.ConnectException: Connection refused: connect
10-12 20:32:39.802[E][Executor-0][DiscoveryClient                         ][ 824] →→→ DiscoveryClient_SMARTCHANNEL/DESKTOP-T8UUSPI:smartchannel:0 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:815)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1379)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
10-12 20:32:44.879[E][Executor-0][RedirectingEurekaHttpClient             ][  83] →→→ Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getDelta(AbstractJerseyEurekaHttpClient.java:170)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1047)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:929)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1451)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1418)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(Unknown Source)
	at java.net.AbstractPlainSocketImpl.doConnect(Unknown Source)
	at java.net.AbstractPlainSocketImpl.connectToAddress(Unknown Source)
	at java.net.AbstractPlainSocketImpl.connect(Unknown Source)
	at java.net.PlainSocketImpl.connect(Unknown Source)
	at java.net.SocksSocketImpl.connect(Unknown Source)
	at java.net.Socket.connect(Unknown Source)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 common frames omitted
10-12 20:32:44.879[W][Executor-0][RetryableEurekaHttpClient               ][ 129] →→→ Request execution failed with message: java.net.ConnectException: Connection refused: connect
10-12 20:32:44.880[E][Executor-0][DiscoveryClient                         ][ 934] →→→ DiscoveryClient_SMARTCHANNEL/DESKTOP-T8UUSPI:smartchannel:0 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1047)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:929)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1451)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1418)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
10-12 20:32:51.810[E][Executor-0][RedirectingEurekaHttpClient             ][  83] →→→ Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:102)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:815)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1379)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(Unknown Source)
	at java.net.AbstractPlainSocketImpl.doConnect(Unknown Source)
	at java.net.AbstractPlainSocketImpl.connectToAddress(Unknown Source)
	at java.net.AbstractPlainSocketImpl.connect(Unknown Source)
	at java.net.PlainSocketImpl.connect(Unknown Source)
	at java.net.SocksSocketImpl.connect(Unknown Source)
	at java.net.Socket.connect(Unknown Source)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 27 common frames omitted
10-12 20:32:51.811[W][Executor-0][RetryableEurekaHttpClient               ][ 129] →→→ Request execution failed with message: java.net.ConnectException: Connection refused: connect
10-12 20:32:51.811[E][Executor-0][DiscoveryClient                         ][ 824] →→→ DiscoveryClient_SMARTCHANNEL/DESKTOP-T8UUSPI:smartchannel:0 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:815)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1379)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
10-12 20:32:51.886[E][Executor-0][RedirectingEurekaHttpClient             ][  83] →→→ Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getDelta(AbstractJerseyEurekaHttpClient.java:170)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1047)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:929)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1451)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1418)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(Unknown Source)
	at java.net.AbstractPlainSocketImpl.doConnect(Unknown Source)
	at java.net.AbstractPlainSocketImpl.connectToAddress(Unknown Source)
	at java.net.AbstractPlainSocketImpl.connect(Unknown Source)
	at java.net.PlainSocketImpl.connect(Unknown Source)
	at java.net.SocksSocketImpl.connect(Unknown Source)
	at java.net.Socket.connect(Unknown Source)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 common frames omitted
10-12 20:32:51.887[W][Executor-0][RetryableEurekaHttpClient               ][ 129] →→→ Request execution failed with message: java.net.ConnectException: Connection refused: connect
10-12 20:32:51.887[E][Executor-0][DiscoveryClient                         ][ 934] →→→ DiscoveryClient_SMARTCHANNEL/DESKTOP-T8UUSPI:smartchannel:0 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1047)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:929)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1451)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1418)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
10-12 20:32:58.914[E][Executor-0][RedirectingEurekaHttpClient             ][  83] →→→ Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getDelta(AbstractJerseyEurekaHttpClient.java:170)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1047)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:929)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1451)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1418)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(Unknown Source)
	at java.net.AbstractPlainSocketImpl.doConnect(Unknown Source)
	at java.net.AbstractPlainSocketImpl.connectToAddress(Unknown Source)
	at java.net.AbstractPlainSocketImpl.connect(Unknown Source)
	at java.net.PlainSocketImpl.connect(Unknown Source)
	at java.net.SocksSocketImpl.connect(Unknown Source)
	at java.net.Socket.connect(Unknown Source)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 common frames omitted
10-12 20:32:58.914[W][Executor-0][RetryableEurekaHttpClient               ][ 129] →→→ Request execution failed with message: java.net.ConnectException: Connection refused: connect
10-12 20:32:58.914[E][Executor-0][DiscoveryClient                         ][ 934] →→→ DiscoveryClient_SMARTCHANNEL/DESKTOP-T8UUSPI:smartchannel:0 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1047)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:929)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1451)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1418)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
10-12 20:35:27.620[I][      main][AnnotationConfigApplicationContext      ][ 583] →→→ Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@674bd420: startup date [Fri Oct 12 20:35:27 CST 2018]; root of context hierarchy
10-12 20:35:27.692[I][nd-preinit][Version                                 ][  30] →→→ HV000001: Hibernate Validator 5.3.5.Final
10-12 20:35:28.005[I][      main][AutowiredAnnotationBeanPostProcessor    ][ 155] →→→ JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
10-12 20:35:28.059[I][      main][PostProcessorRegistrationDelegate$BeanPostProcessorChecker][ 325] →→→ Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$1cba50e1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10-12 20:35:28.710[I][      main][SmartChannelStartup                     ][ 597] →→→ The following profiles are active: prod
10-12 20:35:28.731[I][      main][AnnotationConfigEmbeddedWebApplicationContext][ 583] →→→ Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7ee3d262: startup date [Fri Oct 12 20:35:28 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@674bd420
10-12 20:35:30.144[I][      main][RepositoryConfigurationDelegate         ][ 165] →→→ Multiple Spring Data modules found, entering strict repository configuration mode!
10-12 20:35:30.279[I][      main][RepositoryConfigurationDelegate         ][ 165] →→→ Multiple Spring Data modules found, entering strict repository configuration mode!
10-12 20:35:30.340[I][      main][RepositoryConfigurationExtensionSupport ][ 270] →→→ Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.smart.pay.channel.repository.MobileEquipmentRepository.
10-12 20:35:30.341[I][      main][RepositoryConfigurationExtensionSupport ][ 270] →→→ Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.smart.pay.channel.repository.ChannelPaymentCallbackRepository.
10-12 20:35:30.342[I][      main][RepositoryConfigurationExtensionSupport ][ 270] →→→ Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.smart.pay.channel.repository.WXMerchantRepository.
10-12 20:35:30.342[I][      main][RepositoryConfigurationExtensionSupport ][ 270] →→→ Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.smart.pay.channel.repository.ALiMerchantRepository.
10-12 20:35:30.343[I][      main][RepositoryConfigurationExtensionSupport ][ 270] →→→ Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.smart.pay.channel.repository.PersonalURLRepository.
10-12 20:35:30.716[I][      main][GenericScope                            ][ 263] →→→ BeanFactory id=b09797b2-b5c6-3602-8728-f19b0d15fa8b
10-12 20:35:30.748[I][      main][AutowiredAnnotationBeanPostProcessor    ][ 155] →→→ JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
10-12 20:35:31.013[I][      main][PostProcessorRegistrationDelegate$BeanPostProcessorChecker][ 325] →→→ Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a04de4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10-12 20:35:31.231[I][      main][PostProcessorRegistrationDelegate$BeanPostProcessorChecker][ 325] →→→ Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$32ccf425] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10-12 20:35:31.245[I][      main][PostProcessorRegistrationDelegate$BeanPostProcessorChecker][ 325] →→→ Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$1cba50e1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10-12 20:35:32.070[I][      main][TomcatEmbeddedServletContainer          ][  89] →→→ Tomcat initialized with port(s): 0 (http)
10-12 20:35:32.081[I][      main][StandardService                         ][ 179] →→→ Starting service [Tomcat]
10-12 20:35:32.082[I][      main][StandardEngine                          ][ 179] →→→ Starting Servlet Engine: Apache Tomcat/8.5.20
10-12 20:35:32.437[I][tartStop-1][[/]                                     ][ 179] →→→ Initializing Spring embedded WebApplicationContext
10-12 20:35:32.438[I][tartStop-1][ContextLoader                           ][ 276] →→→ Root WebApplicationContext: initialization completed in 3707 ms
10-12 20:35:32.852[I][tartStop-1][ServletRegistrationBean                 ][ 190] →→→ Mapping servlet: 'dispatcherServlet' to [/]
10-12 20:35:32.859[I][tartStop-1][FilterRegistrationBean                  ][ 258] →→→ Mapping filter: 'metricsFilter' to: [/*]
10-12 20:35:32.860[I][tartStop-1][FilterRegistrationBean                  ][ 258] →→→ Mapping filter: 'characterEncodingFilter' to: [/*]
10-12 20:35:32.860[I][tartStop-1][FilterRegistrationBean                  ][ 258] →→→ Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
10-12 20:35:32.861[I][tartStop-1][FilterRegistrationBean                  ][ 258] →→→ Mapping filter: 'httpPutFormContentFilter' to: [/*]
10-12 20:35:32.861[I][tartStop-1][FilterRegistrationBean                  ][ 258] →→→ Mapping filter: 'requestContextFilter' to: [/*]
10-12 20:35:32.861[I][tartStop-1][FilterRegistrationBean                  ][ 258] →→→ Mapping filter: 'webRequestLoggingFilter' to: [/*]
10-12 20:35:32.861[I][tartStop-1][FilterRegistrationBean                  ][ 258] →→→ Mapping filter: 'applicationContextIdFilter' to: [/*]
10-12 20:35:33.238[I][      main][DruidDataSource                         ][ 922] →→→ {dataSource-1} inited
10-12 20:35:33.699[I][      main][LocalContainerEntityManagerFactoryBean  ][ 349] →→→ Building JPA container EntityManagerFactory for persistence unit 'default'
10-12 20:35:33.726[I][      main][LogHelper                               ][  31] →→→ HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
10-12 20:35:33.816[I][      main][Version                                 ][  37] →→→ HHH000412: Hibernate Core {5.0.12.Final}
10-12 20:35:33.818[I][      main][Environment                             ][ 213] →→→ HHH000206: hibernate.properties not found
10-12 20:35:33.820[I][      main][Environment                             ][ 317] →→→ HHH000021: Bytecode provider name : javassist
10-12 20:35:33.881[I][      main][Version                                 ][  66] →→→ HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
10-12 20:35:34.062[I][      main][Dialect                                 ][ 156] →→→ HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
10-12 20:35:34.631[I][      main][LocalContainerEntityManagerFactoryBean  ][ 379] →→→ Initialized JPA EntityManagerFactory for persistence unit 'default'
10-12 20:35:34.951[I][      main][QueryTranslatorFactoryInitiator         ][  47] →→→ HHH000397: Using ASTQueryTranslatorFactory
10-12 20:35:35.408[I][      main][ThreadPoolTaskExecutor                  ][ 165] →→→ Initializing ExecutorService 
10-12 20:35:35.421[I][      main][ThreadPoolTaskExecutor                  ][ 165] →→→ Initializing ExecutorService  'myAsync'
10-12 20:35:36.735[W][      main][URLConfigurationSource                  ][ 121] →→→ No URLs will be polled as dynamic configuration sources.
10-12 20:35:36.735[I][      main][URLConfigurationSource                  ][ 122] →→→ To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
10-12 20:35:36.743[W][      main][URLConfigurationSource                  ][ 121] →→→ No URLs will be polled as dynamic configuration sources.
10-12 20:35:36.744[I][      main][URLConfigurationSource                  ][ 122] →→→ To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
10-12 20:35:37.213[I][      main][RequestMappingHandlerAdapter            ][ 534] →→→ Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7ee3d262: startup date [Fri Oct 12 20:35:28 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@674bd420
10-12 20:35:37.628[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/mobile/equipment/error],methods=[POST]}" onto public java.lang.Object com.smart.pay.channel.controller.MobileEquipmentManageController.notifyMobileEquipmentError(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
10-12 20:35:37.629[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/mobile/payment/release],methods=[POST]}" onto public java.lang.Object com.smart.pay.channel.controller.MobileEquipmentManageController.releaseMobileEquipment(javax.servlet.http.HttpServletRequest,java.lang.String)
10-12 20:35:37.630[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/mobile/create],methods=[POST]}" onto public java.lang.Object com.smart.pay.channel.controller.MobileEquipmentManageController.createOrUpdateMobileEquipment(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
10-12 20:35:37.630[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/mobile/page/query],methods=[POST]}" onto public java.lang.Object com.smart.pay.channel.controller.MobileEquipmentManageController.pageMobileEquipment(javax.servlet.http.HttpServletRequest,int,int,org.springframework.data.domain.Sort$Direction,java.lang.String)
10-12 20:35:37.631[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/mobile/equipment/all],methods=[POST]}" onto public java.lang.Object com.smart.pay.channel.controller.MobileEquipmentManageController.allMobileEquipment(javax.servlet.http.HttpServletRequest)
10-12 20:35:37.631[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/mobile/payment/del],methods=[POST]}" onto public java.lang.Object com.smart.pay.channel.controller.MobileEquipmentManageController.delMobileEquipment(javax.servlet.http.HttpServletRequest,java.lang.String)
10-12 20:35:37.632[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/mobile/query/no],methods=[POST]}" onto public java.lang.Object com.smart.pay.channel.controller.MobileEquipmentManageController.queryMobileEquipmentByNo(javax.servlet.http.HttpServletRequest,java.lang.String)
10-12 20:35:37.632[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/mobile/status/update],methods=[POST]}" onto public java.lang.Object com.smart.pay.channel.controller.MobileEquipmentManageController.paymentMobileEquipment(javax.servlet.http.HttpServletRequest)
10-12 20:35:37.633[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/alipaywap/personal/callback],methods=[POST]}" onto public java.lang.Object com.smart.pay.channel.controller.PaymentCallBackController.aliPayPersonalWapNotify(javax.servlet.http.HttpServletRequest)
10-12 20:35:37.634[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/wxpaywap/callback],methods=[POST]}" onto public java.lang.Object com.smart.pay.channel.controller.PaymentCallBackController.wexinPayWapNotify(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
10-12 20:35:37.634[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/channel/test1/callback],methods=[POST]}" onto public java.lang.Object com.smart.pay.channel.controller.PaymentCallBackController.registerUser(javax.servlet.http.HttpServletRequest)
10-12 20:35:37.635[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/pay/success],methods=[GET]}" onto public java.lang.String com.smart.pay.channel.controller.PaymentCallBackController.toPaySuccessHtml(javax.servlet.http.HttpServletRequest)
10-12 20:35:37.635[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/alipaywap/callback],methods=[POST]}" onto public java.lang.Object com.smart.pay.channel.controller.PaymentCallBackController.aliPayWapNotify(javax.servlet.http.HttpServletRequest)
10-12 20:35:37.639[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/wexinpay/topup],methods=[GET]}" onto public java.lang.Object com.smart.pay.channel.controller.PaymentRequestController.wexinPayTopUp(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
10-12 20:35:37.640[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/topup/request],methods=[POST]}" onto public java.lang.Object com.smart.pay.channel.controller.PaymentRequestController.topupRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
10-12 20:35:37.640[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/alipay/topup],methods=[GET]}" onto public java.lang.Object com.smart.pay.channel.controller.PaymentRequestController.aLiPayTopUp(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
10-12 20:35:37.641[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/personal/request],methods=[GET || POST]}" onto public java.lang.String com.smart.pay.channel.controller.PaymentRequestController.personalRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)
10-12 20:35:37.644[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
10-12 20:35:37.645[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
10-12 20:35:37.710[I][      main][SimpleUrlHandlerMapping                 ][ 362] →→→ Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
10-12 20:35:37.710[I][      main][SimpleUrlHandlerMapping                 ][ 362] →→→ Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
10-12 20:35:37.741[I][      main][ExceptionHandlerExceptionResolver       ][ 273] →→→ Detected @ExceptionHandler methods in getApiExceptionHander
10-12 20:35:37.780[I][      main][SimpleUrlHandlerMapping                 ][ 362] →→→ Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
10-12 20:35:39.328[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
10-12 20:35:39.329[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
10-12 20:35:39.329[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10-12 20:35:39.330[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10-12 20:35:39.332[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
10-12 20:35:39.332[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10-12 20:35:39.334[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
10-12 20:35:39.337[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
10-12 20:35:39.338[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10-12 20:35:39.339[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
10-12 20:35:39.339[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
10-12 20:35:39.342[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10-12 20:35:39.343[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
10-12 20:35:39.344[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10-12 20:35:39.345[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10-12 20:35:39.346[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
10-12 20:35:39.347[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10-12 20:35:39.348[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10-12 20:35:39.349[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10-12 20:35:39.349[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
10-12 20:35:39.351[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
10-12 20:35:39.351[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10-12 20:35:39.352[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
10-12 20:35:39.353[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
10-12 20:35:39.354[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10-12 20:35:39.356[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
10-12 20:35:39.357[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
10-12 20:35:40.186[I][      main][AnnotationMBeanExporter                 ][ 431] →→→ Registering beans for JMX exposure on startup
10-12 20:35:40.187[I][      main][AnnotationMBeanExporter                 ][ 916] →→→ Bean with name 'getDataSource' has been autodetected for JMX exposure
10-12 20:35:40.198[I][      main][AnnotationMBeanExporter                 ][ 916] →→→ Bean with name 'environmentManager' has been autodetected for JMX exposure
10-12 20:35:40.200[I][      main][AnnotationMBeanExporter                 ][ 916] →→→ Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
10-12 20:35:40.201[I][      main][AnnotationMBeanExporter                 ][ 916] →→→ Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
10-12 20:35:40.201[I][      main][AnnotationMBeanExporter                 ][ 916] →→→ Bean with name 'restartEndpoint' has been autodetected for JMX exposure
10-12 20:35:40.202[I][      main][AnnotationMBeanExporter                 ][ 916] →→→ Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
10-12 20:35:40.202[I][      main][AnnotationMBeanExporter                 ][ 916] →→→ Bean with name 'refreshScope' has been autodetected for JMX exposure
10-12 20:35:40.206[I][      main][AnnotationMBeanExporter                 ][ 678] →→→ Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
10-12 20:35:40.221[I][      main][AnnotationMBeanExporter                 ][ 671] →→→ Located MBean 'getDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=getDataSource,type=DruidDataSource]
10-12 20:35:40.223[I][      main][AnnotationMBeanExporter                 ][ 678] →→→ Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
10-12 20:35:40.235[I][      main][AnnotationMBeanExporter                 ][ 678] →→→ Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
10-12 20:35:40.243[I][      main][AnnotationMBeanExporter                 ][ 678] →→→ Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
10-12 20:35:40.259[I][      main][AnnotationMBeanExporter                 ][ 678] →→→ Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=7ee3d262,type=ConfigurationPropertiesRebinder]
10-12 20:35:40.264[I][      main][AnnotationMBeanExporter                 ][ 678] →→→ Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
10-12 20:35:40.265[I][      main][EndpointMBeanExporter                   ][ 431] →→→ Registering beans for JMX exposure on startup
10-12 20:35:40.554[I][      main][DefaultLifecycleProcessor               ][ 343] →→→ Starting beans in phase 0
10-12 20:35:40.557[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
10-12 20:35:40.564[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
10-12 20:35:40.573[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
10-12 20:35:40.576[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
10-12 20:35:40.580[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
10-12 20:35:40.583[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
10-12 20:35:40.585[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
10-12 20:35:40.589[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
10-12 20:35:40.592[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
10-12 20:35:40.598[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
10-12 20:35:40.601[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
10-12 20:35:40.604[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
10-12 20:35:40.607[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
10-12 20:35:40.610[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
10-12 20:35:40.641[I][      main][Http11NioProtocol                       ][ 179] →→→ Initializing ProtocolHandler ["http-nio-auto-1"]
10-12 20:35:40.659[I][      main][Http11NioProtocol                       ][ 179] →→→ Starting ProtocolHandler ["http-nio-auto-1"]
10-12 20:35:40.677[I][      main][NioSelectorPool                         ][ 179] →→→ Using a shared selector for servlet write/read
10-12 20:35:40.729[I][      main][TomcatEmbeddedServletContainer          ][ 201] →→→ Tomcat started on port(s): 56867 (http)
10-12 20:35:40.731[I][      main][EurekaAutoServiceRegistration           ][ 117] →→→ Updating port to 56867
10-12 20:35:40.744[I][      main][InstanceInfoFactory                     ][  70] →→→ Setting initial instance status as: STARTING
10-12 20:35:40.824[I][      main][DiscoveryClient                         ][ 344] →→→ Initializing Eureka in region us-east-1
10-12 20:35:40.916[I][      main][DiscoveryJerseyProvider                 ][  70] →→→ Using JSON encoding codec LegacyJacksonJson
10-12 20:35:40.916[I][      main][DiscoveryJerseyProvider                 ][  71] →→→ Using JSON decoding codec LegacyJacksonJson
10-12 20:35:41.050[I][      main][DiscoveryJerseyProvider                 ][  80] →→→ Using XML encoding codec XStreamXml
10-12 20:35:41.051[I][      main][DiscoveryJerseyProvider                 ][  81] →→→ Using XML decoding codec XStreamXml
10-12 20:35:41.299[I][      main][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
10-12 20:35:41.495[I][      main][DiscoveryClient                         ][ 920] →→→ Disable delta property : false
10-12 20:35:41.495[I][      main][DiscoveryClient                         ][ 921] →→→ Single vip registry refresh property : null
10-12 20:35:41.495[I][      main][DiscoveryClient                         ][ 922] →→→ Force full registry fetch : false
10-12 20:35:41.496[I][      main][DiscoveryClient                         ][ 923] →→→ Application is null : false
10-12 20:35:41.496[I][      main][DiscoveryClient                         ][ 924] →→→ Registered Applications size is zero : true
10-12 20:35:41.496[I][      main][DiscoveryClient                         ][ 926] →→→ Application version is -1: true
10-12 20:35:41.496[I][      main][DiscoveryClient                         ][1009] →→→ Getting all instance registry info from the eureka server
10-12 20:35:41.696[I][      main][DiscoveryClient                         ][1018] →→→ The response status is 200
10-12 20:35:41.697[I][      main][DiscoveryClient                         ][1244] →→→ Starting heartbeat executor: renew interval is: 10
10-12 20:35:41.702[I][      main][InstanceInfoReplicator                  ][  59] →→→ InstanceInfoReplicator onDemand update allowed rate per min is 4
10-12 20:35:41.705[I][      main][DiscoveryClient                         ][ 425] →→→ Discovery Client initialized at timestamp 1539347741705 with initial instances count: 5
10-12 20:35:41.741[I][      main][EurekaServiceRegistry                   ][  40] →→→ Registering application smartchannel with eureka with status UP
10-12 20:35:41.743[I][      main][DiscoveryClient                         ][1279] →→→ Saw local status change event StatusChangeEvent [timestamp=1539347741743, current=UP, previous=STARTING]
10-12 20:35:41.744[I][plicator-0][DiscoveryClient                         ][ 795] →→→ DiscoveryClient_SMARTCHANNEL/DESKTOP-T8UUSPI:smartchannel:0: registering service...
10-12 20:35:41.751[I][      main][SmartChannelStartup                     ][  57] →→→ Started SmartChannelStartup in 15.651 seconds (JVM running for 16.972)
10-12 20:35:41.752[I][      main][SmartChannelStartup                     ][  57] →→→ 服务启动完毕，请检查是否有异常...
10-12 20:35:41.790[I][plicator-0][DiscoveryClient                         ][ 804] →→→ DiscoveryClient_SMARTCHANNEL/DESKTOP-T8UUSPI:smartchannel:0 - registration status: 204
10-12 20:36:35.945[I][o-1-exec-1][[/]                                     ][ 179] →→→ Initializing Spring FrameworkServlet 'dispatcherServlet'
10-12 20:36:35.945[I][o-1-exec-1][DispatcherServlet                       ][ 489] →→→ FrameworkServlet 'dispatcherServlet': initialization started
10-12 20:36:35.999[I][o-1-exec-1][DispatcherServlet                       ][ 508] →→→ FrameworkServlet 'dispatcherServlet': initialization completed in 53 ms
10-12 20:36:36.120[I][o-1-exec-1][AnnotationConfigApplicationContext      ][ 583] →→→ Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@71df1ffb: startup date [Fri Oct 12 20:36:36 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7ee3d262
10-12 20:36:36.230[I][o-1-exec-1][AutowiredAnnotationBeanPostProcessor    ][ 155] →→→ JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
10-12 20:36:36.678[I][o-1-exec-1][ChainedDynamicProperty                  ][ 115] →→→ Flipping property: smartclearing.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
10-12 20:36:36.721[I][o-1-exec-1][ShutdownEnabledTimer                    ][  58] →→→ Shutdown hook installed for: NFLoadBalancer-PingTimer-smartclearing
10-12 20:36:36.759[I][o-1-exec-1][BaseLoadBalancer                        ][ 192] →→→ Client: smartclearing instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=smartclearing,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
10-12 20:36:36.768[I][o-1-exec-1][DynamicServerListLoadBalancer           ][ 214] →→→ Using serverListUpdater PollingServerListUpdater
10-12 20:36:36.812[I][o-1-exec-1][ChainedDynamicProperty                  ][ 115] →→→ Flipping property: smartclearing.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
10-12 20:36:36.815[I][o-1-exec-1][DynamicServerListLoadBalancer           ][ 150] →→→ DynamicServerListLoadBalancer for client smartclearing initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=smartclearing,current list of Servers=[DESKTOP-T8UUSPI:smartclearing:d77259e54e2b5e95c0440154c6101c4d],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:DESKTOP-T8UUSPI:smartclearing:d77259e54e2b5e95c0440154c6101c4d;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@3dd7f682
10-12 20:36:37.195[W][o-1-exec-1][JSONObject                              ][ 431] →→→ Tried to assign property settlePeroid:java.lang.Integer to bean of class com.smart.pay.channel.pojo.PaymentOrder
10-12 20:36:37.772[I][tUpdater-0][ChainedDynamicProperty                  ][ 115] →→→ Flipping property: smartclearing.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
10-12 20:38:31.590[I][      main][AnnotationConfigApplicationContext      ][ 583] →→→ Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@674bd420: startup date [Fri Oct 12 20:38:31 CST 2018]; root of context hierarchy
10-12 20:38:31.648[I][nd-preinit][Version                                 ][  30] →→→ HV000001: Hibernate Validator 5.3.5.Final
10-12 20:38:31.834[I][      main][AutowiredAnnotationBeanPostProcessor    ][ 155] →→→ JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
10-12 20:38:31.871[I][      main][PostProcessorRegistrationDelegate$BeanPostProcessorChecker][ 325] →→→ Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$11f5da03] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10-12 20:38:32.391[I][      main][SmartChannelStartup                     ][ 597] →→→ The following profiles are active: prod
10-12 20:38:32.406[I][      main][AnnotationConfigEmbeddedWebApplicationContext][ 583] →→→ Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@25da615a: startup date [Fri Oct 12 20:38:32 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@674bd420
10-12 20:38:33.409[I][      main][RepositoryConfigurationDelegate         ][ 165] →→→ Multiple Spring Data modules found, entering strict repository configuration mode!
10-12 20:38:33.524[I][      main][RepositoryConfigurationDelegate         ][ 165] →→→ Multiple Spring Data modules found, entering strict repository configuration mode!
10-12 20:38:33.574[I][      main][RepositoryConfigurationExtensionSupport ][ 270] →→→ Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.smart.pay.channel.repository.MobileEquipmentRepository.
10-12 20:38:33.575[I][      main][RepositoryConfigurationExtensionSupport ][ 270] →→→ Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.smart.pay.channel.repository.ChannelPaymentCallbackRepository.
10-12 20:38:33.575[I][      main][RepositoryConfigurationExtensionSupport ][ 270] →→→ Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.smart.pay.channel.repository.WXMerchantRepository.
10-12 20:38:33.576[I][      main][RepositoryConfigurationExtensionSupport ][ 270] →→→ Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.smart.pay.channel.repository.ALiMerchantRepository.
10-12 20:38:33.577[I][      main][RepositoryConfigurationExtensionSupport ][ 270] →→→ Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.smart.pay.channel.repository.PersonalURLRepository.
10-12 20:38:33.875[I][      main][GenericScope                            ][ 263] →→→ BeanFactory id=b09797b2-b5c6-3602-8728-f19b0d15fa8b
10-12 20:38:33.906[I][      main][AutowiredAnnotationBeanPostProcessor    ][ 155] →→→ JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
10-12 20:38:34.091[I][      main][PostProcessorRegistrationDelegate$BeanPostProcessorChecker][ 325] →→→ Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f5dbd706] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10-12 20:38:34.215[I][      main][PostProcessorRegistrationDelegate$BeanPostProcessorChecker][ 325] →→→ Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$28087d47] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10-12 20:38:34.230[I][      main][PostProcessorRegistrationDelegate$BeanPostProcessorChecker][ 325] →→→ Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$11f5da03] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10-12 20:38:34.793[I][      main][TomcatEmbeddedServletContainer          ][  89] →→→ Tomcat initialized with port(s): 0 (http)
10-12 20:38:34.802[I][      main][StandardService                         ][ 179] →→→ Starting service [Tomcat]
10-12 20:38:34.803[I][      main][StandardEngine                          ][ 179] →→→ Starting Servlet Engine: Apache Tomcat/8.5.20
10-12 20:38:35.067[I][tartStop-1][[/]                                     ][ 179] →→→ Initializing Spring embedded WebApplicationContext
10-12 20:38:35.067[I][tartStop-1][ContextLoader                           ][ 276] →→→ Root WebApplicationContext: initialization completed in 2661 ms
10-12 20:38:35.397[I][tartStop-1][ServletRegistrationBean                 ][ 190] →→→ Mapping servlet: 'dispatcherServlet' to [/]
10-12 20:38:35.404[I][tartStop-1][FilterRegistrationBean                  ][ 258] →→→ Mapping filter: 'metricsFilter' to: [/*]
10-12 20:38:35.404[I][tartStop-1][FilterRegistrationBean                  ][ 258] →→→ Mapping filter: 'characterEncodingFilter' to: [/*]
10-12 20:38:35.404[I][tartStop-1][FilterRegistrationBean                  ][ 258] →→→ Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
10-12 20:38:35.405[I][tartStop-1][FilterRegistrationBean                  ][ 258] →→→ Mapping filter: 'httpPutFormContentFilter' to: [/*]
10-12 20:38:35.405[I][tartStop-1][FilterRegistrationBean                  ][ 258] →→→ Mapping filter: 'requestContextFilter' to: [/*]
10-12 20:38:35.405[I][tartStop-1][FilterRegistrationBean                  ][ 258] →→→ Mapping filter: 'webRequestLoggingFilter' to: [/*]
10-12 20:38:35.405[I][tartStop-1][FilterRegistrationBean                  ][ 258] →→→ Mapping filter: 'applicationContextIdFilter' to: [/*]
10-12 20:38:35.704[I][      main][DruidDataSource                         ][ 922] →→→ {dataSource-1} inited
10-12 20:38:36.039[I][      main][LocalContainerEntityManagerFactoryBean  ][ 349] →→→ Building JPA container EntityManagerFactory for persistence unit 'default'
10-12 20:38:36.058[I][      main][LogHelper                               ][  31] →→→ HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
10-12 20:38:36.141[I][      main][Version                                 ][  37] →→→ HHH000412: Hibernate Core {5.0.12.Final}
10-12 20:38:36.144[I][      main][Environment                             ][ 213] →→→ HHH000206: hibernate.properties not found
10-12 20:38:36.146[I][      main][Environment                             ][ 317] →→→ HHH000021: Bytecode provider name : javassist
10-12 20:38:36.202[I][      main][Version                                 ][  66] →→→ HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
10-12 20:38:36.360[I][      main][Dialect                                 ][ 156] →→→ HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
10-12 20:38:36.858[I][      main][LocalContainerEntityManagerFactoryBean  ][ 379] →→→ Initialized JPA EntityManagerFactory for persistence unit 'default'
10-12 20:38:37.155[I][      main][QueryTranslatorFactoryInitiator         ][  47] →→→ HHH000397: Using ASTQueryTranslatorFactory
10-12 20:38:37.624[I][      main][ThreadPoolTaskExecutor                  ][ 165] →→→ Initializing ExecutorService 
10-12 20:38:37.641[I][      main][ThreadPoolTaskExecutor                  ][ 165] →→→ Initializing ExecutorService  'myAsync'
10-12 20:38:38.726[W][      main][URLConfigurationSource                  ][ 121] →→→ No URLs will be polled as dynamic configuration sources.
10-12 20:38:38.726[I][      main][URLConfigurationSource                  ][ 122] →→→ To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
10-12 20:38:38.736[W][      main][URLConfigurationSource                  ][ 121] →→→ No URLs will be polled as dynamic configuration sources.
10-12 20:38:38.736[I][      main][URLConfigurationSource                  ][ 122] →→→ To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
10-12 20:38:39.105[I][      main][RequestMappingHandlerAdapter            ][ 534] →→→ Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@25da615a: startup date [Fri Oct 12 20:38:32 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@674bd420
10-12 20:38:39.417[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/mobile/status/update],methods=[POST]}" onto public java.lang.Object com.smart.pay.channel.controller.MobileEquipmentManageController.paymentMobileEquipment(javax.servlet.http.HttpServletRequest)
10-12 20:38:39.419[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/mobile/equipment/error],methods=[POST]}" onto public java.lang.Object com.smart.pay.channel.controller.MobileEquipmentManageController.notifyMobileEquipmentError(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
10-12 20:38:39.419[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/mobile/query/no],methods=[POST]}" onto public java.lang.Object com.smart.pay.channel.controller.MobileEquipmentManageController.queryMobileEquipmentByNo(javax.servlet.http.HttpServletRequest,java.lang.String)
10-12 20:38:39.420[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/mobile/create],methods=[POST]}" onto public java.lang.Object com.smart.pay.channel.controller.MobileEquipmentManageController.createOrUpdateMobileEquipment(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
10-12 20:38:39.421[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/mobile/page/query],methods=[POST]}" onto public java.lang.Object com.smart.pay.channel.controller.MobileEquipmentManageController.pageMobileEquipment(javax.servlet.http.HttpServletRequest,int,int,org.springframework.data.domain.Sort$Direction,java.lang.String)
10-12 20:38:39.421[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/mobile/equipment/all],methods=[POST]}" onto public java.lang.Object com.smart.pay.channel.controller.MobileEquipmentManageController.allMobileEquipment(javax.servlet.http.HttpServletRequest)
10-12 20:38:39.422[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/mobile/payment/release],methods=[POST]}" onto public java.lang.Object com.smart.pay.channel.controller.MobileEquipmentManageController.releaseMobileEquipment(javax.servlet.http.HttpServletRequest,java.lang.String)
10-12 20:38:39.422[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/mobile/payment/del],methods=[POST]}" onto public java.lang.Object com.smart.pay.channel.controller.MobileEquipmentManageController.delMobileEquipment(javax.servlet.http.HttpServletRequest,java.lang.String)
10-12 20:38:39.423[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/alipaywap/personal/callback],methods=[POST]}" onto public java.lang.Object com.smart.pay.channel.controller.PaymentCallBackController.aliPayPersonalWapNotify(javax.servlet.http.HttpServletRequest)
10-12 20:38:39.424[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/wxpaywap/callback],methods=[POST]}" onto public java.lang.Object com.smart.pay.channel.controller.PaymentCallBackController.wexinPayWapNotify(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
10-12 20:38:39.424[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/pay/success],methods=[GET]}" onto public java.lang.String com.smart.pay.channel.controller.PaymentCallBackController.toPaySuccessHtml(javax.servlet.http.HttpServletRequest)
10-12 20:38:39.424[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/channel/test1/callback],methods=[POST]}" onto public java.lang.Object com.smart.pay.channel.controller.PaymentCallBackController.registerUser(javax.servlet.http.HttpServletRequest)
10-12 20:38:39.425[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/alipaywap/callback],methods=[POST]}" onto public java.lang.Object com.smart.pay.channel.controller.PaymentCallBackController.aliPayWapNotify(javax.servlet.http.HttpServletRequest)
10-12 20:38:39.427[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/topup/request],methods=[POST]}" onto public java.lang.Object com.smart.pay.channel.controller.PaymentRequestController.topupRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
10-12 20:38:39.427[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/wexinpay/topup],methods=[GET]}" onto public java.lang.Object com.smart.pay.channel.controller.PaymentRequestController.wexinPayTopUp(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
10-12 20:38:39.428[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/alipay/topup],methods=[GET]}" onto public java.lang.Object com.smart.pay.channel.controller.PaymentRequestController.aLiPayTopUp(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
10-12 20:38:39.428[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/personal/request],methods=[GET || POST]}" onto public java.lang.String com.smart.pay.channel.controller.PaymentRequestController.personalRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)
10-12 20:38:39.430[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
10-12 20:38:39.430[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
10-12 20:38:39.469[I][      main][SimpleUrlHandlerMapping                 ][ 362] →→→ Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
10-12 20:38:39.469[I][      main][SimpleUrlHandlerMapping                 ][ 362] →→→ Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
10-12 20:38:39.495[I][      main][ExceptionHandlerExceptionResolver       ][ 273] →→→ Detected @ExceptionHandler methods in getApiExceptionHander
10-12 20:38:39.534[I][      main][SimpleUrlHandlerMapping                 ][ 362] →→→ Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
10-12 20:38:40.717[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
10-12 20:38:40.717[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10-12 20:38:40.719[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
10-12 20:38:40.719[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10-12 20:38:40.720[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10-12 20:38:40.721[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
10-12 20:38:40.721[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10-12 20:38:40.721[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10-12 20:38:40.723[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
10-12 20:38:40.723[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
10-12 20:38:40.723[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
10-12 20:38:40.724[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
10-12 20:38:40.724[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
10-12 20:38:40.726[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10-12 20:38:40.726[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
10-12 20:38:40.727[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10-12 20:38:40.727[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10-12 20:38:40.728[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10-12 20:38:40.729[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
10-12 20:38:40.729[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
10-12 20:38:40.730[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10-12 20:38:40.730[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
10-12 20:38:40.731[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
10-12 20:38:40.732[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
10-12 20:38:40.732[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
10-12 20:38:40.733[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10-12 20:38:40.733[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10-12 20:38:41.378[I][      main][AnnotationMBeanExporter                 ][ 431] →→→ Registering beans for JMX exposure on startup
10-12 20:38:41.379[I][      main][AnnotationMBeanExporter                 ][ 916] →→→ Bean with name 'getDataSource' has been autodetected for JMX exposure
10-12 20:38:41.388[I][      main][AnnotationMBeanExporter                 ][ 916] →→→ Bean with name 'environmentManager' has been autodetected for JMX exposure
10-12 20:38:41.389[I][      main][AnnotationMBeanExporter                 ][ 916] →→→ Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
10-12 20:38:41.390[I][      main][AnnotationMBeanExporter                 ][ 916] →→→ Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
10-12 20:38:41.390[I][      main][AnnotationMBeanExporter                 ][ 916] →→→ Bean with name 'restartEndpoint' has been autodetected for JMX exposure
10-12 20:38:41.391[I][      main][AnnotationMBeanExporter                 ][ 916] →→→ Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
10-12 20:38:41.391[I][      main][AnnotationMBeanExporter                 ][ 916] →→→ Bean with name 'refreshScope' has been autodetected for JMX exposure
10-12 20:38:41.394[I][      main][AnnotationMBeanExporter                 ][ 678] →→→ Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
10-12 20:38:41.407[I][      main][AnnotationMBeanExporter                 ][ 671] →→→ Located MBean 'getDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=getDataSource,type=DruidDataSource]
10-12 20:38:41.408[I][      main][AnnotationMBeanExporter                 ][ 678] →→→ Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
10-12 20:38:41.421[I][      main][AnnotationMBeanExporter                 ][ 678] →→→ Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
10-12 20:38:41.429[I][      main][AnnotationMBeanExporter                 ][ 678] →→→ Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
10-12 20:38:41.443[I][      main][AnnotationMBeanExporter                 ][ 678] →→→ Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=25da615a,type=ConfigurationPropertiesRebinder]
10-12 20:38:41.449[I][      main][AnnotationMBeanExporter                 ][ 678] →→→ Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
10-12 20:38:41.450[I][      main][EndpointMBeanExporter                   ][ 431] →→→ Registering beans for JMX exposure on startup
10-12 20:38:41.659[I][      main][DefaultLifecycleProcessor               ][ 343] →→→ Starting beans in phase 0
10-12 20:38:41.661[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
10-12 20:38:41.667[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
10-12 20:38:41.674[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
10-12 20:38:41.676[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
10-12 20:38:41.678[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
10-12 20:38:41.680[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
10-12 20:38:41.682[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
10-12 20:38:41.684[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
10-12 20:38:41.687[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
10-12 20:38:41.692[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
10-12 20:38:41.694[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
10-12 20:38:41.696[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
10-12 20:38:41.698[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
10-12 20:38:41.700[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
10-12 20:38:41.719[I][      main][Http11NioProtocol                       ][ 179] →→→ Initializing ProtocolHandler ["http-nio-auto-1"]
10-12 20:38:41.731[I][      main][Http11NioProtocol                       ][ 179] →→→ Starting ProtocolHandler ["http-nio-auto-1"]
10-12 20:38:41.743[I][      main][NioSelectorPool                         ][ 179] →→→ Using a shared selector for servlet write/read
10-12 20:38:41.782[I][      main][TomcatEmbeddedServletContainer          ][ 201] →→→ Tomcat started on port(s): 56933 (http)
10-12 20:38:41.783[I][      main][EurekaAutoServiceRegistration           ][ 117] →→→ Updating port to 56933
10-12 20:38:41.797[I][      main][InstanceInfoFactory                     ][  70] →→→ Setting initial instance status as: STARTING
10-12 20:38:41.841[I][      main][DiscoveryClient                         ][ 344] →→→ Initializing Eureka in region us-east-1
10-12 20:38:41.896[I][      main][DiscoveryJerseyProvider                 ][  70] →→→ Using JSON encoding codec LegacyJacksonJson
10-12 20:38:41.896[I][      main][DiscoveryJerseyProvider                 ][  71] →→→ Using JSON decoding codec LegacyJacksonJson
10-12 20:38:41.990[I][      main][DiscoveryJerseyProvider                 ][  80] →→→ Using XML encoding codec XStreamXml
10-12 20:38:41.990[I][      main][DiscoveryJerseyProvider                 ][  81] →→→ Using XML decoding codec XStreamXml
10-12 20:38:42.204[I][      main][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
10-12 20:38:42.333[I][      main][DiscoveryClient                         ][ 920] →→→ Disable delta property : false
10-12 20:38:42.333[I][      main][DiscoveryClient                         ][ 921] →→→ Single vip registry refresh property : null
10-12 20:38:42.333[I][      main][DiscoveryClient                         ][ 922] →→→ Force full registry fetch : false
10-12 20:38:42.334[I][      main][DiscoveryClient                         ][ 923] →→→ Application is null : false
10-12 20:38:42.334[I][      main][DiscoveryClient                         ][ 924] →→→ Registered Applications size is zero : true
10-12 20:38:42.334[I][      main][DiscoveryClient                         ][ 926] →→→ Application version is -1: true
10-12 20:38:42.334[I][      main][DiscoveryClient                         ][1009] →→→ Getting all instance registry info from the eureka server
10-12 20:38:42.468[I][      main][DiscoveryClient                         ][1018] →→→ The response status is 200
10-12 20:38:42.470[I][      main][DiscoveryClient                         ][1244] →→→ Starting heartbeat executor: renew interval is: 10
10-12 20:38:42.472[I][      main][InstanceInfoReplicator                  ][  59] →→→ InstanceInfoReplicator onDemand update allowed rate per min is 4
10-12 20:38:42.475[I][      main][DiscoveryClient                         ][ 425] →→→ Discovery Client initialized at timestamp 1539347922474 with initial instances count: 6
10-12 20:38:42.507[I][      main][EurekaServiceRegistry                   ][  40] →→→ Registering application smartchannel with eureka with status UP
10-12 20:38:42.507[I][      main][DiscoveryClient                         ][1279] →→→ Saw local status change event StatusChangeEvent [timestamp=1539347922507, current=UP, previous=STARTING]
10-12 20:38:42.509[I][plicator-0][DiscoveryClient                         ][ 795] →→→ DiscoveryClient_SMARTCHANNEL/DESKTOP-T8UUSPI:smartchannel:0: registering service...
10-12 20:38:42.517[I][      main][SmartChannelStartup                     ][  57] →→→ Started SmartChannelStartup in 11.881 seconds (JVM running for 12.613)
10-12 20:38:42.518[I][      main][SmartChannelStartup                     ][  57] →→→ 服务启动完毕，请检查是否有异常...
10-12 20:38:42.547[I][plicator-0][DiscoveryClient                         ][ 804] →→→ DiscoveryClient_SMARTCHANNEL/DESKTOP-T8UUSPI:smartchannel:0 - registration status: 204
10-12 20:40:29.064[I][o-1-exec-1][[/]                                     ][ 179] →→→ Initializing Spring FrameworkServlet 'dispatcherServlet'
10-12 20:40:29.065[I][o-1-exec-1][DispatcherServlet                       ][ 489] →→→ FrameworkServlet 'dispatcherServlet': initialization started
10-12 20:40:29.090[I][o-1-exec-1][DispatcherServlet                       ][ 508] →→→ FrameworkServlet 'dispatcherServlet': initialization completed in 25 ms
10-12 20:40:29.134[I][o-1-exec-1][AnnotationConfigApplicationContext      ][ 583] →→→ Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6ac493ae: startup date [Fri Oct 12 20:40:29 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@25da615a
10-12 20:40:29.197[I][o-1-exec-1][AutowiredAnnotationBeanPostProcessor    ][ 155] →→→ JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
10-12 20:40:29.413[I][o-1-exec-1][ChainedDynamicProperty                  ][ 115] →→→ Flipping property: smartclearing.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
10-12 20:40:29.447[I][o-1-exec-1][ShutdownEnabledTimer                    ][  58] →→→ Shutdown hook installed for: NFLoadBalancer-PingTimer-smartclearing
10-12 20:40:29.478[I][o-1-exec-1][BaseLoadBalancer                        ][ 192] →→→ Client: smartclearing instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=smartclearing,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
10-12 20:40:29.486[I][o-1-exec-1][DynamicServerListLoadBalancer           ][ 214] →→→ Using serverListUpdater PollingServerListUpdater
10-12 20:40:29.512[I][o-1-exec-1][ChainedDynamicProperty                  ][ 115] →→→ Flipping property: smartclearing.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
10-12 20:40:29.514[I][o-1-exec-1][DynamicServerListLoadBalancer           ][ 150] →→→ DynamicServerListLoadBalancer for client smartclearing initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=smartclearing,current list of Servers=[DESKTOP-T8UUSPI:smartclearing:d77259e54e2b5e95c0440154c6101c4d],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:DESKTOP-T8UUSPI:smartclearing:d77259e54e2b5e95c0440154c6101c4d;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@61e82af4
10-12 20:40:29.747[W][o-1-exec-1][JSONObject                              ][ 431] →→→ Tried to assign property settlePeroid:java.lang.Integer to bean of class com.smart.pay.channel.pojo.PaymentOrder
10-12 20:40:30.491[I][tUpdater-0][ChainedDynamicProperty                  ][ 115] →→→ Flipping property: smartclearing.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
10-12 20:40:45.220[I][o-1-exec-1][AlipayPersonPayRequestBusinessImpl      ][  83] →→→ mi8se1设备交易的交易量为138691.4
10-12 20:41:03.222[I][o-1-exec-1][AlipayPersonPayRequestBusinessImpl      ][  83] →→→ mi8se4设备交易的交易量为16238.04
10-12 21:32:34.276[I][nd-preinit][Version                                 ][  30] →→→ HV000001: Hibernate Validator 5.3.5.Final
10-12 21:32:34.331[I][      main][AnnotationConfigApplicationContext      ][ 583] →→→ Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@674bd420: startup date [Fri Oct 12 21:32:34 CST 2018]; root of context hierarchy
10-12 21:32:34.921[I][      main][AutowiredAnnotationBeanPostProcessor    ][ 155] →→→ JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
10-12 21:32:34.998[I][      main][PostProcessorRegistrationDelegate$BeanPostProcessorChecker][ 325] →→→ Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$48667a14] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10-12 21:32:36.313[I][      main][SmartChannelStartup                     ][ 597] →→→ The following profiles are active: prod
10-12 21:32:36.354[I][      main][AnnotationConfigEmbeddedWebApplicationContext][ 583] →→→ Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@43a51d00: startup date [Fri Oct 12 21:32:36 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@674bd420
10-12 21:32:38.064[I][      main][RepositoryConfigurationDelegate         ][ 165] →→→ Multiple Spring Data modules found, entering strict repository configuration mode!
10-12 21:32:38.207[I][      main][RepositoryConfigurationDelegate         ][ 165] →→→ Multiple Spring Data modules found, entering strict repository configuration mode!
10-12 21:32:38.276[I][      main][RepositoryConfigurationExtensionSupport ][ 270] →→→ Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.smart.pay.channel.repository.MobileEquipmentRepository.
10-12 21:32:38.276[I][      main][RepositoryConfigurationExtensionSupport ][ 270] →→→ Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.smart.pay.channel.repository.ChannelPaymentCallbackRepository.
10-12 21:32:38.277[I][      main][RepositoryConfigurationExtensionSupport ][ 270] →→→ Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.smart.pay.channel.repository.WXMerchantRepository.
10-12 21:32:38.277[I][      main][RepositoryConfigurationExtensionSupport ][ 270] →→→ Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.smart.pay.channel.repository.ALiMerchantRepository.
10-12 21:32:38.278[I][      main][RepositoryConfigurationExtensionSupport ][ 270] →→→ Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.smart.pay.channel.repository.PersonalURLRepository.
10-12 21:32:38.658[I][      main][GenericScope                            ][ 263] →→→ BeanFactory id=b09797b2-b5c6-3602-8728-f19b0d15fa8b
10-12 21:32:38.697[I][      main][AutowiredAnnotationBeanPostProcessor    ][ 155] →→→ JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
10-12 21:32:38.977[I][      main][PostProcessorRegistrationDelegate$BeanPostProcessorChecker][ 325] →→→ Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2c4c7717] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10-12 21:32:39.174[I][      main][PostProcessorRegistrationDelegate$BeanPostProcessorChecker][ 325] →→→ Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$5e791d58] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10-12 21:32:39.190[I][      main][PostProcessorRegistrationDelegate$BeanPostProcessorChecker][ 325] →→→ Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$48667a14] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10-12 21:32:39.952[I][      main][TomcatEmbeddedServletContainer          ][  89] →→→ Tomcat initialized with port(s): 0 (http)
10-12 21:32:39.970[I][      main][StandardService                         ][ 179] →→→ Starting service [Tomcat]
10-12 21:32:39.971[I][      main][StandardEngine                          ][ 179] →→→ Starting Servlet Engine: Apache Tomcat/8.5.20
10-12 21:32:40.339[I][tartStop-1][[/]                                     ][ 179] →→→ Initializing Spring embedded WebApplicationContext
10-12 21:32:40.340[I][tartStop-1][ContextLoader                           ][ 276] →→→ Root WebApplicationContext: initialization completed in 3986 ms
10-12 21:32:40.750[I][tartStop-1][ServletRegistrationBean                 ][ 190] →→→ Mapping servlet: 'dispatcherServlet' to [/]
10-12 21:32:40.755[I][tartStop-1][FilterRegistrationBean                  ][ 258] →→→ Mapping filter: 'metricsFilter' to: [/*]
10-12 21:32:40.756[I][tartStop-1][FilterRegistrationBean                  ][ 258] →→→ Mapping filter: 'characterEncodingFilter' to: [/*]
10-12 21:32:40.756[I][tartStop-1][FilterRegistrationBean                  ][ 258] →→→ Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
10-12 21:32:40.756[I][tartStop-1][FilterRegistrationBean                  ][ 258] →→→ Mapping filter: 'httpPutFormContentFilter' to: [/*]
10-12 21:32:40.756[I][tartStop-1][FilterRegistrationBean                  ][ 258] →→→ Mapping filter: 'requestContextFilter' to: [/*]
10-12 21:32:40.756[I][tartStop-1][FilterRegistrationBean                  ][ 258] →→→ Mapping filter: 'webRequestLoggingFilter' to: [/*]
10-12 21:32:40.757[I][tartStop-1][FilterRegistrationBean                  ][ 258] →→→ Mapping filter: 'applicationContextIdFilter' to: [/*]
10-12 21:32:41.145[I][      main][DruidDataSource                         ][ 922] →→→ {dataSource-1} inited
10-12 21:32:41.668[I][      main][LocalContainerEntityManagerFactoryBean  ][ 349] →→→ Building JPA container EntityManagerFactory for persistence unit 'default'
10-12 21:32:41.695[I][      main][LogHelper                               ][  31] →→→ HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
10-12 21:32:41.803[I][      main][Version                                 ][  37] →→→ HHH000412: Hibernate Core {5.0.12.Final}
10-12 21:32:41.805[I][      main][Environment                             ][ 213] →→→ HHH000206: hibernate.properties not found
10-12 21:32:41.807[I][      main][Environment                             ][ 317] →→→ HHH000021: Bytecode provider name : javassist
10-12 21:32:41.864[I][      main][Version                                 ][  66] →→→ HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
10-12 21:32:42.066[I][      main][Dialect                                 ][ 156] →→→ HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
10-12 21:32:42.636[I][      main][LocalContainerEntityManagerFactoryBean  ][ 379] →→→ Initialized JPA EntityManagerFactory for persistence unit 'default'
10-12 21:32:43.028[I][      main][QueryTranslatorFactoryInitiator         ][  47] →→→ HHH000397: Using ASTQueryTranslatorFactory
10-12 21:32:43.569[I][      main][ThreadPoolTaskExecutor                  ][ 165] →→→ Initializing ExecutorService 
10-12 21:32:43.585[I][      main][ThreadPoolTaskExecutor                  ][ 165] →→→ Initializing ExecutorService  'myAsync'
10-12 21:32:45.013[W][      main][URLConfigurationSource                  ][ 121] →→→ No URLs will be polled as dynamic configuration sources.
10-12 21:32:45.013[I][      main][URLConfigurationSource                  ][ 122] →→→ To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
10-12 21:32:45.021[W][      main][URLConfigurationSource                  ][ 121] →→→ No URLs will be polled as dynamic configuration sources.
10-12 21:32:45.022[I][      main][URLConfigurationSource                  ][ 122] →→→ To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
10-12 21:32:45.493[I][      main][RequestMappingHandlerAdapter            ][ 534] →→→ Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@43a51d00: startup date [Fri Oct 12 21:32:36 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@674bd420
10-12 21:32:45.949[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/mobile/query/no],methods=[POST]}" onto public java.lang.Object com.smart.pay.channel.controller.MobileEquipmentManageController.queryMobileEquipmentByNo(javax.servlet.http.HttpServletRequest,java.lang.String)
10-12 21:32:45.951[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/mobile/create],methods=[POST]}" onto public java.lang.Object com.smart.pay.channel.controller.MobileEquipmentManageController.createOrUpdateMobileEquipment(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
10-12 21:32:45.951[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/mobile/equipment/error],methods=[POST]}" onto public java.lang.Object com.smart.pay.channel.controller.MobileEquipmentManageController.notifyMobileEquipmentError(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
10-12 21:32:45.952[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/mobile/page/query],methods=[POST]}" onto public java.lang.Object com.smart.pay.channel.controller.MobileEquipmentManageController.pageMobileEquipment(javax.servlet.http.HttpServletRequest,int,int,org.springframework.data.domain.Sort$Direction,java.lang.String)
10-12 21:32:45.952[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/mobile/payment/release],methods=[POST]}" onto public java.lang.Object com.smart.pay.channel.controller.MobileEquipmentManageController.releaseMobileEquipment(javax.servlet.http.HttpServletRequest,java.lang.String)
10-12 21:32:45.952[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/mobile/payment/del],methods=[POST]}" onto public java.lang.Object com.smart.pay.channel.controller.MobileEquipmentManageController.delMobileEquipment(javax.servlet.http.HttpServletRequest,java.lang.String)
10-12 21:32:45.953[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/mobile/equipment/all],methods=[POST]}" onto public java.lang.Object com.smart.pay.channel.controller.MobileEquipmentManageController.allMobileEquipment(javax.servlet.http.HttpServletRequest)
10-12 21:32:45.953[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/mobile/status/update],methods=[POST]}" onto public java.lang.Object com.smart.pay.channel.controller.MobileEquipmentManageController.paymentMobileEquipment(javax.servlet.http.HttpServletRequest)
10-12 21:32:45.954[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/channel/test1/callback],methods=[POST]}" onto public java.lang.Object com.smart.pay.channel.controller.PaymentCallBackController.registerUser(javax.servlet.http.HttpServletRequest)
10-12 21:32:45.955[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/pay/success],methods=[GET]}" onto public java.lang.String com.smart.pay.channel.controller.PaymentCallBackController.toPaySuccessHtml(javax.servlet.http.HttpServletRequest)
10-12 21:32:45.955[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/alipaywap/callback],methods=[POST]}" onto public java.lang.Object com.smart.pay.channel.controller.PaymentCallBackController.aliPayWapNotify(javax.servlet.http.HttpServletRequest)
10-12 21:32:45.956[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/wxpaywap/callback],methods=[POST]}" onto public java.lang.Object com.smart.pay.channel.controller.PaymentCallBackController.wexinPayWapNotify(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
10-12 21:32:45.956[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/alipaywap/personal/callback],methods=[POST]}" onto public java.lang.Object com.smart.pay.channel.controller.PaymentCallBackController.aliPayPersonalWapNotify(javax.servlet.http.HttpServletRequest)
10-12 21:32:45.959[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/topup/request],methods=[POST]}" onto public java.lang.Object com.smart.pay.channel.controller.PaymentRequestController.topupRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
10-12 21:32:45.959[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/alipay/topup],methods=[GET]}" onto public java.lang.Object com.smart.pay.channel.controller.PaymentRequestController.aLiPayTopUp(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
10-12 21:32:45.960[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/wexinpay/topup],methods=[GET]}" onto public java.lang.Object com.smart.pay.channel.controller.PaymentRequestController.wexinPayTopUp(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
10-12 21:32:45.960[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartchannel/personal/request],methods=[GET || POST]}" onto public java.lang.String com.smart.pay.channel.controller.PaymentRequestController.personalRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)
10-12 21:32:45.962[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
10-12 21:32:45.963[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
10-12 21:32:46.015[I][      main][SimpleUrlHandlerMapping                 ][ 362] →→→ Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
10-12 21:32:46.015[I][      main][SimpleUrlHandlerMapping                 ][ 362] →→→ Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
10-12 21:32:46.044[I][      main][ExceptionHandlerExceptionResolver       ][ 273] →→→ Detected @ExceptionHandler methods in getApiExceptionHander
10-12 21:32:46.095[I][      main][SimpleUrlHandlerMapping                 ][ 362] →→→ Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
10-12 21:32:47.818[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10-12 21:32:47.819[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
10-12 21:32:47.820[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
10-12 21:32:47.821[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10-12 21:32:47.821[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
10-12 21:32:47.823[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
10-12 21:32:47.823[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10-12 21:32:47.824[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10-12 21:32:47.825[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
10-12 21:32:47.826[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10-12 21:32:47.828[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10-12 21:32:47.830[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
10-12 21:32:47.831[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10-12 21:32:47.832[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10-12 21:32:47.833[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
10-12 21:32:47.833[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
10-12 21:32:47.835[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
10-12 21:32:47.836[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10-12 21:32:47.838[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
10-12 21:32:47.838[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
10-12 21:32:47.839[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10-12 21:32:47.839[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
10-12 21:32:47.840[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
10-12 21:32:47.841[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10-12 21:32:47.841[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
10-12 21:32:47.842[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
10-12 21:32:47.842[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10-12 21:32:48.678[I][      main][AnnotationMBeanExporter                 ][ 431] →→→ Registering beans for JMX exposure on startup
10-12 21:32:48.680[I][      main][AnnotationMBeanExporter                 ][ 916] →→→ Bean with name 'getDataSource' has been autodetected for JMX exposure
10-12 21:32:48.692[I][      main][AnnotationMBeanExporter                 ][ 916] →→→ Bean with name 'environmentManager' has been autodetected for JMX exposure
10-12 21:32:48.695[I][      main][AnnotationMBeanExporter                 ][ 916] →→→ Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
10-12 21:32:48.695[I][      main][AnnotationMBeanExporter                 ][ 916] →→→ Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
10-12 21:32:48.696[I][      main][AnnotationMBeanExporter                 ][ 916] →→→ Bean with name 'restartEndpoint' has been autodetected for JMX exposure
10-12 21:32:48.697[I][      main][AnnotationMBeanExporter                 ][ 916] →→→ Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
10-12 21:32:48.698[I][      main][AnnotationMBeanExporter                 ][ 916] →→→ Bean with name 'refreshScope' has been autodetected for JMX exposure
10-12 21:32:48.701[I][      main][AnnotationMBeanExporter                 ][ 678] →→→ Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
10-12 21:32:48.718[I][      main][AnnotationMBeanExporter                 ][ 671] →→→ Located MBean 'getDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=getDataSource,type=DruidDataSource]
10-12 21:32:48.720[I][      main][AnnotationMBeanExporter                 ][ 678] →→→ Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
10-12 21:32:48.736[I][      main][AnnotationMBeanExporter                 ][ 678] →→→ Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
10-12 21:32:48.745[I][      main][AnnotationMBeanExporter                 ][ 678] →→→ Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
10-12 21:32:48.764[I][      main][AnnotationMBeanExporter                 ][ 678] →→→ Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=43a51d00,type=ConfigurationPropertiesRebinder]
10-12 21:32:48.770[I][      main][AnnotationMBeanExporter                 ][ 678] →→→ Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
10-12 21:32:48.771[I][      main][EndpointMBeanExporter                   ][ 431] →→→ Registering beans for JMX exposure on startup
10-12 21:32:49.050[I][      main][DefaultLifecycleProcessor               ][ 343] →→→ Starting beans in phase 0
10-12 21:32:49.053[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
10-12 21:32:49.059[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
10-12 21:32:49.066[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
10-12 21:32:49.068[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
10-12 21:32:49.070[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
10-12 21:32:49.073[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
10-12 21:32:49.075[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
10-12 21:32:49.077[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
10-12 21:32:49.079[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
10-12 21:32:49.085[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
10-12 21:32:49.087[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
10-12 21:32:49.089[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
10-12 21:32:49.091[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
10-12 21:32:49.093[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
10-12 21:32:49.123[I][      main][Http11NioProtocol                       ][ 179] →→→ Initializing ProtocolHandler ["http-nio-auto-1"]
10-12 21:32:49.140[I][      main][Http11NioProtocol                       ][ 179] →→→ Starting ProtocolHandler ["http-nio-auto-1"]
10-12 21:32:49.156[I][      main][NioSelectorPool                         ][ 179] →→→ Using a shared selector for servlet write/read
10-12 21:32:49.210[I][      main][TomcatEmbeddedServletContainer          ][ 201] →→→ Tomcat started on port(s): 59178 (http)
10-12 21:32:49.211[I][      main][EurekaAutoServiceRegistration           ][ 117] →→→ Updating port to 59178
10-12 21:32:49.224[I][      main][InstanceInfoFactory                     ][  70] →→→ Setting initial instance status as: STARTING
10-12 21:32:49.288[I][      main][DiscoveryClient                         ][ 344] →→→ Initializing Eureka in region us-east-1
10-12 21:32:49.374[I][      main][DiscoveryJerseyProvider                 ][  70] →→→ Using JSON encoding codec LegacyJacksonJson
10-12 21:32:49.374[I][      main][DiscoveryJerseyProvider                 ][  71] →→→ Using JSON decoding codec LegacyJacksonJson
10-12 21:32:49.524[I][      main][DiscoveryJerseyProvider                 ][  80] →→→ Using XML encoding codec XStreamXml
10-12 21:32:49.525[I][      main][DiscoveryJerseyProvider                 ][  81] →→→ Using XML decoding codec XStreamXml
10-12 21:32:49.876[I][      main][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
10-12 21:32:50.077[I][      main][DiscoveryClient                         ][ 920] →→→ Disable delta property : false
10-12 21:32:50.078[I][      main][DiscoveryClient                         ][ 921] →→→ Single vip registry refresh property : null
10-12 21:32:50.078[I][      main][DiscoveryClient                         ][ 922] →→→ Force full registry fetch : false
10-12 21:32:50.078[I][      main][DiscoveryClient                         ][ 923] →→→ Application is null : false
10-12 21:32:50.078[I][      main][DiscoveryClient                         ][ 924] →→→ Registered Applications size is zero : true
10-12 21:32:50.078[I][      main][DiscoveryClient                         ][ 926] →→→ Application version is -1: true
10-12 21:32:50.078[I][      main][DiscoveryClient                         ][1009] →→→ Getting all instance registry info from the eureka server
10-12 21:32:50.279[I][      main][DiscoveryClient                         ][1018] →→→ The response status is 200
10-12 21:32:50.280[I][      main][DiscoveryClient                         ][1244] →→→ Starting heartbeat executor: renew interval is: 10
10-12 21:32:50.283[I][      main][InstanceInfoReplicator                  ][  59] →→→ InstanceInfoReplicator onDemand update allowed rate per min is 4
10-12 21:32:50.286[I][      main][DiscoveryClient                         ][ 425] →→→ Discovery Client initialized at timestamp 1539351170286 with initial instances count: 4
10-12 21:32:50.321[I][      main][EurekaServiceRegistry                   ][  40] →→→ Registering application smartchannel with eureka with status UP
10-12 21:32:50.322[I][      main][DiscoveryClient                         ][1279] →→→ Saw local status change event StatusChangeEvent [timestamp=1539351170322, current=UP, previous=STARTING]
10-12 21:32:50.324[I][plicator-0][DiscoveryClient                         ][ 795] →→→ DiscoveryClient_SMARTCHANNEL/DESKTOP-T8UUSPI:smartchannel:0: registering service...
10-12 21:32:50.331[I][      main][SmartChannelStartup                     ][  57] →→→ Started SmartChannelStartup in 18.333 seconds (JVM running for 19.73)
10-12 21:32:50.332[I][      main][SmartChannelStartup                     ][  57] →→→ 服务启动完毕，请检查是否有异常...
10-12 21:32:50.369[I][plicator-0][DiscoveryClient                         ][ 804] →→→ DiscoveryClient_SMARTCHANNEL/DESKTOP-T8UUSPI:smartchannel:0 - registration status: 204
10-12 21:34:18.163[I][o-1-exec-1][[/]                                     ][ 179] →→→ Initializing Spring FrameworkServlet 'dispatcherServlet'
10-12 21:34:18.164[I][o-1-exec-1][DispatcherServlet                       ][ 489] →→→ FrameworkServlet 'dispatcherServlet': initialization started
10-12 21:34:18.217[I][o-1-exec-1][DispatcherServlet                       ][ 508] →→→ FrameworkServlet 'dispatcherServlet': initialization completed in 53 ms
10-12 21:34:18.274[I][o-1-exec-1][AnnotationConfigApplicationContext      ][ 583] →→→ Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@31199a0: startup date [Fri Oct 12 21:34:18 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@43a51d00
10-12 21:34:18.384[I][o-1-exec-1][AutowiredAnnotationBeanPostProcessor    ][ 155] →→→ JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
10-12 21:34:18.883[I][o-1-exec-1][ChainedDynamicProperty                  ][ 115] →→→ Flipping property: smartclearing.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
10-12 21:34:18.938[I][o-1-exec-1][ShutdownEnabledTimer                    ][  58] →→→ Shutdown hook installed for: NFLoadBalancer-PingTimer-smartclearing
10-12 21:34:18.996[I][o-1-exec-1][BaseLoadBalancer                        ][ 192] →→→ Client: smartclearing instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=smartclearing,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
10-12 21:34:19.011[I][o-1-exec-1][DynamicServerListLoadBalancer           ][ 214] →→→ Using serverListUpdater PollingServerListUpdater
10-12 21:34:19.063[I][o-1-exec-1][ChainedDynamicProperty                  ][ 115] →→→ Flipping property: smartclearing.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
10-12 21:34:19.067[I][o-1-exec-1][DynamicServerListLoadBalancer           ][ 150] →→→ DynamicServerListLoadBalancer for client smartclearing initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=smartclearing,current list of Servers=[DESKTOP-T8UUSPI:smartclearing:202a6275358d1744539d90d6b355483e],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:DESKTOP-T8UUSPI:smartclearing:202a6275358d1744539d90d6b355483e;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@3546b732
10-12 21:34:19.381[W][o-1-exec-1][JSONObject                              ][ 431] →→→ Tried to assign property settlePeroid:java.lang.Integer to bean of class com.smart.pay.channel.pojo.PaymentOrder
10-12 21:34:20.018[I][tUpdater-0][ChainedDynamicProperty                  ][ 115] →→→ Flipping property: smartclearing.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
10-12 21:34:47.112[I][o-1-exec-1][AlipayPersonPayRequestBusinessImpl      ][  90] →→→ mi8se1设备交易的交易量为138691.4
10-12 21:34:57.596[I][o-1-exec-1][AlipayPersonPayRequestBusinessImpl      ][  90] →→→ mi8se5设备交易的交易量为46348.21
10-12 21:35:04.718[I][o-1-exec-1][AlipayPersonPayRequestBusinessImpl      ][  90] →→→ mi8se6设备交易的交易量为1520.0
10-12 21:35:11.025[I][o-1-exec-1][AlipayPersonPayRequestBusinessImpl      ][  90] →→→ mi8se7设备交易的交易量为0.0
10-12 21:35:17.172[I][o-1-exec-1][AlipayPersonPayRequestBusinessImpl      ][  90] →→→ mi8se8设备交易的交易量为5735.03
10-12 21:35:24.697[I][o-1-exec-1][AlipayPersonPayRequestBusinessImpl      ][  90] →→→ mi8se9设备交易的交易量为5709.86
10-12 21:35:34.438[I][o-1-exec-1][AlipayPersonPayRequestBusinessImpl      ][  90] →→→ mi8se10设备交易的交易量为10002.85
