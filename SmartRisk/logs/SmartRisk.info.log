11-03 00:01:28.127[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
11-03 00:06:28.141[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
11-03 00:11:28.142[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
11-03 00:16:28.145[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
11-03 00:21:28.147[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
11-03 00:26:28.148[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
11-03 00:31:28.151[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
11-03 00:36:28.153[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
11-03 00:41:28.154[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
11-03 00:46:28.155[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
11-03 00:51:28.157[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
11-03 00:54:29.305[I][      main][AnnotationConfigApplicationContext      ][ 583] →→→ Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2525ff7e: startup date [Sat Nov 03 00:54:29 CST 2018]; root of context hierarchy
11-03 00:54:30.104[I][nd-preinit][Version                                 ][  30] →→→ HV000001: Hibernate Validator 5.3.5.Final
11-03 00:54:30.119[I][      main][AutowiredAnnotationBeanPostProcessor    ][ 155] →→→ JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11-03 00:54:30.258[I][      main][PostProcessorRegistrationDelegate$BeanPostProcessorChecker][ 325] →→→ Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$88923d02] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11-03 00:54:33.360[I][      main][SmartRiskStartup                        ][ 597] →→→ The following profiles are active: prod
11-03 00:54:33.411[I][      main][AnnotationConfigEmbeddedWebApplicationContext][ 583] →→→ Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@aa549e5: startup date [Sat Nov 03 00:54:33 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2525ff7e
11-03 00:54:38.642[I][      main][GenericScope                            ][ 263] →→→ BeanFactory id=3d731151-a6d9-3513-9acc-e1521c0497cf
11-03 00:54:38.976[I][      main][AutowiredAnnotationBeanPostProcessor    ][ 155] →→→ JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11-03 00:54:40.259[I][      main][PostProcessorRegistrationDelegate$BeanPostProcessorChecker][ 325] →→→ Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6c783a05] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11-03 00:54:40.696[I][      main][PostProcessorRegistrationDelegate$BeanPostProcessorChecker][ 325] →→→ Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$9ea4e046] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11-03 00:54:40.740[I][      main][PostProcessorRegistrationDelegate$BeanPostProcessorChecker][ 325] →→→ Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$88923d02] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11-03 00:54:43.582[I][      main][TomcatEmbeddedServletContainer          ][  89] →→→ Tomcat initialized with port(s): 0 (http)
11-03 00:54:43.620[I][      main][StandardService                         ][ 179] →→→ Starting service [Tomcat]
11-03 00:54:43.622[I][      main][StandardEngine                          ][ 179] →→→ Starting Servlet Engine: Apache Tomcat/8.5.20
11-03 00:54:44.824[I][tartStop-1][[/]                                     ][ 179] →→→ Initializing Spring embedded WebApplicationContext
11-03 00:54:44.825[I][tartStop-1][ContextLoader                           ][ 276] →→→ Root WebApplicationContext: initialization completed in 11414 ms
11-03 00:54:46.591[I][tartStop-1][ServletRegistrationBean                 ][ 190] →→→ Mapping servlet: 'dispatcherServlet' to [/]
11-03 00:54:46.607[I][tartStop-1][FilterRegistrationBean                  ][ 258] →→→ Mapping filter: 'metricsFilter' to: [/*]
11-03 00:54:46.608[I][tartStop-1][FilterRegistrationBean                  ][ 258] →→→ Mapping filter: 'characterEncodingFilter' to: [/*]
11-03 00:54:46.609[I][tartStop-1][FilterRegistrationBean                  ][ 258] →→→ Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
11-03 00:54:46.609[I][tartStop-1][FilterRegistrationBean                  ][ 258] →→→ Mapping filter: 'httpPutFormContentFilter' to: [/*]
11-03 00:54:46.611[I][tartStop-1][FilterRegistrationBean                  ][ 258] →→→ Mapping filter: 'requestContextFilter' to: [/*]
11-03 00:54:46.611[I][tartStop-1][FilterRegistrationBean                  ][ 258] →→→ Mapping filter: 'webRequestLoggingFilter' to: [/*]
11-03 00:54:46.612[I][tartStop-1][FilterRegistrationBean                  ][ 258] →→→ Mapping filter: 'applicationContextIdFilter' to: [/*]
11-03 00:54:48.506[I][      main][DruidDataSource                         ][ 922] →→→ {dataSource-1} inited
11-03 00:54:50.151[I][      main][LocalContainerEntityManagerFactoryBean  ][ 349] →→→ Building JPA container EntityManagerFactory for persistence unit 'default'
11-03 00:54:50.205[I][      main][LogHelper                               ][  31] →→→ HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
11-03 00:54:50.588[I][      main][Version                                 ][  37] →→→ HHH000412: Hibernate Core {5.0.12.Final}
11-03 00:54:50.591[I][      main][Environment                             ][ 213] →→→ HHH000206: hibernate.properties not found
11-03 00:54:50.594[I][      main][Environment                             ][ 317] →→→ HHH000021: Bytecode provider name : javassist
11-03 00:54:50.756[I][      main][Version                                 ][  66] →→→ HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
11-03 00:54:51.331[I][      main][Dialect                                 ][ 156] →→→ HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
11-03 00:54:52.784[I][      main][LocalContainerEntityManagerFactoryBean  ][ 379] →→→ Initialized JPA EntityManagerFactory for persistence unit 'default'
11-03 00:54:53.513[I][      main][QueryTranslatorFactoryInitiator         ][  47] →→→ HHH000397: Using ASTQueryTranslatorFactory
11-03 00:54:54.015[I][      main][ThreadPoolTaskExecutor                  ][ 165] →→→ Initializing ExecutorService 
11-03 00:54:54.031[I][      main][ThreadPoolTaskExecutor                  ][ 165] →→→ Initializing ExecutorService  'myAsync'
11-03 00:54:56.337[W][      main][URLConfigurationSource                  ][ 121] →→→ No URLs will be polled as dynamic configuration sources.
11-03 00:54:56.350[I][      main][URLConfigurationSource                  ][ 122] →→→ To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
11-03 00:54:56.367[W][      main][URLConfigurationSource                  ][ 121] →→→ No URLs will be polled as dynamic configuration sources.
11-03 00:54:56.368[I][      main][URLConfigurationSource                  ][ 122] →→→ To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
11-03 00:54:57.550[I][      main][RequestMappingHandlerAdapter            ][ 534] →→→ Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@aa549e5: startup date [Sat Nov 03 00:54:33 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2525ff7e
11-03 00:54:57.912[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartrisk/merchantblacklist/query],methods=[POST]}" onto public java.lang.Object com.smart.pay.risk.controller.RiskController.queryMerchantBlacklist(javax.servlet.http.HttpServletRequest,java.lang.String,int,int,org.springframework.data.domain.Sort$Direction,java.lang.String) throws java.lang.Exception
11-03 00:54:57.918[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartrisk/merchantblacklist/del],methods=[POST]}" onto public java.lang.Object com.smart.pay.risk.controller.RiskController.delMerchantBlacklist(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
11-03 00:54:57.918[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartrisk/merchantlimit/query/merchantid],methods=[POST]}" onto public java.lang.Object com.smart.pay.risk.controller.RiskController.queryMerchantLimit(javax.servlet.http.HttpServletRequest,java.lang.String)
11-03 00:54:57.924[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartrisk/merchantlimit/query],methods=[POST]}" onto public java.lang.Object com.smart.pay.risk.controller.RiskController.queryMerchantLimit(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
11-03 00:54:57.925[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartrisk/merchantblacklist/add],methods=[POST]}" onto public java.lang.Object com.smart.pay.risk.controller.RiskController.addMerchantBlacklist(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
11-03 00:54:57.925[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartrisk/merchantblacklist/merchantid],methods=[POST]}" onto public java.lang.Object com.smart.pay.risk.controller.RiskController.queryMerchantBlacklistByMerchantid(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
11-03 00:54:57.926[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartrisk/merchantlimit/add],methods=[POST]}" onto public java.lang.Object com.smart.pay.risk.controller.RiskController.addMerchantLimit(javax.servlet.http.HttpServletRequest,java.lang.String,java.math.BigDecimal,java.math.BigDecimal,java.lang.String,java.lang.String,java.lang.String)
11-03 00:54:57.929[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
11-03 00:54:57.930[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
11-03 00:54:58.034[I][      main][SimpleUrlHandlerMapping                 ][ 362] →→→ Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11-03 00:54:58.035[I][      main][SimpleUrlHandlerMapping                 ][ 362] →→→ Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11-03 00:54:58.114[I][      main][ExceptionHandlerExceptionResolver       ][ 273] →→→ Detected @ExceptionHandler methods in getApiExceptionHander
11-03 00:54:58.182[I][      main][SimpleUrlHandlerMapping                 ][ 362] →→→ Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11-03 00:55:01.000[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11-03 00:55:01.002[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
11-03 00:55:01.007[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
11-03 00:55:01.008[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
11-03 00:55:01.009[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11-03 00:55:01.010[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
11-03 00:55:01.011[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
11-03 00:55:01.013[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
11-03 00:55:01.016[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
11-03 00:55:01.018[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11-03 00:55:01.022[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
11-03 00:55:01.027[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11-03 00:55:01.036[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11-03 00:55:01.038[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11-03 00:55:01.040[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11-03 00:55:01.041[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
11-03 00:55:01.042[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
11-03 00:55:01.044[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
11-03 00:55:01.047[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
11-03 00:55:01.047[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11-03 00:55:01.048[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11-03 00:55:01.050[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
11-03 00:55:01.051[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11-03 00:55:01.053[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
11-03 00:55:01.077[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11-03 00:55:01.078[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
11-03 00:55:01.079[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11-03 00:55:01.887[I][      main][AnnotationMBeanExporter                 ][ 431] →→→ Registering beans for JMX exposure on startup
11-03 00:55:01.889[I][      main][AnnotationMBeanExporter                 ][ 916] →→→ Bean with name 'getDataSource' has been autodetected for JMX exposure
11-03 00:55:01.908[I][      main][AnnotationMBeanExporter                 ][ 916] →→→ Bean with name 'environmentManager' has been autodetected for JMX exposure
11-03 00:55:01.924[I][      main][AnnotationMBeanExporter                 ][ 916] →→→ Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
11-03 00:55:01.928[I][      main][AnnotationMBeanExporter                 ][ 916] →→→ Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
11-03 00:55:02.000[I][      main][AnnotationMBeanExporter                 ][ 916] →→→ Bean with name 'restartEndpoint' has been autodetected for JMX exposure
11-03 00:55:02.005[I][      main][AnnotationMBeanExporter                 ][ 916] →→→ Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
11-03 00:55:02.006[I][      main][AnnotationMBeanExporter                 ][ 916] →→→ Bean with name 'refreshScope' has been autodetected for JMX exposure
11-03 00:55:02.028[I][      main][AnnotationMBeanExporter                 ][ 678] →→→ Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
11-03 00:55:02.082[I][      main][AnnotationMBeanExporter                 ][ 671] →→→ Located MBean 'getDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=getDataSource,type=DruidDataSource]
11-03 00:55:02.117[I][      main][AnnotationMBeanExporter                 ][ 678] →→→ Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
11-03 00:55:02.146[I][      main][AnnotationMBeanExporter                 ][ 678] →→→ Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
11-03 00:55:02.160[I][      main][AnnotationMBeanExporter                 ][ 678] →→→ Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
11-03 00:55:02.181[I][      main][AnnotationMBeanExporter                 ][ 678] →→→ Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=aa549e5,type=ConfigurationPropertiesRebinder]
11-03 00:55:02.232[I][      main][AnnotationMBeanExporter                 ][ 678] →→→ Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
11-03 00:55:02.234[I][      main][EndpointMBeanExporter                   ][ 431] →→→ Registering beans for JMX exposure on startup
11-03 00:55:02.732[I][      main][DefaultLifecycleProcessor               ][ 343] →→→ Starting beans in phase 0
11-03 00:55:02.736[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
11-03 00:55:02.746[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
11-03 00:55:02.757[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
11-03 00:55:02.762[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
11-03 00:55:02.767[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
11-03 00:55:02.772[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
11-03 00:55:02.778[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
11-03 00:55:02.782[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
11-03 00:55:02.791[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
11-03 00:55:02.802[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
11-03 00:55:02.806[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
11-03 00:55:02.810[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
11-03 00:55:02.814[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
11-03 00:55:02.818[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
11-03 00:55:02.883[I][      main][Http11NioProtocol                       ][ 179] →→→ Initializing ProtocolHandler ["http-nio-auto-1"]
11-03 00:55:02.968[I][      main][Http11NioProtocol                       ][ 179] →→→ Starting ProtocolHandler ["http-nio-auto-1"]
11-03 00:55:03.320[I][      main][NioSelectorPool                         ][ 179] →→→ Using a shared selector for servlet write/read
11-03 00:55:03.419[I][      main][TomcatEmbeddedServletContainer          ][ 201] →→→ Tomcat started on port(s): 49963 (http)
11-03 00:55:03.421[I][      main][EurekaAutoServiceRegistration           ][ 117] →→→ Updating port to 49963
11-03 00:55:03.441[I][      main][InstanceInfoFactory                     ][  70] →→→ Setting initial instance status as: STARTING
11-03 00:55:03.608[I][      main][DiscoveryClient                         ][ 344] →→→ Initializing Eureka in region us-east-1
11-03 00:55:05.058[I][      main][DiscoveryJerseyProvider                 ][  70] →→→ Using JSON encoding codec LegacyJacksonJson
11-03 00:55:05.059[I][      main][DiscoveryJerseyProvider                 ][  71] →→→ Using JSON decoding codec LegacyJacksonJson
11-03 00:55:05.284[I][      main][DiscoveryJerseyProvider                 ][  80] →→→ Using XML encoding codec XStreamXml
11-03 00:55:05.285[I][      main][DiscoveryJerseyProvider                 ][  81] →→→ Using XML decoding codec XStreamXml
11-03 00:55:05.666[I][      main][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
11-03 00:55:05.987[I][      main][DiscoveryClient                         ][ 920] →→→ Disable delta property : false
11-03 00:55:05.987[I][      main][DiscoveryClient                         ][ 921] →→→ Single vip registry refresh property : null
11-03 00:55:05.988[I][      main][DiscoveryClient                         ][ 922] →→→ Force full registry fetch : false
11-03 00:55:05.988[I][      main][DiscoveryClient                         ][ 923] →→→ Application is null : false
11-03 00:55:05.988[I][      main][DiscoveryClient                         ][ 924] →→→ Registered Applications size is zero : true
11-03 00:55:05.989[I][      main][DiscoveryClient                         ][ 926] →→→ Application version is -1: true
11-03 00:55:05.989[I][      main][DiscoveryClient                         ][1009] →→→ Getting all instance registry info from the eureka server
11-03 00:55:06.253[I][      main][DiscoveryClient                         ][1018] →→→ The response status is 200
11-03 00:55:06.256[I][      main][DiscoveryClient                         ][1244] →→→ Starting heartbeat executor: renew interval is: 10
11-03 00:55:06.260[I][      main][InstanceInfoReplicator                  ][  59] →→→ InstanceInfoReplicator onDemand update allowed rate per min is 4
11-03 00:55:06.264[I][      main][DiscoveryClient                         ][ 425] →→→ Discovery Client initialized at timestamp 1541177706264 with initial instances count: 4
11-03 00:55:06.309[I][      main][EurekaServiceRegistry                   ][  40] →→→ Registering application smartrisk with eureka with status UP
11-03 00:55:06.310[I][      main][DiscoveryClient                         ][1279] →→→ Saw local status change event StatusChangeEvent [timestamp=1541177706310, current=UP, previous=STARTING]
11-03 00:55:06.314[I][plicator-0][DiscoveryClient                         ][ 795] →→→ DiscoveryClient_SMARTRISK/DESKTOP-T8UUSPI:smartrisk:0: registering service...
11-03 00:55:06.322[I][      main][SmartRiskStartup                        ][  57] →→→ Started SmartRiskStartup in 41.164 seconds (JVM running for 43.718)
11-03 00:55:06.322[I][      main][SmartRiskStartup                        ][  43] →→→ 服务启动完毕，请检查是否有异常...
11-03 00:55:06.367[I][plicator-0][DiscoveryClient                         ][ 804] →→→ DiscoveryClient_SMARTRISK/DESKTOP-T8UUSPI:smartrisk:0 - registration status: 204
11-03 01:00:05.992[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
11-03 01:05:05.994[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
