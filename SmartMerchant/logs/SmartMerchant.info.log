11-03 00:00:24.403[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
11-03 00:05:24.418[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
11-03 00:10:24.419[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
11-03 00:15:24.420[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
11-03 00:20:24.422[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
11-03 00:25:24.425[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
11-03 00:30:24.427[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
11-03 00:35:24.430[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
11-03 00:40:24.432[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
11-03 00:45:24.433[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
11-03 00:50:24.434[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
11-03 00:54:06.549[I][      main][AnnotationConfigApplicationContext      ][ 583] →→→ Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@c333c60: startup date [Sat Nov 03 00:54:06 CST 2018]; root of context hierarchy
11-03 00:54:07.293[I][      main][AutowiredAnnotationBeanPostProcessor    ][ 155] →→→ JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11-03 00:54:07.311[I][nd-preinit][Version                                 ][  30] →→→ HV000001: Hibernate Validator 5.3.5.Final
11-03 00:54:07.413[I][      main][PostProcessorRegistrationDelegate$BeanPostProcessorChecker][ 325] →→→ Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$dbc11178] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11-03 00:54:08.770[I][      main][SmartMerchantStartup                    ][ 597] →→→ The following profiles are active: prod
11-03 00:54:08.802[I][      main][AnnotationConfigEmbeddedWebApplicationContext][ 583] →→→ Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@758c83d8: startup date [Sat Nov 03 00:54:08 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@c333c60
11-03 00:54:11.426[I][      main][RepositoryConfigurationDelegate         ][ 165] →→→ Multiple Spring Data modules found, entering strict repository configuration mode!
11-03 00:54:11.785[I][      main][RepositoryConfigurationDelegate         ][ 165] →→→ Multiple Spring Data modules found, entering strict repository configuration mode!
11-03 00:54:11.922[I][      main][RepositoryConfigurationExtensionSupport ][ 270] →→→ Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.smart.pay.merchant.repository.MerchantRateRepository.
11-03 00:54:11.924[I][      main][RepositoryConfigurationExtensionSupport ][ 270] →→→ Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.smart.pay.merchant.repository.MerchantAccountFreezeHistoryRepository.
11-03 00:54:11.926[I][      main][RepositoryConfigurationExtensionSupport ][ 270] →→→ Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.smart.pay.merchant.repository.MerchantAccountRepository.
11-03 00:54:11.928[I][      main][RepositoryConfigurationExtensionSupport ][ 270] →→→ Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.smart.pay.merchant.repository.MerchantBankCardRepository.
11-03 00:54:11.929[I][      main][RepositoryConfigurationExtensionSupport ][ 270] →→→ Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.smart.pay.merchant.repository.MerchantChannelRepository.
11-03 00:54:11.930[I][      main][RepositoryConfigurationExtensionSupport ][ 270] →→→ Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.smart.pay.merchant.repository.MerchantAccountHistoryRepository.
11-03 00:54:11.931[I][      main][RepositoryConfigurationExtensionSupport ][ 270] →→→ Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.smart.pay.merchant.repository.MerchantKeyRepository.
11-03 00:54:11.932[I][      main][RepositoryConfigurationExtensionSupport ][ 270] →→→ Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.smart.pay.merchant.repository.SmsRecordRepository.
11-03 00:54:11.933[I][      main][RepositoryConfigurationExtensionSupport ][ 270] →→→ Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.smart.pay.merchant.repository.MerchantIPWhiteListRepository.
11-03 00:54:11.936[I][      main][RepositoryConfigurationExtensionSupport ][ 270] →→→ Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.smart.pay.merchant.repository.MerchantRepository.
11-03 00:54:11.937[I][      main][RepositoryConfigurationExtensionSupport ][ 270] →→→ Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.smart.pay.merchant.repository.MerchantChannelStatisRepository.
11-03 00:54:12.721[I][      main][GenericScope                            ][ 263] →→→ BeanFactory id=15260b27-5f0b-3b48-bb3d-5eaf92cc672a
11-03 00:54:12.859[I][      main][AutowiredAnnotationBeanPostProcessor    ][ 155] →→→ JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11-03 00:54:13.287[I][      main][PostProcessorRegistrationDelegate$BeanPostProcessorChecker][ 325] →→→ Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bfa70e7b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11-03 00:54:13.621[I][      main][PostProcessorRegistrationDelegate$BeanPostProcessorChecker][ 325] →→→ Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$f1d3b4bc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11-03 00:54:13.655[I][      main][PostProcessorRegistrationDelegate$BeanPostProcessorChecker][ 325] →→→ Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$dbc11178] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11-03 00:54:15.053[I][      main][TomcatEmbeddedServletContainer          ][  89] →→→ Tomcat initialized with port(s): 0 (http)
11-03 00:54:15.081[I][      main][StandardService                         ][ 179] →→→ Starting service [Tomcat]
11-03 00:54:15.084[I][      main][StandardEngine                          ][ 179] →→→ Starting Servlet Engine: Apache Tomcat/8.5.20
11-03 00:54:16.159[I][tartStop-1][[/]                                     ][ 179] →→→ Initializing Spring embedded WebApplicationContext
11-03 00:54:16.161[I][tartStop-1][ContextLoader                           ][ 276] →→→ Root WebApplicationContext: initialization completed in 7359 ms
11-03 00:54:17.569[I][tartStop-1][ServletRegistrationBean                 ][ 190] →→→ Mapping servlet: 'dispatcherServlet' to [/]
11-03 00:54:17.579[I][tartStop-1][FilterRegistrationBean                  ][ 258] →→→ Mapping filter: 'metricsFilter' to: [/*]
11-03 00:54:17.580[I][tartStop-1][FilterRegistrationBean                  ][ 258] →→→ Mapping filter: 'characterEncodingFilter' to: [/*]
11-03 00:54:17.581[I][tartStop-1][FilterRegistrationBean                  ][ 258] →→→ Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
11-03 00:54:17.581[I][tartStop-1][FilterRegistrationBean                  ][ 258] →→→ Mapping filter: 'httpPutFormContentFilter' to: [/*]
11-03 00:54:17.582[I][tartStop-1][FilterRegistrationBean                  ][ 258] →→→ Mapping filter: 'requestContextFilter' to: [/*]
11-03 00:54:17.587[I][tartStop-1][FilterRegistrationBean                  ][ 258] →→→ Mapping filter: 'webRequestLoggingFilter' to: [/*]
11-03 00:54:17.587[I][tartStop-1][FilterRegistrationBean                  ][ 258] →→→ Mapping filter: 'applicationContextIdFilter' to: [/*]
11-03 00:54:18.857[I][      main][DruidDataSource                         ][ 922] →→→ {dataSource-1} inited
11-03 00:54:20.796[I][      main][LocalContainerEntityManagerFactoryBean  ][ 349] →→→ Building JPA container EntityManagerFactory for persistence unit 'default'
11-03 00:54:20.840[I][      main][LogHelper                               ][  31] →→→ HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
11-03 00:54:21.009[I][      main][Version                                 ][  37] →→→ HHH000412: Hibernate Core {5.0.12.Final}
11-03 00:54:21.013[I][      main][Environment                             ][ 213] →→→ HHH000206: hibernate.properties not found
11-03 00:54:21.017[I][      main][Environment                             ][ 317] →→→ HHH000021: Bytecode provider name : javassist
11-03 00:54:21.143[I][      main][Version                                 ][  66] →→→ HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
11-03 00:54:21.887[I][      main][Dialect                                 ][ 156] →→→ HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
11-03 00:54:23.849[I][      main][LocalContainerEntityManagerFactoryBean  ][ 379] →→→ Initialized JPA EntityManagerFactory for persistence unit 'default'
11-03 00:54:25.377[I][      main][QueryTranslatorFactoryInitiator         ][  47] →→→ HHH000397: Using ASTQueryTranslatorFactory
11-03 00:54:27.596[I][      main][ThreadPoolTaskExecutor                  ][ 165] →→→ Initializing ExecutorService 
11-03 00:54:27.643[I][      main][ThreadPoolTaskExecutor                  ][ 165] →→→ Initializing ExecutorService  'myAsync'
11-03 00:54:31.223[W][      main][URLConfigurationSource                  ][ 121] →→→ No URLs will be polled as dynamic configuration sources.
11-03 00:54:31.256[I][      main][URLConfigurationSource                  ][ 122] →→→ To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
11-03 00:54:31.273[W][      main][URLConfigurationSource                  ][ 121] →→→ No URLs will be polled as dynamic configuration sources.
11-03 00:54:31.275[I][      main][URLConfigurationSource                  ][ 122] →→→ To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
11-03 00:54:32.797[I][      main][RequestMappingHandlerAdapter            ][ 534] →→→ Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@758c83d8: startup date [Sat Nov 03 00:54:08 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@c333c60
11-03 00:54:33.566[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartmerchant/merchant/collect],methods=[POST]}" onto public java.lang.Object com.smart.pay.merchant.controller.MerchantAccountController.addCollectMoney(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
11-03 00:54:33.568[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartmerchant/merchant/withdraw/req],methods=[POST]}" onto public java.lang.Object com.smart.pay.merchant.controller.MerchantAccountController.addNewWithdraw(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
11-03 00:54:33.569[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartmerchant/merchant/account/unfreeze],methods=[POST]}" onto public java.lang.Object com.smart.pay.merchant.controller.MerchantAccountController.unfreezeAccount(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
11-03 00:54:33.570[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartmerchant/merchant/account/unfreezeandupdate],methods=[POST]}" onto public java.lang.Object com.smart.pay.merchant.controller.MerchantAccountController.unFreezeAndUpdateAccount(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
11-03 00:54:33.571[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartmerchant/merchant/account/id],methods=[POST]}" onto public java.lang.Object com.smart.pay.merchant.controller.MerchantAccountController.getMerchantAccount(javax.servlet.http.HttpServletRequest,java.lang.String)
11-03 00:54:33.571[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartmerchant/merchant/account/history],methods=[POST]}" onto public java.lang.Object com.smart.pay.merchant.controller.MerchantAccountController.queryMerchantAccountHistory(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,int,int,org.springframework.data.domain.Sort$Direction,java.lang.String) throws java.lang.Exception
11-03 00:54:33.573[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartmerchant/merchant/bank/del/cardno],methods=[POST]}" onto public java.lang.Object com.smart.pay.merchant.controller.MerchantBankCardController.delMerchantBankCard(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
11-03 00:54:33.574[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartmerchant/merchant/bank/update/iddef],methods=[POST]}" onto public java.lang.Object com.smart.pay.merchant.controller.MerchantBankCardController.updateMerchantBankCard(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
11-03 00:54:33.575[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartmerchant/merchant/bank/new],methods=[POST]}" onto public java.lang.Object com.smart.pay.merchant.controller.MerchantBankCardController.AddMerchantBankCard(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
11-03 00:54:33.576[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartmerchant/merchant/bank/query],methods=[POST]}" onto public java.lang.Object com.smart.pay.merchant.controller.MerchantBankCardController.getMerchantBankCardByparent(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,int,int,org.springframework.data.domain.Sort$Direction,java.lang.String)
11-03 00:54:33.577[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartmerchant/merchant/bank/query/iddef],methods=[POST]}" onto public java.lang.Object com.smart.pay.merchant.controller.MerchantBankCardController.getMerchantBankCard(javax.servlet.http.HttpServletRequest,java.lang.String)
11-03 00:54:33.584[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartmerchant/merchant/new],methods=[POST]}" onto public java.lang.Object com.smart.pay.merchant.controller.MerchantController.createMerchant(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
11-03 00:54:33.586[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartmerchant/merchant/auth],methods=[POST]}" onto public java.lang.Object com.smart.pay.merchant.controller.MerchantController.authMerchant(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
11-03 00:54:33.586[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartmerchant/merchant/info],methods=[POST]}" onto public java.lang.Object com.smart.pay.merchant.controller.MerchantController.getMerchantInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
11-03 00:54:33.587[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartmerchant/merchant/id],methods=[POST]}" onto public java.lang.Object com.smart.pay.merchant.controller.MerchantController.getMerchant(javax.servlet.http.HttpServletRequest,java.lang.String)
11-03 00:54:33.587[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartmerchant/merchant/login],methods=[POST]}" onto public java.lang.Object com.smart.pay.merchant.controller.MerchantController.loginSys(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
11-03 00:54:33.588[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartmerchant/merchant/sendcode],methods=[POST]}" onto public java.lang.Object com.smart.pay.merchant.controller.MerchantController.sendValidcode(javax.servlet.http.HttpServletRequest,java.lang.String)
11-03 00:54:33.589[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartmerchant/merchant/valid/paypass],methods=[POST]}" onto public java.lang.Object com.smart.pay.merchant.controller.MerchantController.validpass(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
11-03 00:54:33.590[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartmerchant/merchant/monitor],methods=[GET]}" onto public java.lang.Object com.smart.pay.merchant.controller.MerchantController.monitor(javax.servlet.http.HttpServletRequest)
11-03 00:54:33.590[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartmerchant/merchant/updatesettleperoid],methods=[POST]}" onto public java.lang.Object com.smart.pay.merchant.controller.MerchantController.updateMerchantSettlePeroid(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
11-03 00:54:33.591[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartmerchant/merchant/updatepass],methods=[POST]}" onto public java.lang.Object com.smart.pay.merchant.controller.MerchantController.updateMerchantPass(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
11-03 00:54:33.593[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartmerchant/merchant/channel/new],methods=[POST]}" onto public java.lang.Object com.smart.pay.merchant.controller.MerchantController.addMerchantChannel(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
11-03 00:54:33.593[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartmerchant/merchant/channel/query],methods=[POST]}" onto public java.lang.Object com.smart.pay.merchant.controller.MerchantController.queryAllMerchantChannel(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
11-03 00:54:33.594[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartmerchant/allmerchant/channel/query],methods=[POST]}" onto public java.lang.Object com.smart.pay.merchant.controller.MerchantController.queryAllMerchantChannel(javax.servlet.http.HttpServletRequest)
11-03 00:54:33.595[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartmerchant/merchant/channel/update],methods=[POST]}" onto public java.lang.Object com.smart.pay.merchant.controller.MerchantController.updateMerchantChannel(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
11-03 00:54:33.596[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartmerchant/merchant/parent/id],methods=[POST]}" onto public java.lang.Object com.smart.pay.merchant.controller.MerchantController.getMerchantByparent(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,int,int,org.springframework.data.domain.Sort$Direction,java.lang.String)
11-03 00:54:33.596[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartmerchant/merchant/platform/all],methods=[POST]}" onto public java.lang.Object com.smart.pay.merchant.controller.MerchantController.getAllMerchantByparent(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,int,int,org.springframework.data.domain.Sort$Direction,java.lang.String)
11-03 00:54:33.597[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartmerchant/merchant/allauthmerchant],methods=[POST]}" onto public java.lang.Object com.smart.pay.merchant.controller.MerchantController.getMerchantAllAuthMerchant(javax.servlet.http.HttpServletRequest)
11-03 00:54:33.597[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartmerchant/merchant/updatepaypass],methods=[POST]}" onto public java.lang.Object com.smart.pay.merchant.controller.MerchantController.updateMerchantPayPass(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
11-03 00:54:33.598[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartmerchant/merchant/rate/new],methods=[POST]}" onto public java.lang.Object com.smart.pay.merchant.controller.MerchantRateController.addMerchantRate(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
11-03 00:54:33.599[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartmerchant/merchant/rate/id],methods=[POST]}" onto public java.lang.Object com.smart.pay.merchant.controller.MerchantRateController.getMerchantRate(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
11-03 00:54:33.600[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartmerchant/merchant/rate/merchantid],methods=[POST]}" onto public java.lang.Object com.smart.pay.merchant.controller.MerchantRateController.getMerchantRate(javax.servlet.http.HttpServletRequest,java.lang.String)
11-03 00:54:33.601[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartmerchant/merchant/key/query],methods=[POST]}" onto public java.lang.Object com.smart.pay.merchant.controller.MerchantSecurityController.queryMerchantKey(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
11-03 00:54:33.602[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartmerchant/merchant/key/new],methods=[POST]}" onto public java.lang.Object com.smart.pay.merchant.controller.MerchantSecurityController.newMerchantKey(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
11-03 00:54:33.602[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartmerchant/merchant/whitelist/del],methods=[POST]}" onto public java.lang.Object com.smart.pay.merchant.controller.MerchantSecurityController.delMerchantIPAddress(javax.servlet.http.HttpServletRequest,long)
11-03 00:54:33.603[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartmerchant/merchant/whitelist],methods=[POST]}" onto public java.lang.Object com.smart.pay.merchant.controller.MerchantSecurityController.addMerchantIPAddress(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
11-03 00:54:33.603[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartmerchant/merchant/whitelist/query],methods=[POST]}" onto public java.lang.Object com.smart.pay.merchant.controller.MerchantSecurityController.queryMerchantIPAddress(javax.servlet.http.HttpServletRequest,java.lang.String)
11-03 00:54:33.604[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartmerchant/merchant/whitelist/platform/query],methods=[POST]}" onto public java.lang.Object com.smart.pay.merchant.controller.MerchantSecurityController.queryMerchantIPAddressPrent(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,int,int,org.springframework.data.domain.Sort$Direction,java.lang.String)
11-03 00:54:33.606[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartmerchant/merchant/transactionstatis/create],methods=[POST]}" onto public java.lang.Object com.smart.pay.merchant.controller.MerchantTransactionStatisController.createOrUpdateMerchantStatis(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.math.BigDecimal,java.lang.String)
11-03 00:54:33.606[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartmerchant/merchant/transactionstatis/query],methods=[POST]}" onto public java.lang.Object com.smart.pay.merchant.controller.MerchantTransactionStatisController.queryMerchantStatis(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
11-03 00:54:33.622[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
11-03 00:54:33.623[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
11-03 00:54:33.747[I][      main][SimpleUrlHandlerMapping                 ][ 362] →→→ Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11-03 00:54:33.748[I][      main][SimpleUrlHandlerMapping                 ][ 362] →→→ Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11-03 00:54:33.802[I][      main][ExceptionHandlerExceptionResolver       ][ 273] →→→ Detected @ExceptionHandler methods in getApiExceptionHander
11-03 00:54:34.698[I][      main][SimpleUrlHandlerMapping                 ][ 362] →→→ Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11-03 00:54:39.667[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
11-03 00:54:39.668[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11-03 00:54:39.669[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11-03 00:54:39.670[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11-03 00:54:39.672[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
11-03 00:54:39.672[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11-03 00:54:39.673[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11-03 00:54:39.674[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
11-03 00:54:39.678[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11-03 00:54:39.681[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11-03 00:54:39.682[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11-03 00:54:39.683[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11-03 00:54:39.685[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
11-03 00:54:39.685[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
11-03 00:54:39.687[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
11-03 00:54:39.688[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
11-03 00:54:39.691[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
11-03 00:54:39.691[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
11-03 00:54:39.692[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11-03 00:54:39.693[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
11-03 00:54:39.696[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
11-03 00:54:39.697[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
11-03 00:54:39.699[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
11-03 00:54:39.700[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11-03 00:54:39.701[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
11-03 00:54:39.702[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
11-03 00:54:39.703[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11-03 00:54:41.258[I][      main][AnnotationMBeanExporter                 ][ 431] →→→ Registering beans for JMX exposure on startup
11-03 00:54:41.261[I][      main][AnnotationMBeanExporter                 ][ 916] →→→ Bean with name 'getDataSource' has been autodetected for JMX exposure
11-03 00:54:41.289[I][      main][AnnotationMBeanExporter                 ][ 916] →→→ Bean with name 'environmentManager' has been autodetected for JMX exposure
11-03 00:54:41.292[I][      main][AnnotationMBeanExporter                 ][ 916] →→→ Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
11-03 00:54:41.293[I][      main][AnnotationMBeanExporter                 ][ 916] →→→ Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
11-03 00:54:41.298[I][      main][AnnotationMBeanExporter                 ][ 916] →→→ Bean with name 'restartEndpoint' has been autodetected for JMX exposure
11-03 00:54:41.324[I][      main][AnnotationMBeanExporter                 ][ 916] →→→ Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
11-03 00:54:41.328[I][      main][AnnotationMBeanExporter                 ][ 916] →→→ Bean with name 'refreshScope' has been autodetected for JMX exposure
11-03 00:54:41.332[I][      main][AnnotationMBeanExporter                 ][ 678] →→→ Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
11-03 00:54:41.364[I][      main][AnnotationMBeanExporter                 ][ 671] →→→ Located MBean 'getDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=getDataSource,type=DruidDataSource]
11-03 00:54:41.369[I][      main][AnnotationMBeanExporter                 ][ 678] →→→ Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
11-03 00:54:41.405[I][      main][AnnotationMBeanExporter                 ][ 678] →→→ Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
11-03 00:54:41.417[I][      main][AnnotationMBeanExporter                 ][ 678] →→→ Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
11-03 00:54:41.436[I][      main][AnnotationMBeanExporter                 ][ 678] →→→ Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=758c83d8,type=ConfigurationPropertiesRebinder]
11-03 00:54:41.443[I][      main][AnnotationMBeanExporter                 ][ 678] →→→ Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
11-03 00:54:41.446[I][      main][EndpointMBeanExporter                   ][ 431] →→→ Registering beans for JMX exposure on startup
11-03 00:54:42.438[I][      main][DefaultLifecycleProcessor               ][ 343] →→→ Starting beans in phase 0
11-03 00:54:42.442[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
11-03 00:54:42.451[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
11-03 00:54:42.472[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
11-03 00:54:42.477[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
11-03 00:54:42.481[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
11-03 00:54:42.485[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
11-03 00:54:42.489[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
11-03 00:54:42.494[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
11-03 00:54:42.500[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
11-03 00:54:42.508[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
11-03 00:54:42.512[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
11-03 00:54:42.515[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
11-03 00:54:42.518[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
11-03 00:54:42.521[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
11-03 00:54:42.559[I][      main][Http11NioProtocol                       ][ 179] →→→ Initializing ProtocolHandler ["http-nio-auto-1"]
11-03 00:54:42.633[I][      main][Http11NioProtocol                       ][ 179] →→→ Starting ProtocolHandler ["http-nio-auto-1"]
11-03 00:54:43.373[I][      main][NioSelectorPool                         ][ 179] →→→ Using a shared selector for servlet write/read
11-03 00:54:43.456[I][      main][TomcatEmbeddedServletContainer          ][ 201] →→→ Tomcat started on port(s): 49940 (http)
11-03 00:54:43.458[I][      main][EurekaAutoServiceRegistration           ][ 117] →→→ Updating port to 49940
11-03 00:54:43.477[I][      main][InstanceInfoFactory                     ][  70] →→→ Setting initial instance status as: STARTING
11-03 00:54:43.578[I][      main][DiscoveryClient                         ][ 344] →→→ Initializing Eureka in region us-east-1
11-03 00:54:45.339[I][      main][DiscoveryJerseyProvider                 ][  70] →→→ Using JSON encoding codec LegacyJacksonJson
11-03 00:54:45.340[I][      main][DiscoveryJerseyProvider                 ][  71] →→→ Using JSON decoding codec LegacyJacksonJson
11-03 00:54:46.379[I][      main][DiscoveryJerseyProvider                 ][  80] →→→ Using XML encoding codec XStreamXml
11-03 00:54:46.380[I][      main][DiscoveryJerseyProvider                 ][  81] →→→ Using XML decoding codec XStreamXml
11-03 00:54:47.624[I][      main][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
11-03 00:54:48.806[I][      main][DiscoveryClient                         ][ 920] →→→ Disable delta property : false
11-03 00:54:48.807[I][      main][DiscoveryClient                         ][ 921] →→→ Single vip registry refresh property : null
11-03 00:54:48.807[I][      main][DiscoveryClient                         ][ 922] →→→ Force full registry fetch : false
11-03 00:54:48.808[I][      main][DiscoveryClient                         ][ 923] →→→ Application is null : false
11-03 00:54:48.858[I][      main][DiscoveryClient                         ][ 924] →→→ Registered Applications size is zero : true
11-03 00:54:48.859[I][      main][DiscoveryClient                         ][ 926] →→→ Application version is -1: true
11-03 00:54:48.860[I][      main][DiscoveryClient                         ][1009] →→→ Getting all instance registry info from the eureka server
11-03 00:54:49.431[I][      main][DiscoveryClient                         ][1018] →→→ The response status is 200
11-03 00:54:49.436[I][      main][DiscoveryClient                         ][1244] →→→ Starting heartbeat executor: renew interval is: 10
11-03 00:54:49.441[I][      main][InstanceInfoReplicator                  ][  59] →→→ InstanceInfoReplicator onDemand update allowed rate per min is 4
11-03 00:54:49.451[I][      main][DiscoveryClient                         ][ 425] →→→ Discovery Client initialized at timestamp 1541177689451 with initial instances count: 4
11-03 00:54:49.649[I][      main][EurekaServiceRegistry                   ][  40] →→→ Registering application smartmerchant with eureka with status UP
11-03 00:54:49.653[I][      main][DiscoveryClient                         ][1279] →→→ Saw local status change event StatusChangeEvent [timestamp=1541177689653, current=UP, previous=STARTING]
11-03 00:54:49.672[I][plicator-0][DiscoveryClient                         ][ 795] →→→ DiscoveryClient_SMARTMERCHANT/DESKTOP-T8UUSPI:smartmerchant:0: registering service...
11-03 00:54:49.681[I][      main][SmartMerchantStartup                    ][  57] →→→ Started SmartMerchantStartup in 44.723 seconds (JVM running for 45.675)
11-03 00:54:49.688[I][      main][SmartMerchantStartup                    ][  45] →→→ 服务启动完毕，请检查是否有异常...
11-03 00:54:49.773[I][plicator-0][DiscoveryClient                         ][ 804] →→→ DiscoveryClient_SMARTMERCHANT/DESKTOP-T8UUSPI:smartmerchant:0 - registration status: 204
11-03 00:58:54.929[I][o-1-exec-2][[/]                                     ][ 179] →→→ Initializing Spring FrameworkServlet 'dispatcherServlet'
11-03 00:58:54.930[I][o-1-exec-2][DispatcherServlet                       ][ 489] →→→ FrameworkServlet 'dispatcherServlet': initialization started
11-03 00:58:54.960[I][o-1-exec-2][DispatcherServlet                       ][ 508] →→→ FrameworkServlet 'dispatcherServlet': initialization completed in 30 ms
11-03 00:59:48.862[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
11-03 01:04:48.865[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
