11-03 00:00:55.346[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
11-03 00:05:55.361[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
11-03 00:10:55.363[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
11-03 00:15:55.364[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
11-03 00:20:55.367[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
11-03 00:25:55.368[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
11-03 00:30:55.370[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
11-03 00:35:55.371[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
11-03 00:40:55.372[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
11-03 00:45:55.374[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
11-03 00:50:55.377[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
11-03 00:54:15.496[I][      main][AnnotationConfigApplicationContext      ][ 583] →→→ Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4944252c: startup date [Sat Nov 03 00:54:15 CST 2018]; root of context hierarchy
11-03 00:54:16.358[I][      main][AutowiredAnnotationBeanPostProcessor    ][ 155] →→→ JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11-03 00:54:16.495[I][nd-preinit][Version                                 ][  30] →→→ HV000001: Hibernate Validator 5.3.5.Final
11-03 00:54:16.547[I][      main][PostProcessorRegistrationDelegate$BeanPostProcessorChecker][ 325] →→→ Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$66ad766b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11-03 00:54:19.298[I][      main][SmartPaymentStartup                     ][ 597] →→→ The following profiles are active: prod
11-03 00:54:19.350[I][      main][AnnotationConfigEmbeddedWebApplicationContext][ 583] →→→ Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@41e350f1: startup date [Sat Nov 03 00:54:19 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4944252c
11-03 00:54:24.283[I][      main][RepositoryConfigurationDelegate         ][ 165] →→→ Multiple Spring Data modules found, entering strict repository configuration mode!
11-03 00:54:24.615[I][      main][RepositoryConfigurationDelegate         ][ 165] →→→ Multiple Spring Data modules found, entering strict repository configuration mode!
11-03 00:54:24.758[I][      main][RepositoryConfigurationExtensionSupport ][ 270] →→→ Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.smart.pay.payment.repository.PaymentChannelRepository.
11-03 00:54:24.761[I][      main][RepositoryConfigurationExtensionSupport ][ 270] →→→ Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.smart.pay.payment.repository.WithdrawConditionRepository.
11-03 00:54:24.803[I][      main][RepositoryConfigurationExtensionSupport ][ 270] →→→ Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.smart.pay.payment.repository.RealChannelRepository.
11-03 00:54:24.808[I][      main][RepositoryConfigurationExtensionSupport ][ 270] →→→ Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.smart.pay.payment.repository.PaymentChannelRouteRepository.
11-03 00:54:24.810[I][      main][RepositoryConfigurationExtensionSupport ][ 270] →→→ Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.smart.pay.payment.repository.SettlementObjectRepository.
11-03 00:54:24.812[I][      main][RepositoryConfigurationExtensionSupport ][ 270] →→→ Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.smart.pay.payment.repository.PaymentRequestRepository.
11-03 00:54:26.428[I][      main][GenericScope                            ][ 263] →→→ BeanFactory id=7e139210-1591-3461-b0c4-2d974cc8c929
11-03 00:54:26.486[I][      main][AutowiredAnnotationBeanPostProcessor    ][ 155] →→→ JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11-03 00:54:26.804[I][      main][PostProcessorRegistrationDelegate$BeanPostProcessorChecker][ 325] →→→ Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$10ff319c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11-03 00:54:27.404[I][      main][PostProcessorRegistrationDelegate$BeanPostProcessorChecker][ 325] →→→ Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4a93736e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11-03 00:54:27.764[I][      main][PostProcessorRegistrationDelegate$BeanPostProcessorChecker][ 325] →→→ Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$7cc019af] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11-03 00:54:27.804[I][      main][PostProcessorRegistrationDelegate$BeanPostProcessorChecker][ 325] →→→ Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$66ad766b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11-03 00:54:30.598[I][      main][TomcatEmbeddedServletContainer          ][  89] →→→ Tomcat initialized with port(s): 0 (http)
11-03 00:54:30.627[I][      main][StandardService                         ][ 179] →→→ Starting service [Tomcat]
11-03 00:54:30.630[I][      main][StandardEngine                          ][ 179] →→→ Starting Servlet Engine: Apache Tomcat/8.5.20
11-03 00:54:32.530[I][tartStop-1][[/]                                     ][ 179] →→→ Initializing Spring embedded WebApplicationContext
11-03 00:54:32.532[I][tartStop-1][ContextLoader                           ][ 276] →→→ Root WebApplicationContext: initialization completed in 13182 ms
11-03 00:54:34.637[I][tartStop-1][ServletRegistrationBean                 ][ 190] →→→ Mapping servlet: 'dispatcherServlet' to [/]
11-03 00:54:34.646[I][tartStop-1][FilterRegistrationBean                  ][ 258] →→→ Mapping filter: 'metricsFilter' to: [/*]
11-03 00:54:34.646[I][tartStop-1][FilterRegistrationBean                  ][ 258] →→→ Mapping filter: 'characterEncodingFilter' to: [/*]
11-03 00:54:34.647[I][tartStop-1][FilterRegistrationBean                  ][ 258] →→→ Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
11-03 00:54:34.647[I][tartStop-1][FilterRegistrationBean                  ][ 258] →→→ Mapping filter: 'httpPutFormContentFilter' to: [/*]
11-03 00:54:34.647[I][tartStop-1][FilterRegistrationBean                  ][ 258] →→→ Mapping filter: 'requestContextFilter' to: [/*]
11-03 00:54:34.648[I][tartStop-1][FilterRegistrationBean                  ][ 258] →→→ Mapping filter: 'webRequestLoggingFilter' to: [/*]
11-03 00:54:34.648[I][tartStop-1][FilterRegistrationBean                  ][ 258] →→→ Mapping filter: 'applicationContextIdFilter' to: [/*]
11-03 00:54:35.985[I][      main][DruidDataSource                         ][ 922] →→→ {dataSource-1} inited
11-03 00:54:38.079[I][      main][LocalContainerEntityManagerFactoryBean  ][ 349] →→→ Building JPA container EntityManagerFactory for persistence unit 'default'
11-03 00:54:38.261[I][      main][LogHelper                               ][  31] →→→ HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
11-03 00:54:38.576[I][      main][Version                                 ][  37] →→→ HHH000412: Hibernate Core {5.0.12.Final}
11-03 00:54:38.580[I][      main][Environment                             ][ 213] →→→ HHH000206: hibernate.properties not found
11-03 00:54:38.584[I][      main][Environment                             ][ 317] →→→ HHH000021: Bytecode provider name : javassist
11-03 00:54:38.808[I][      main][Version                                 ][  66] →→→ HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
11-03 00:54:40.091[I][      main][Dialect                                 ][ 156] →→→ HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
11-03 00:54:42.582[I][      main][LocalContainerEntityManagerFactoryBean  ][ 379] →→→ Initialized JPA EntityManagerFactory for persistence unit 'default'
11-03 00:54:43.923[I][      main][QueryTranslatorFactoryInitiator         ][  47] →→→ HHH000397: Using ASTQueryTranslatorFactory
11-03 00:54:45.412[I][      main][ThreadPoolTaskExecutor                  ][ 165] →→→ Initializing ExecutorService 
11-03 00:54:45.432[I][      main][ThreadPoolTaskExecutor                  ][ 165] →→→ Initializing ExecutorService  'myAsync'
11-03 00:54:50.103[W][      main][URLConfigurationSource                  ][ 121] →→→ No URLs will be polled as dynamic configuration sources.
11-03 00:54:50.117[I][      main][URLConfigurationSource                  ][ 122] →→→ To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
11-03 00:54:50.132[W][      main][URLConfigurationSource                  ][ 121] →→→ No URLs will be polled as dynamic configuration sources.
11-03 00:54:50.132[I][      main][URLConfigurationSource                  ][ 122] →→→ To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
11-03 00:54:51.342[I][      main][RequestMappingHandlerAdapter            ][ 534] →→→ Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@41e350f1: startup date [Sat Nov 03 00:54:19 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4944252c
11-03 00:54:51.819[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartpayment/pay/channel/code],methods=[POST]}" onto public java.lang.Object com.smart.pay.payment.controller.PaymentChannelController.queryPaymentChannelByChannelcode(javax.servlet.http.HttpServletRequest,java.lang.String)
11-03 00:54:51.822[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartpayment/channelroute/status/update],methods=[POST]}" onto public java.lang.Object com.smart.pay.payment.controller.PaymentChannelController.updateChannelRouteStatus(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
11-03 00:54:51.825[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartpayment/pay/channel/all],methods=[POST]}" onto public java.lang.Object com.smart.pay.payment.controller.PaymentChannelController.queryAllPaymentChannel(javax.servlet.http.HttpServletRequest)
11-03 00:54:51.833[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartpayment/pay/channel/del],methods=[POST]}" onto public java.lang.Object com.smart.pay.payment.controller.PaymentChannelController.deletePaymentChannel(javax.servlet.http.HttpServletRequest,java.lang.String)
11-03 00:54:51.834[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartpayment/pay/realchannel/all],methods=[POST]}" onto public java.lang.Object com.smart.pay.payment.controller.PaymentChannelController.queryAllPaymentRealChannel(javax.servlet.http.HttpServletRequest)
11-03 00:54:51.835[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartpayment/platform/pay/channel/all],methods=[POST]}" onto public java.lang.Object com.smart.pay.payment.controller.PaymentChannelController.queryAllPCPaymentChannel(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
11-03 00:54:51.836[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartpayment/platform/pay/realchannel/all],methods=[POST]}" onto public java.lang.Object com.smart.pay.payment.controller.PaymentChannelController.queryAllPCPaymentRealChannel(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
11-03 00:54:51.838[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartpayment/pay/realchannel/del],methods=[POST]}" onto public java.lang.Object com.smart.pay.payment.controller.PaymentChannelController.deletePaymentRealChannel(javax.servlet.http.HttpServletRequest,java.lang.String)
11-03 00:54:51.840[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartpayment/pay/route/query],methods=[POST]}" onto public java.lang.Object com.smart.pay.payment.controller.PaymentChannelController.queryChannelRoute(javax.servlet.http.HttpServletRequest,java.lang.String,int,int,org.springframework.data.domain.Sort$Direction,java.lang.String) throws java.lang.Exception
11-03 00:54:51.843[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartpayment/pay/channel/new],methods=[POST]}" onto public java.lang.Object com.smart.pay.payment.controller.PaymentChannelController.updatePaymentChannel(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
11-03 00:54:51.844[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartpayment/pay/realchannel/new],methods=[POST]}" onto public java.lang.Object com.smart.pay.payment.controller.PaymentChannelController.addRealChannel(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.math.BigDecimal,java.math.BigDecimal,java.lang.String,java.lang.String,int,java.lang.String)
11-03 00:54:51.845[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartpayment/pay/route/del],methods=[POST]}" onto public java.lang.Object com.smart.pay.payment.controller.PaymentChannelController.delChannelRoute(javax.servlet.http.HttpServletRequest,long) throws java.lang.Exception
11-03 00:54:51.849[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartpayment/pay/route/new],methods=[POST]}" onto public java.lang.Object com.smart.pay.payment.controller.PaymentChannelController.addChannelRoute(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int) throws java.lang.Exception
11-03 00:54:51.860[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartpayment/pay/withdraw/condition/new],methods=[POST]}" onto public java.lang.Object com.smart.pay.payment.controller.PaymentController.addwithdrawcondition(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
11-03 00:54:51.865[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartpayment/pay/withdraw/condition/query],methods=[POST]}" onto public java.lang.Object com.smart.pay.payment.controller.PaymentController.querywithdrawcondition(javax.servlet.http.HttpServletRequest)
11-03 00:54:51.866[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartpayment/pay/order/query],methods=[POST]}" onto public java.lang.Object com.smart.pay.payment.controller.PaymentController.orderquery(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
11-03 00:54:51.867[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartpayment/pay/withdraw],methods=[POST]}" onto public java.lang.Object com.smart.pay.payment.controller.PaymentController.withdraw(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
11-03 00:54:51.868[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartpayment/pay/gateway],methods=[POST]}" onto public java.lang.Object com.smart.pay.payment.controller.PaymentController.payIndex(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
11-03 00:54:51.890[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartpayment/pay/withdraw/auth],methods=[POST]}" onto public java.lang.Object com.smart.pay.payment.controller.PaymentController.authwithdraw(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
11-03 00:54:51.891[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartpayment/pay/gateway/withdraw],methods=[POST]}" onto public java.lang.Object com.smart.pay.payment.controller.PaymentController.withdrawindex(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
11-03 00:54:51.892[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartpayment/settlementobj/new],methods=[POST]}" onto public java.lang.Object com.smart.pay.payment.controller.SettlementObjectController.addNewSettlementObject(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
11-03 00:54:51.893[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartpayment/settlementobj/query],methods=[POST]}" onto public java.lang.Object com.smart.pay.payment.controller.SettlementObjectController.queryAllSettlementObject(javax.servlet.http.HttpServletRequest)
11-03 00:54:51.894[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/smartpayment/settlementobj/del],methods=[POST]}" onto public java.lang.Object com.smart.pay.payment.controller.SettlementObjectController.delSettlementObject(javax.servlet.http.HttpServletRequest,java.lang.String)
11-03 00:54:51.897[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
11-03 00:54:51.898[I][      main][RequestMappingHandlerMapping            ][ 543] →→→ Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
11-03 00:54:52.003[I][      main][SimpleUrlHandlerMapping                 ][ 362] →→→ Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11-03 00:54:52.003[I][      main][SimpleUrlHandlerMapping                 ][ 362] →→→ Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11-03 00:54:52.089[I][      main][ExceptionHandlerExceptionResolver       ][ 273] →→→ Detected @ExceptionHandler methods in getApiExceptionHander
11-03 00:54:52.157[I][      main][SimpleUrlHandlerMapping                 ][ 362] →→→ Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11-03 00:54:54.920[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11-03 00:54:54.922[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
11-03 00:54:54.923[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11-03 00:54:54.924[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
11-03 00:54:54.931[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
11-03 00:54:54.932[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11-03 00:54:54.934[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11-03 00:54:54.939[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
11-03 00:54:54.940[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
11-03 00:54:54.941[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11-03 00:54:54.946[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
11-03 00:54:54.949[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
11-03 00:54:54.950[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11-03 00:54:54.952[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
11-03 00:54:54.954[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11-03 00:54:54.955[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11-03 00:54:54.957[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
11-03 00:54:54.959[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11-03 00:54:54.961[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11-03 00:54:54.962[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
11-03 00:54:54.963[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11-03 00:54:54.964[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11-03 00:54:54.966[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
11-03 00:54:54.970[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
11-03 00:54:54.971[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
11-03 00:54:54.972[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
11-03 00:54:54.973[I][      main][EndpointHandlerMapping                  ][ 543] →→→ Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
11-03 00:54:56.332[I][      main][AnnotationMBeanExporter                 ][ 431] →→→ Registering beans for JMX exposure on startup
11-03 00:54:56.333[I][      main][AnnotationMBeanExporter                 ][ 916] →→→ Bean with name 'getDataSource' has been autodetected for JMX exposure
11-03 00:54:56.350[I][      main][AnnotationMBeanExporter                 ][ 916] →→→ Bean with name 'environmentManager' has been autodetected for JMX exposure
11-03 00:54:56.352[I][      main][AnnotationMBeanExporter                 ][ 916] →→→ Bean with name 'rabbitConnectionFactory' has been autodetected for JMX exposure
11-03 00:54:56.358[I][      main][AnnotationMBeanExporter                 ][ 916] →→→ Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
11-03 00:54:56.371[I][      main][AnnotationMBeanExporter                 ][ 916] →→→ Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
11-03 00:54:56.373[I][      main][AnnotationMBeanExporter                 ][ 916] →→→ Bean with name 'restartEndpoint' has been autodetected for JMX exposure
11-03 00:54:56.374[I][      main][AnnotationMBeanExporter                 ][ 916] →→→ Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
11-03 00:54:56.376[I][      main][AnnotationMBeanExporter                 ][ 916] →→→ Bean with name 'refreshScope' has been autodetected for JMX exposure
11-03 00:54:56.380[I][      main][AnnotationMBeanExporter                 ][ 678] →→→ Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
11-03 00:54:56.415[I][      main][AnnotationMBeanExporter                 ][ 671] →→→ Located MBean 'getDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=getDataSource,type=DruidDataSource]
11-03 00:54:56.418[I][      main][AnnotationMBeanExporter                 ][ 678] →→→ Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
11-03 00:54:57.372[I][      main][AnnotationMBeanExporter                 ][ 678] →→→ Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
11-03 00:54:57.551[I][      main][AnnotationMBeanExporter                 ][ 678] →→→ Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
11-03 00:54:57.715[I][      main][AnnotationMBeanExporter                 ][ 678] →→→ Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=41e350f1,type=ConfigurationPropertiesRebinder]
11-03 00:54:57.727[I][      main][AnnotationMBeanExporter                 ][ 678] →→→ Located managed bean 'rabbitConnectionFactory': registering with JMX server as MBean [org.springframework.amqp.rabbit.connection:name=rabbitConnectionFactory,type=CachingConnectionFactory]
11-03 00:54:57.742[I][      main][AnnotationMBeanExporter                 ][ 678] →→→ Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
11-03 00:54:57.751[I][      main][EndpointMBeanExporter                   ][ 431] →→→ Registering beans for JMX exposure on startup
11-03 00:54:58.320[I][      main][DefaultLifecycleProcessor               ][ 343] →→→ Starting beans in phase 0
11-03 00:54:58.324[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
11-03 00:54:58.335[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
11-03 00:54:58.353[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
11-03 00:54:58.360[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
11-03 00:54:58.365[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
11-03 00:54:58.370[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
11-03 00:54:58.379[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
11-03 00:54:58.384[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
11-03 00:54:58.401[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
11-03 00:54:58.410[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
11-03 00:54:58.415[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
11-03 00:54:58.419[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
11-03 00:54:58.463[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
11-03 00:54:58.470[I][      main][EndpointMBeanExporter                   ][ 678] →→→ Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
11-03 00:54:58.474[I][      main][DefaultLifecycleProcessor               ][ 343] →→→ Starting beans in phase 2147483647
11-03 00:54:58.520[I][      main][Http11NioProtocol                       ][ 179] →→→ Initializing ProtocolHandler ["http-nio-auto-1"]
11-03 00:54:58.549[I][      main][Http11NioProtocol                       ][ 179] →→→ Starting ProtocolHandler ["http-nio-auto-1"]
11-03 00:54:58.576[I][      main][NioSelectorPool                         ][ 179] →→→ Using a shared selector for servlet write/read
11-03 00:54:58.859[I][      main][TomcatEmbeddedServletContainer          ][ 201] →→→ Tomcat started on port(s): 49953 (http)
11-03 00:54:58.860[I][      main][EurekaAutoServiceRegistration           ][ 117] →→→ Updating port to 49953
11-03 00:54:58.911[I][      main][InstanceInfoFactory                     ][  70] →→→ Setting initial instance status as: STARTING
11-03 00:54:59.424[I][      main][DiscoveryClient                         ][ 344] →→→ Initializing Eureka in region us-east-1
11-03 00:55:00.624[I][      main][DiscoveryJerseyProvider                 ][  70] →→→ Using JSON encoding codec LegacyJacksonJson
11-03 00:55:00.624[I][      main][DiscoveryJerseyProvider                 ][  71] →→→ Using JSON decoding codec LegacyJacksonJson
11-03 00:55:00.912[I][      main][DiscoveryJerseyProvider                 ][  80] →→→ Using XML encoding codec XStreamXml
11-03 00:55:00.913[I][      main][DiscoveryJerseyProvider                 ][  81] →→→ Using XML decoding codec XStreamXml
11-03 00:55:01.642[I][      main][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
11-03 00:55:02.333[I][      main][DiscoveryClient                         ][ 920] →→→ Disable delta property : false
11-03 00:55:02.334[I][      main][DiscoveryClient                         ][ 921] →→→ Single vip registry refresh property : null
11-03 00:55:02.335[I][      main][DiscoveryClient                         ][ 922] →→→ Force full registry fetch : false
11-03 00:55:02.337[I][      main][DiscoveryClient                         ][ 923] →→→ Application is null : false
11-03 00:55:02.337[I][      main][DiscoveryClient                         ][ 924] →→→ Registered Applications size is zero : true
11-03 00:55:02.338[I][      main][DiscoveryClient                         ][ 926] →→→ Application version is -1: true
11-03 00:55:02.338[I][      main][DiscoveryClient                         ][1009] →→→ Getting all instance registry info from the eureka server
11-03 00:55:02.846[I][      main][DiscoveryClient                         ][1018] →→→ The response status is 200
11-03 00:55:02.858[I][      main][DiscoveryClient                         ][1244] →→→ Starting heartbeat executor: renew interval is: 10
11-03 00:55:02.868[I][      main][InstanceInfoReplicator                  ][  59] →→→ InstanceInfoReplicator onDemand update allowed rate per min is 4
11-03 00:55:02.873[I][      main][DiscoveryClient                         ][ 425] →→→ Discovery Client initialized at timestamp 1541177702873 with initial instances count: 4
11-03 00:55:03.021[I][      main][EurekaServiceRegistry                   ][  40] →→→ Registering application smartpayment with eureka with status UP
11-03 00:55:03.022[I][      main][DiscoveryClient                         ][1279] →→→ Saw local status change event StatusChangeEvent [timestamp=1541177703022, current=UP, previous=STARTING]
11-03 00:55:03.026[I][plicator-0][DiscoveryClient                         ][ 795] →→→ DiscoveryClient_SMARTPAYMENT/DESKTOP-T8UUSPI:smartpayment:0: registering service...
11-03 00:55:03.061[I][      main][SmartPaymentStartup                     ][  57] →→→ Started SmartPaymentStartup in 49.921 seconds (JVM running for 52.162)
11-03 00:55:03.061[I][      main][SmartPaymentStartup                     ][  43] →→→ 服务启动完毕，请检查是否有异常...
11-03 00:55:03.305[I][plicator-0][DiscoveryClient                         ][ 804] →→→ DiscoveryClient_SMARTPAYMENT/DESKTOP-T8UUSPI:smartpayment:0 - registration status: 204
11-03 01:00:02.342[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
11-03 01:05:02.343[I][executor-0][ConfigClusterResolver                   ][  43] →→→ Resolving eureka endpoints via configuration
